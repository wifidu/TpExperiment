-- MySQL dump 10.17  Distrib 10.3.17-MariaDB, for debian-linux-gnu (x86_64)
--
-- Host: localhost    Database: test
-- ------------------------------------------------------
-- Server version	10.3.17-MariaDB-0+deb10u1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `think_blog`
--

DROP TABLE IF EXISTS `think_blog`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `think_blog` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '博客id',
  `title` varchar(100) NOT NULL COMMENT '博客标题',
  `title_img` varchar(200) DEFAULT NULL COMMENT '标题图片',
  `is_hot` tinyint(3) unsigned NOT NULL DEFAULT 0 COMMENT '是否热门',
  `is_top` tinyint(3) unsigned NOT NULL DEFAULT 0 COMMENT '是否置顶',
  `cate_id` int(10) NOT NULL COMMENT '栏目主键',
  `user_id` int(10) NOT NULL COMMENT '用户主键',
  `content` text NOT NULL COMMENT '文章内容',
  `read_amount` int(11) NOT NULL DEFAULT 0 COMMENT '阅读量',
  `status` tinyint(4) NOT NULL DEFAULT 1 COMMENT '0隐藏1显示',
  `create_time` int(11) DEFAULT NULL,
  `update_time` int(11) DEFAULT NULL,
  `stars` int(11) DEFAULT 0 COMMENT '点赞数',
  `view` int(11) DEFAULT 0 COMMENT '浏览量',
  `collected` int(10) DEFAULT 0 COMMENT '被收藏数目',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=58 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `think_blog`
--

LOCK TABLES `think_blog` WRITE;
/*!40000 ALTER TABLE `think_blog` DISABLE KEYS */;
INSERT INTO `think_blog` VALUES (1,'\nLinux 系统管理总结 ',NULL,0,0,1,12,'1，什么是进程？\n\n进程是正在执行的一个程序或者命令，每一个进程都是一个运行实体，都有自己的地址空间，并占用一定的系统资源。\n2，进程管理作用？\n\n判断服务器健康状态\n\n产看系统中所有的进程\n\n杀死进程\n\n== 查看进程命令 ==\nps\n命令行 	说明\nps -aux 	查看系统中所有进程，BSD 操作系统格式\nps a 	显示现行终端机下的所有程序，包括其他用户的程序\nps u 	展示进程用户信息\nps x 	显示所有程序，不以终端机来区分\nps -le 	查看系统所有进程 linux 标准命令格式\nps -A 	显示所有程序\n\n命令行结果说明\n名词 	说明\nUSER 	该进程是由哪个用户产生的\nPID 	进程 ID 号\n%CPU 	该进程占用 CPU 百分比\n%MEM 	该进程占用物理内存百分比\nVSZ 	该进程占用虚拟内存大小 KB\nRSS 	该进程占用实际物理内存大小 KB\nTTY 	该进程是在哪个终端运行的，其中 tty1-tty7 代表本地终端，tty1-tty6 本地字符界面终端，tty7 图形终端，pts/0-256 虚拟终端即最多支持 256 个远程登录\nSTAT 	当前进程状态，S：睡眠中止 s: 包含子进程 R：运行 T: 停止 Z：僵死\nTIME 	进程执行起到现在总的 CPU 占用时间\nSTART 	进程启动时间\nCOMMAND 	产生此进程的命令名\ntop\n命令行 	说明\ntop 【-d 秒数】 	指定 top 命令每个几秒更新一次，默认是 3 秒\nP 	shift+P 按照 CPU 排序\n:M 	shift+M 按照内存排序\n:N 	shift+N 按照 PID 排序\nq: 	退出 top\n？或者 h: 	显示帮助\n\ntop 命令结果\n\n第一行信息为任务信息队列\n\nload avaerage:0.00 0.00 0.00 分别表示 系统在之前 1 分钟，5 分钟，15 分钟的平均负载，如果是单核则 一般认为小于 1 时，负载较小，大于 1 时负载较大\n\n第二行为 CPU 信息\n%Cpu(s):\n\n0.1us: 用户模式占用的 CPU 百分比\n\n0.1sy: 系统模式占用的 CPU 百分比\n\n0.1ni: 改变过优先级的用户进程占用的 CPU 百分比\n\n1.1id: 空闲 CPU 的 CPU 百分比\n\n0.1wa: 等待输入 / 输出的进程的占用 CPU 百分比\n\n0.1hi: 硬中断请求服务占用的 CPU 百分比\n\n0.1si: 软中断请求服务占用的 CPU 百分比\n\n0.1st: 虚拟时间百分比，即当有虚拟机时候，虚拟 CPU 等待\n实际 CPU 的时间百分比\n\n第三行为 物理内存 信息\n\n第四行为 交换分区 (swap) 信息\npstree\n\n查看进程树，即用于查看进程树之间的关系，即哪个进程是父进程，哪个是子进程，可以清楚的看出来是谁创建了谁\n命令行 	说明\npstree -A 	各进程之间的连接以 ASCII 码字符来连接\npstree -U 	各进程之间的连接以 utf8 字符来连接\npstree -p 	同时列出各个进程 pid\npstree -u 	同时列出每个进程所属用户\n\n== 终止进程 ==\nkill\n命令行 	说明\nkill pid 	终止进程\nkill -9 pid 	强制终止\nkill -l pid 	重启进程\nkillall 进程名 	终止一类进程 后面跟进程名\npkill -t 终端号 	剔除用户\nw 	查看终端用户\n\n== 工作管理 ==\njobs -l\n\n显示后台工作的 ID\n\n+ 号代表最近一个放入后台的工作，也是工作恢复时候，默认恢复的工作\n\n- 号 代表倒数第二个放入后台的工作\n\nCtr+Z 代表 将工作放入后台 暂停状态\n\n& 代表 将工作放入后台运行\n命令行 	说明\nfg % 工作号 	将后台任务恢复到前台\nbg % 工作号 	将前台任务恢复到后台\n\n后台恢复的执行命令，是不能和前台有交互的，否则不能恢复到后台执行\n\n== 系统资源查看 ==\nfree 查看内存使用状态\n命令行 	说明\nfree [-b/-k/-m/-g] 	以字节 / KB/MB/GB 为单位展示\ncat /proc/cpuinfo 	查看 CPU 信\ndmesg | grep cpu 	查看 CPU 信\nuptime 	显示系统启动时间和平均负载，也就是 top 命令第一行，w 命令也可以看到\nuname [-a|-r|-s] 	查看系统与内核信息，-a 查看所有 -r 内核版本 -s 内核名称\nfile /bin/ls 	查看系统的位数\nlsb_release -a 	查看系统发型版本\nlsof [-c 字符串 |-u 用户名 |-p 进程 ID] 	列出进程打开或者使用的文件 -c ：列出文件开头的进程文件 -u: 列出某个用户进程文件 -p: 列出某个进程 ID 的文件\n\n缓存和缓冲区别？\n\n缓存 (cache) 是用来加速数据从硬盘中读取的，缓冲 (buffer) 是用来加速数据写入硬盘的\n\n== 系统定时任务 ==\n\ncrond 服务管理与访问控制\n\ncrond 一般是默认启动的\n\nservice crond restart\n\nchkconfig crond on\n\ncrontab 用户的 crontab 设置\n命令行 	说明\ncrontab -e 	编辑 crontab 定时任务\ncrontab -l 	查询 contab 定时任务\ncrontab -r 	删除当前用户的所有的 crontab 任务\n\n* * * * * php /mnt/d/CODE/MY/EighthWorld/artisan schedule:run >> /home/fantasy/error.log 2>&1\n\n第一个*：一个小时的第几分钟 0-59\n第二个*：一天中的第几小时 0-23\n第三个*：一个月中的第几天   1-31\n第四个*：一年中的第几月   1-12\n第五个*：一周的星期几  0-7（0和7都代表周日）\n\n符号 	说明\n* 	代表任何时间，比如一个 * 代表一个小时中的每分钟都执行一次的意思\n， 	代表不连续的时间，比如 0 8,12,16 * 代表每天对的 8 点 0 分，12 点 0 分，16 点 0 分执行\n- 	代表连续的时间范围，比如 0 5 1-6，代表周一到周六每天 5 点 0 分执行\n*/n 	代表每隔多久执行一次，比如 /10 * , 代表每隔 10 分钟执行一次',0,1,1569131373,1569131373,0,0,0),(2,'我的第一个博客！',NULL,0,0,1,12,'啦啦啦，嘻嘻嘻啦啦啦，嘻嘻嘻啦啦啦，嘻嘻嘻啦啦啦，嘻嘻嘻啦啦啦，嘻嘻嘻啦啦啦，嘻嘻嘻啦啦啦，嘻嘻嘻啦啦啦，嘻嘻嘻啦啦啦，嘻嘻嘻啦啦啦，嘻嘻嘻啦啦啦，嘻嘻嘻啦啦啦，嘻嘻嘻啦啦啦，嘻嘻嘻啦啦啦，嘻嘻嘻',0,1,1569131455,1569131455,0,0,0),(3,'我的第二个博客！！！',NULL,0,0,1,12,'添加了sweetalert！呵呵哈哈哈哈',0,1,1569134363,1569134363,0,0,0),(4,'我的第二个博客！！！',NULL,0,0,1,12,'添加了sweetalert！呵呵哈哈哈哈',0,1,1569134365,1569134365,0,0,0),(5,'我的第二个博客！！！',NULL,0,0,1,12,'添加了sweetalert！呵呵哈哈哈哈',0,1,1569134374,1569134374,0,0,0),(6,'爱上打算的',NULL,0,0,1,12,'爱上打算打算的',0,1,1569134832,1569134832,0,0,0),(7,'爱上打算的',NULL,0,0,1,12,'爱上打算打算的',0,1,1569134833,1569134833,0,0,0),(8,'爱上打算的',NULL,0,0,1,12,'爱上打算打算的',0,1,1569134834,1569134834,0,0,0),(9,'爱上打算的',NULL,0,0,1,12,'爱上打算打算的',0,1,1569134834,1569134834,0,0,0),(10,'爱上打算的',NULL,0,0,1,12,'爱上打算打算的',0,1,1569134835,1569134835,0,0,0),(11,'\nThinkPHP5-使用 think-API 部署 JWT ',NULL,0,0,1,12,'因为下一个项目要用 TP5 开发一个小程序，所以就使用到了，TP 框架，因为小程序开发需要后台来编写 api 接口，所以就上网查了一下有没有相关的依赖，在此推荐一下 think-api 扩展工具，因为主要想使用其中的 jwt 功能来判断小程序用户的登录状态，下面就以本人的项目为例，简单和大家聊一下，通过 think-api 来部署 JWT。\n1. 安装依赖\n\n本人使用的 TP 版本是 TP5.1，扩展下载地址：https://github.com/czewail/think-api ，通过 composer 安装依赖：\n\n$ composer require zewail/think-api:1.1.x\n\n2. 配置说明\n\n扩展安装完毕后，咱们可以在 vendor/think-api/config/jwt.php 文件中查看 jwt 的配置。\n\n主要是用户模型路径那块，需要修改一下：\n\nreturn [\n    // 加密算法\n    \'algorithm\'      => \'HS256\',\n    // HMAC算法使用的加密字符串\n    \'key\'            => \'ex-key\',\n    // RSA算法使用的私钥文件路径\n    \'privateKeyPath\' => \'/home/rsa_private_key.pem\',\n    // RSA算法使用的公钥文件路径\n    \'publicKeyPath\'  => \'/home/rsa_public_key.pem\',\n    // 误差时间，单位秒\n    \'deviation\'      => 60,\n    // 过期时间, 单位分钟\n    \'ttl\'            => 120,\n    // 用户模型路径\n    \'user\'           => app\\api\\model\\User::class,\n];\n\n3. 创建 API 接口控制器\n\n通过命令行创建我们想要反回 Token 给前端的控制器\n\n$ php thnk make:controller api/Index\n\n4. 引用依赖\n\n在创建的文件头添加文件路径：use Zewail\\Api\\Facades\\JWT; 案例代码如下：\n\n    public function index()\n    {\n        //获取前台发送过来的登录信息\n        $tel      = $this->request->tel;\n        $password = $this->request->passwword;\n        //把登录信息传入JWT验证匹配\n        $credentials = [\'tel\' => $tel, \'password\' => $password];\n        //1.验证通过返回token  1和2任意取一种方式\n        $token = JWT::attempt($credentials);\n        //2.通过已有账户模型生成token  1和2任意取一种方式\n        $user  = User::find(84);\n        $token = JWT::fromUser($user);\n        $msg   = \"验证成功\";\n        //把token发送给前台确认是否成功登陆\n        return $this->ApiSuccess($token, $msg);\n    }\n\n有一点需要注意因为 API 离默认的接收参数是 mobile 和 password 。上门的例子中是 tel 和 password 。更改了变量名称，所以我们需要在用户模型中接入一下代码来说明。以此类推。\npublic $jwtSub = \'tel\';\n5. 配置路由\n\n在 route/route.php 中加入路由地址 Route::get(\'api/test\', \'api/Index/index\');\n6. 运行测试\n\n在 postman 中测试结果如下，这样咱们就可以在后台生成 token 返给前台验证登录了。\n\nThinkPhp5-使用think-api部署JWT\n7. 验证 token (补充)\n\n我们在 postman 中把之前生成的 token 已头部的方式重新发送到后台，来进行 token 验证，以下图为例。\n\nThinkPHP5-使用 think-API 部署 JWT\n\n之后携带头部访问验证路由，验证代码如下：\n\n       if ($user = JWT::authenticate()) {\n                return true;\n        } \n\n如果验证无误就会返回 true。\n8. 关于 token 不存在及 token 过期的问题处理（补充）\n\n在 vendor\\think-api\\src\\JWT/Factories\\code.php 文件中 think-api 接口为咱们提供了对应的错误反馈。\n\n// 检查是否过期\nif (isset($payload->exp) && (time() - $this->deviation) >= $payload->exp) {\n    throw new TokenExpiredException(\'该 Token 已过期\');\n}\n// 验证签名\nif (!$this->verify(\"$header64.$payload64\", $signature)) {\n    throw new TokenInvalidException(\'无效的 Token\');\n}\n\n那么咱们如何利用这些状态反馈呢，这就要使用前置中间件的方式来对前端发送的 token 信息进行验证。\n\n首先创建中间件：\n\n$ php think make:middle Test \n\n然后在中间件中写入以下内容：\n\n    //用try catch捕获报错反馈\n    public function handle($request, Closure $next)\n    {\n        try {\n            if (!$user = JWT::authenticate()) {\n                return response()->json([\n                    \'errcode\' => 1004,\n                    \'errmsg\'  => \'无此用户\',\n\n                ], 404);\n            }\n            return $next($request);\n\n        } catch (TokenExpiredException $e) {\n\n            return response()->json([\n                \'errcode\' => 1003,\n                \'errmsg\'  => \'token 过期\', //token已过期\n            ]);\n\n        } catch (TokenInvalidException $e) {\n\n            return response()->json([\n                \'errcode\' => 1002,\n                \'errmsg\'  => \'token 无效\', //token无效\n            ]);\n\n        } catch (JWTException $e) {\n\n            return response()->json([\n                \'errcode\' => 1001,\n                \'errmsg\'  => \'缺少token\', //token为空\n            ]);\n\n        }\n    }\n\n之后再在路由上门引用就可以了。 ',0,1,1569140116,1569140116,0,0,0),(12,'HTML笔记',NULL,0,0,1,12,'font-family:\'Microsoft YaHei\'。\r\n\r\n1、网页字体样式华文黑体：STHeiti\r\n\r\n2、网页字体样式华文楷体：STKaiti\r\n\r\n3、网页字体样式华文宋体：STSong\r\n\r\n4、网页字体样式华文仿宋：STFangsong\r\n\r\n5、网页字体样式黑体：SimHei\r\n\r\n6、网页字体样式宋体：SimSun\r\n\r\n7、网页字体样式新宋体：NSimSun\r\n\r\n8、网页字体样式仿宋：FangSong\r\n\r\n9、网页字体样式楷体：KaiTi\r\n\r\n10、网页字体样式仿宋_GB2312：FangSong_GB2312\r\n\r\n11、网页字体样式楷体_GB2312：KaiTi_GB2312\r\n\r\n12、网页字体样式微软正黑体：Microsoft JhengHei\r\n\r\n13、网页字体样式微软雅黑体：Microsoft YaHei\r\n\r\n14、网页字体样式隶书：LiSu\r\n\r\n15、网页字体样式幼圆：YouYuan\r\n\r\n16、网页字体样式华文细黑：STXihei\r\n\r\n17、网页字体样式华文楷体：STKaiti\r\n\r\n18、网页字体样式华文宋体：STSong\r\n\r\n19、网页字体样式华文中宋：STZhongsong\r\n\r\n20、网页字体样式华文仿宋：STFangsong\r\n\r\n21、网页字体样式方正舒体：FZShuTi\r\n\r\n22、网页字体样式方正姚体：FZYaoti\r\n\r\n23、网页字体样式华文彩云：STCaiyun\r\n\r\n24、网页字体样式华文琥珀：STHupo\r\n\r\n25、网页字体样式华文隶书：STLiti\r\n\r\n26、网页字体样式华文行楷：STXingkai\r\n\r\n27、网页字体样式华文新魏：STXinwei\r\n\r\n扩展资料\r\n\r\nhtml内容描述\r\n\r\n<h1></h1> 最大的标题（一号标题）\r\n\r\n<pre></pre> 预先格式化文本 （英文全称：PREformatted）\r\n\r\n<u></u> 下划线（英文全称：Underline）\r\n\r\n<b></b> 黑体字 （英文全称：Bold）\r\n\r\n<i></i> 斜体字 （英文全称：Italics）\r\n\r\n<tt></tt>打字机风格的字体\r\n\r\n<cite></cite>引用，通常是斜体\r\n\r\n<em></em> 强调文本（通常是斜体加黑体、英文全称：EMphasize）\r\n\r\n<strong></strong> 加重文本（通常是斜体加黑体）\r\n\r\n<font size=\"\" color=\"\"></font> 设置字体大小从1到7，颜色使用名字或RGB（中文全称：红绿蓝）的十六进制值\r\n\r\n<BASEFONT></BASEFONT>基准字体标记\r\n\r\n<big></big> 字体加大\r\n\r\n<SMALL></SMALL> 字体缩小\r\n\r\n<DELECT></DELECT> 加删除线\r\n\r\n<CODE></CODE>程式码\r\n\r\n<KBD></KBD>键盘字（英文全称：KeyBoarD）\r\n\r\n<SAMP></SAMP> 范例（英文全称：SAMPle）\r\n\r\n<VAR></VAR> 变量（英文全称：VARiable）\r\n\r\n<BLOCKQUOTE></BLOCKQUOTE> 向右缩排（向右缩进、块引用）\r\n\r\n<DFN></DFN> 述语定义（英文全称：DeFiNe）\r\n\r\n<ADDRESS></ADDRESS>地址标记\r\n\r\n<sup></SUP> 上标字 （英文全称：SUPerscript）\r\n\r\n<SUB></SUB> 下标字（英文全称：SUBscript）\r\n\r\n<xmp>...</xmp>；固定宽度字体（在文件中空白、换行、定位功能有效）\r\n\r\n<plaintext>...</plaintext>；固定宽度字体（不执行标记符号）\r\n\r\n<listing>...</listing> 固定宽度小字体\r\n\r\n<font color=00ff00>...</font>；字体 颜色\r\n\r\n<font size=1>...</font>；字体 大小等于1（最小）。\r\n\r\n<font style =\'font-size:100 px\'>...</font>；字体 样式等于无限增大（100像素）',0,1,1569157587,1569157587,0,0,0),(13,'CSS巧妙实现分隔线的几种方法',NULL,0,0,4,12,'html:\r\n\r\n<div class=\"line_03\"><b></b><span>小小分隔线 inline-block实现</span><b></b></div>\r\n\r\ncss:\r\n\r\n    .demo_line_03{\r\n        width:600px;\r\n    }\r\n    .demo_line_03 b{\r\n        background: #ddd;\r\n        margin-top: 4px;\r\n        display: inline-block;\r\n        width: 180px;\r\n        height: 1px;\r\n        _overflow: hidden;\r\n        vertical-align: middle;\r\n    }\r\n    .demo_line_03 span{\r\n        display: inline-block;\r\n        width: 220px;\r\n        vertical-align: middle;\r\n    }\r\n\r\n\r\n浮动实现分隔线：\r\n点此查看实例展示\r\n\r\nhtml:\r\n\r\n<div class=\"line_04\"><b></b><span>小小分隔线 浮动来实现</span><b></b></div>\r\n\r\n\r\ncss:\r\n\r\n    .demo_line_04{\r\n        width:600px;\r\n    }\r\n    .demo_line_04{\r\n        overflow: hidden;\r\n        _zoom: 1;\r\n    }\r\n    .demo_line_04 b{\r\n        background: #ddd;\r\n        margin-top: 8px;\r\n        float: left;\r\n        width: 26%;\r\n        height: 1px;\r\n        _overflow: hidden;\r\n    }\r\n\r\n\r\n利用字符实现分隔线：\r\n点此查看实例展示\r\n\r\nhtml:\r\n\r\n<div class=\"line_05\">———————————<span>小小分隔线 字符来实现</span>————————————</div>\r\n\r\ncss:\r\n\r\n    .demo_line_05{\r\n        letter-spacing: -1px;\r\n        color: #ddd;\r\n    }\r\n    .demo_line_05 span{\r\n        letter-spacing: 0;\r\n        color: #222;\r\n        margin:0 20px;\r\n    }\r\n\r\n优点：代码简洁 以上简单介绍了分隔线的写法，也许还有其它比较合适的写法，看环境各取所需吧！\r\n\r\n\r\n',0,1,1569158279,1569158279,0,0,0),(14,'html各种分割线',NULL,0,0,4,12,' 各种分割线Html代码\r\n\r\n1、<HR>\r\n\r\n2、<HR align=center width=300 color=#987cb9 SIZE=1>\r\nalign 线条位置（可选left、right、center）；width 线条长度；color 颜色；size 厚度\r\n\r\n二、特效（效果并不是孤立的，可相互组合）\r\n1、两头渐变透明：\r\n<HR style=\"FILTER: alpha(opacity=100,finishopacity=0,style=3)\" width=\"80%\" color=#987cb9 SIZE=3>\r\n\r\n2、纺锤形：\r\n<HR style=\"FILTER: alpha(opacity=100,finishopacity=0,style=2)\" width=\"80%\" color=#987cb9 SIZE=10>\r\n\r\n3、右边渐变透明：\r\n<HR style=\"FILTER: alpha(opacity=100,finishopacity=0,style=1)\" width=\"80%\" color=#987cb9 SIZE=3>\r\n\r\n4、左边渐变透明：\r\n<HR style=\"FILTER: alpha(opacity=0,finishopacity=100,style=1)\" width=\"80%\" color=#987cb9 SIZE=3>\r\n\r\n5、虚线：\r\n<HR style=\"border:1 dashed #987cb9\" width=\"80%\" color=#987cb9 SIZE=1>\r\n\r\n6、双线：\r\n<HR style=\"border:3 double #987cb9\" width=\"80%\" color=#987cb9 SIZE=3>\r\n\r\n7、立体效果：\r\n<HR style=\"FILTER: progid:DXImageTransform.Microsoft.Shadow(color:#987cb9,direction:145,strength:15)\" width=\"80%\" color=#987cb9 SIZE=1>\r\n\r\n8、钢针效果：\r\n<HR style=\"FILTER: progid:DXImageTransform.Microsoft.Glow(color=#987cb9,strength=10)\" width=\"80%\" color=#987cb9 SIZE=1>\r\n\r\n９．垂直分割线\r\n\r\n<table border=\"1px\" cellpadding=\"0\" cellspacing=\"0\" style=\"height:265px;border-left-style:solid; border-bottom-style:none;border-right-style:none;border-top-style:none\">',0,1,1569158788,1569158788,0,0,0),(15,'matplotlib绘制条形图',NULL,0,0,3,15,'import matplotlib.pyplot as plt import numpy as np import matplotlib # 设置matplotlib正常显示中文和负号 matplotlib.rcParams[\'font.sans-serif\']=[\'SimHei\'] # 用黑体显示中文 matplotlib.rcParams[\'axes.unicode_minus\']=False # 正常显示负号 # 随机生成（10000,）服从正态分布的数据 data = np.random.randn(10000) \"\"\"\r\n绘制直方图\r\ndata:必选参数，绘图数据\r\nbins:直方图的长条形数目，可选项，默认为10\r\nnormed:是否将得到的直方图向量归一化，可选项，默认为0，代表不归一化，显示频数。normed=1，表示归一化，显示频率。\r\nfacecolor:长条形的颜色\r\nedgecolor:长条形边框的颜色\r\nalpha:透明度\r\n\"\"\" plt.hist(data, bins=40, normed=0, facecolor=\"blue\", edgecolor=\"black\", alpha=0.7) # 显示横轴标签 plt.xlabel(\"区间\") # 显示纵轴标签 plt.ylabel(\"频数/频率\") # 显示图标题 plt.title(\"频数/频率分布直方图\") plt.show()\r\n————————————————\r\n版权声明：本文为CSDN博主「zxhohai」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。\r\n原文链接：https://blog.csdn.net/hohaizx/article/details/79101322',0,1,1569232954,1569232954,0,0,0),(16,'数组合并阿',NULL,0,0,1,12,'$result = array_map(function($item1, $item2) {\r\n    return [\'id\' => $item1, \'oid\' => $item2];\r\n}, $id, $oid);',0,1,1569234099,1569234099,0,0,0),(17,'An Easy and Fast WYSIWYG Editor',NULL,0,0,4,13,'<p>		</p><h1>Download</h1><p>Click <a href=\"https://github.com/mycolorway/simditor/releases\">Here</a> to download the zip file. You can also install Simditor by bower and npm :</p><ul><li><code>$ npm install simditor</code></li><li><code>$ bower install simditor</code></li></ul><p>Import files below into your web application</p><pre><code><span class=\"nt\">&lt;link</span> <span class=\"na\">rel=</span><span class=\"s\">\"stylesheet\"</span> <span class=\"na\">type=</span><span class=\"s\">\"text/css\"</span> <span class=\"na\">href=</span><span class=\"s\">\"[style path]/simditor.css\"</span> <span class=\"nt\">/&gt;</span>\r\n\r\n<span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span> <span class=\"na\">src=</span><span class=\"s\">\"[script path]/jquery.min.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\r\n<span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span> <span class=\"na\">src=</span><span class=\"s\">\"[script path]/module.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\r\n<span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span> <span class=\"na\">src=</span><span class=\"s\">\"[script path]/hotkeys.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\r\n<span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span> <span class=\"na\">src=</span><span class=\"s\">\"[script path]/uploader.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\r\n<span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span> <span class=\"na\">src=</span><span class=\"s\">\"[script path]/simditor.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\r\n</code></pre><p>Note that</p><ul><li>Simditor is based on <a href=\"http://jquery.com\">jQuery</a> and <a href=\"https://github.com/mycolorway/simple-module\">module.js</a>.</li><li><a href=\"https://github.com/mycolorway/simple-hotkeys\">hotkeys.js</a> is used to bind hotkeys.</li><li><a href=\"https://github.com/mycolorway/simple-uploader\">uploader.js</a> is related to uploading files. You don\'t need to import this file if you don\'t want the uploading feature.</li></ul><h1>Using Simditor in your project</h1><p>To use Simditor, first, you need a <code>textarea</code> element like this：</p><pre><code><span class=\"nt\">&lt;textarea</span> <span class=\"na\">id=</span><span class=\"s\">\"editor\"</span> <span class=\"na\">placeholder=</span><span class=\"s\">\"Balabala\"</span> <span class=\"na\">autofocus</span><span class=\"nt\">&gt;&lt;/textarea&gt;</span>\r\n</code></pre><p>Initialize Simditor：</p><pre><code><span class=\"kd\">var</span> <span class=\"nx\">editor</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">Simditor</span><span class=\"p\">({</span>\r\n  <span class=\"nx\">textarea</span><span class=\"o\">:</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\">\'#editor\'</span><span class=\"p\">)</span>\r\n  <span class=\"c1\">//optional options</span>\r\n<span class=\"p\">});</span>\r\n</code></pre><p><code>textarea</code> is a required option. jQuery Object、HTML Element or Selector String can be passed to this option.</p><p>Some optional options:</p><ul><li><code>placeholder</code> (default: \'\') Placeholder of simditor. Use the placeholder attribute value of the textarea by default.</li><li><code>toolbar</code> (default: true) -  Show the toolbar buttons</li><li><code>toolbarFloat</code> (default: true) - Fixed the toolbar on the top of the browser when scrolling.</li><li><code>toolbarHidden</code> (default: false) - Hide the toolbar.</li><li><code>defaultImage</code> (default: \'images/image.png\') - Default image placeholder. Used when inserting pictures in Simditor.</li><li><code>tabIndent</code> (default: true) - Use \'tab\' key to make indent.</li><li><code>params</code> (default: {}) - Insert a hidden input in textarea to store params (key-value pairs).</li><li><code>upload</code> (default: false) - Accept false or key - value pairs. Extra options for uploading images. e.g. \'url\', \'params\'</li><li><code>pasteImage</code> (default: false) - Support uploading by pasting images from clipboard. Only supported by Firefox and Chrome.</li></ul><p>For more details please refer to <a href=\"https://simditor.tower.im//docs/doc-config.html\">Options Doc</a>.</p><h1>Customize Simditor</h1><p><code>simditor.css</code> is compiled from \'.scss\' source file using <a href=\"http://sass-lang.com/\">Sass</a>. If you want to changethe style of Simditor, you can simply change <code>simditor.scss</code> and reproduce the CSS file.</p><p><code>.editor-style</code> is the layout style of the textarea. Customize this file if you want a different text format.</p><p>Want some special interactions and features? have a look at <a href=\"https://simditor.tower.im/extension.html\">extension library</a>. You can also create your own extensions for Simditor.Sample extensions:</p><ul><li>a feature extension: <a href=\"https://github.com/mycolorway/simditor-autosave\">simditor-autosave</a></li><li>a button extension: <a href=\"https://github.com/mycolorway/simditor-mark\">simditor-mark</a></li></ul><p>	</p>',0,1,1569244673,1569244673,0,0,0),(18,' 基于 tp5.1 的如何简单优雅的书写代码? ',NULL,0,0,1,13,'<blockquote><p>login 模块 三个方法 <code>login</code> <code>loginCheck</code> <code>loginOut</code></p></blockquote><h4>1.<code>login</code> 控制器代码</h4><pre><code>\r\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token scope\">Admin<span class=\"token punctuation\">::</span></span><span class=\"token function\">adminUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">return</span> <span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">\'/admin\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token scope\">Admin<span class=\"token punctuation\">::</span></span><span class=\"token function\">getRemember</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n                <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token scope\">Admin<span class=\"token punctuation\">::</span></span><span class=\"token function\">getRemember</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token keyword\">return</span> <span class=\"token function\">view</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">\'login/login\'</span><span class=\"token punctuation\">,</span><span class=\"token function\">compact</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">\'data\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n            <span class=\"token keyword\">return</span> <span class=\"token function\">view</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">\'login/login\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">loginCheck</span><span class=\"token punctuation\">(</span>Request <span class=\"token variable\">$request</span><span class=\"token punctuation\">,</span> AdminUser <span class=\"token variable\">$user</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$request</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token variable\">$validate</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LoginCheck</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$validate</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">return</span> <span class=\"token function\">msg</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">\'error\'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$validate</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">getError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$user</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">verify_pwd</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$result</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">loginOut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n\r\n        <span class=\"token scope\">Admin<span class=\"token punctuation\">::</span></span><span class=\"token function\">loginOut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">\'/\'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">\'success\'</span><span class=\"token punctuation\">,</span><span class=\"token single-quoted-string string\">\'退出登录\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n</code></pre><h4>2.Admin.php 类</h4><pre><code>\r\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\r\n\r\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">app<span class=\"token punctuation\">\\</span>common</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">use</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>facade<span class=\"token punctuation\">\\</span>Cookie</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">use</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>facade<span class=\"token punctuation\">\\</span>Session</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Admin</span>\r\n<span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">//操作验证session、cookie 信息  语义化代码</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function\">adminUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token scope\">Session<span class=\"token punctuation\">::</span></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">\'app.user_info_session\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$user</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function\">loginOut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token scope\">Session<span class=\"token punctuation\">::</span></span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">\'app.user_info_session\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token boolean constant\">true</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function\">remember</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token scope\">Cookie<span class=\"token punctuation\">::</span></span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">\'admin_user\'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token comment\">//记住我</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getRemember</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token scope\">Cookie<span class=\"token punctuation\">::</span></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">\'admin_user\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function\">delRemember</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token scope\">Cookie<span class=\"token punctuation\">::</span></span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">\'admin_user\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n</span></code></pre><h4>3. 瘦控制器 胖模型的思想 模型封装验证方法</h4><pre><code><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\r\n\r\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">app<span class=\"token punctuation\">\\</span>admin<span class=\"token punctuation\">\\</span>model</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">use</span> <span class=\"token package\">app<span class=\"token punctuation\">\\</span>common<span class=\"token punctuation\">\\</span>Admin</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">use</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>facade<span class=\"token punctuation\">\\</span>Session</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">use</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>Model</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AdminUser</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Model</span>\r\n<span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$table</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">\'admin_users\'</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token variable\">$password_salt</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">\'\'</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function\">generateSalt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">\'qwertyuiopasdfghjklzxvcbnm1234567890QWAESRDTFYGUHIJOKPLMNBVCXZ\'</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token variable\">$salt</span> <span class=\"token operator\">=</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token function\">str_shuffle</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$salt</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token scope\"><span class=\"token keyword\">parent</span><span class=\"token punctuation\">::</span></span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token scope\"><span class=\"token keyword\">self</span><span class=\"token punctuation\">::</span></span><span class=\"token variable\">$password_salt</span> <span class=\"token operator\">=</span> <span class=\"token scope\"><span class=\"token keyword\">self</span><span class=\"token punctuation\">::</span></span><span class=\"token function\">generateSalt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span>  <span class=\"token keyword\">function</span> <span class=\"token function\">verify_pwd</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n       <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token this\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">\'username\'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">\'username\'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">\'password\'</span><span class=\"token punctuation\">,</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">\'password\'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n           <span class=\"token scope\"><span class=\"token keyword\">self</span><span class=\"token punctuation\">::</span></span><span class=\"token function\">Admin</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n          <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">\'remember\'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token single-quoted-string string\">\'on\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n              <span class=\"token scope\">Admin<span class=\"token punctuation\">::</span></span><span class=\"token function\">remember</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n          <span class=\"token punctuation\">}</span>\r\n           <span class=\"token keyword\">return</span> <span class=\"token function\">msg</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">\'success\'</span><span class=\"token punctuation\">,</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span><span class=\"token single-quoted-string string\">\'登录成功\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n       <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\r\n           <span class=\"token keyword\">return</span> <span class=\"token function\">msg</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">\'error\'</span><span class=\"token punctuation\">,</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span><span class=\"token single-quoted-string string\">\'账号或密码不存在\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n       <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Admin</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span><span class=\"token operator\">=</span><span class=\"token constant\">null</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n         <span class=\"token scope\">Session<span class=\"token punctuation\">::</span></span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">\'app.user_info_session\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$user</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></span></code></pre><h4>4. 在 common.php 公共文件下 定义公共函数 如:</h4><pre><code><span class=\"token keyword\">function</span> <span class=\"token function\">msg</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$title</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$code</span><span class=\"token operator\">=</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$message</span><span class=\"token operator\">=</span><span class=\"token single-quoted-string string\">\'\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\r\n        <span class=\"token single-quoted-string string\">\'title\'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token variable\">$title</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token single-quoted-string string\">\'code\'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token variable\">$code</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token single-quoted-string string\">\'message\'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token variable\">$message</span>\r\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$msg</span><span class=\"token punctuation\">,</span><span class=\"token boolean constant\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre>',0,1,1569249946,1569249946,0,0,0),(19,'博客园使用highlight.js对代码进行高亮，并实现自定义关键词高亮',NULL,0,0,4,13,'<p style=\"\"><b>阅读目录</b></p><ul><li><a href=\"https://www.cnblogs.com/X-Jun/p/9332366.html#_label0\">调整代码块的背景颜色</a></li><li><a href=\"https://www.cnblogs.com/X-Jun/p/9332366.html#_label1\">下载Highlight.js</a></li><li><a href=\"https://www.cnblogs.com/X-Jun/p/9332366.html#_label2\">尝试修改highlight.pack.js文件内容</a></li></ul><p>    </p><p>看了网上那么多有关highlight.js的教程，自己还没学过JavaScript和CSS，硬是花了3天的时间，才终于弄出了自己想要的效果。一开始我的博客园代码高亮效果是这样的：<br><img src=\"https://images2018.cnblogs.com/blog/1172605/201807/1172605-20180718104509401-475106108.png\"></p><p>个人希望代码块能够实现下面功能：</p><ol><li>调整代码块的背景颜色</li><li>更换代码高亮的风格</li><li>能够自定义哪些关键字、类/结构体进行高亮</li></ol><p>其中第三点并没有任何教程能够告诉我怎么做，但是经过一番折腾，我还是做到了。最终的效果如下：<br><img src=\"https://images2018.cnblogs.com/blog/1172605/201807/1172605-20180718104515396-1150502941.png\"></p><p>接下来是配置的具体教程</p><p><a href=\"https://www.cnblogs.com/X-Jun/p/9332366.html#_labelTop\">回到顶部</a></p><h1>调整代码块的背景颜色</h1><p>虽然说Highlight.js只用三句JavaScript代码就可以实现最基本的高亮效果，但是选择的代码高亮风格还需要在理想的代码块背景上显示。比如说代码的字体默认颜色是白色的，但是很多代码块的背景色是白的导致看不到代码字体。所以还需要设置博客园的代码块背景颜色。</p><p>首先在博客园后台管理-设置中会看到，需要你发送邮件到contact@cnblogs.com申请Js权限</p><p>等待一段时间，申请成功后，在博客园后台管理-设置-页面定制CSS添加项目代码</p><pre><code><span class=\"hljs-selector-class\">.cnblogs-markdown</span> <span class=\"hljs-selector-tag\">pre</span> <span class=\"hljs-selector-tag\">code</span> { \r\n    <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#<span class=\"hljs-number\">23241f</span></span> <span class=\"hljs-meta\">!important</span>;\r\n    <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\"><span class=\"hljs-meta\">#eee</span></span><span class=\"hljs-meta\"><span class=\"hljs-meta\">!important</span></span><span class=\"hljs-meta\">;</span>\r\n }\r\n\r\n<span class=\"hljs-selector-class\">.cnblogs-markdown</span> <span class=\"hljs-selector-tag\">code</span> {  \r\n    <span class=\"hljs-attribute\">background-color</span>:  important;\r\n}</code></pre><p>其中需要留意的是背景颜色和文本颜色属性的设置，背景色RGB是每个单色8位，即对应2个16进制位；文本色则是每个单色4位，对应1个16进制位。</p><p>如果连同镶嵌在语句的代码块都需要修改上色，则可以删去上面代码的第二个块。</p><p><a href=\"https://www.cnblogs.com/X-Jun/p/9332366.html#_labelTop\">回到顶部</a></p><h1>下载Highlight.js</h1><p>去官方网站：<a href=\"https://highlightjs.org/\">https://highlightjs.org/</a></p><p>然后获取它的最新版本，选择自己需要的语言。</p><p>解压后，根据官网提供的风格展示，选择自己喜好的风格上传到博客园后台管理上。</p><p>如果你不需要自己定制某些功能的话，可以也把<code>highlight.pack.js</code>直接上传<br><img src=\"https://images2018.cnblogs.com/blog/1172605/201807/1172605-20180719125253175-809981587.png\"></p><p>然后在设置-页脚Html代码添加：</p><pre><code><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"https://files.cnblogs.com/files/username/style.css\"</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"https://files.cnblogs.com/files/username/highlight.pack.js\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"undefined\">hljs.initHighlightingOnLoad();</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre><p>这里记得把你的username换成你的博客园ID，style换成选择的风格的文件名</p><p>第一次保存后理论上就可以看到代码高亮效果了。</p><p><a href=\"https://www.cnblogs.com/X-Jun/p/9332366.html#_labelTop\">回到顶部</a></p><h1>尝试修改highlight.pack.js文件内容</h1><p>初步打开该文件进行查看，发现里面把所有的代码都放进了同一行，还将变量用各种单字母命名，有可能是为了尽量减小文件的大小，也可能是为了防止人家去理解代码含义。</p><p>但如果其实仔细观察的话可以发现里面的代码是用来进行语法分析的。我们不需要关注里面的实现，只需要找到里面收纳的关键字类型、支持的原生类型进行修改/添加，就可以实现自定义了。</p><p><img src=\"https://images2018.cnblogs.com/blog/1172605/201807/1172605-20180718190253182-1347045027.jpg\"></p><p>找到<code>keyword</code>部分可以自行修改默认支持的关键字集合</p><p>然后找到<code>built_in</code>部分可以修改默认支持的类名、结构体名或者函数名</p><p><code>literal</code>部分则是默认的字面值</p><p>当然这些部分可能还不够用，比如C/C++还支持宏定义</p><p>如果想要给宏加上高亮的话，可以回去翻vs2015.css，寻找对应宏颜色的支持项。可以看到<br><img src=\"https://images2018.cnblogs.com/blog/1172605/201807/1172605-20180718193051537-1510703938.png\"><br>可以在集合c添加<code>variable</code>项，然后用字符串的形式引入关键词。比如说这里我想要支持宏<code>TRUE</code>和<code>FALSE</code>，就可以这样添加：</p><pre><code>c={...\r\n...\r\n...\r\nvariable:<span class=\"hljs-string\"><span class=\"hljs-string\">\"TRUE FALSE\"</span></span>}, ...</code></pre><p>如果想要支持枚举的话，也是跟刚才的操作一样。当然你也可以修改.css文件来做到支持。还有另一种办法是把风格css文件的代码添加到页面定制CSS代码一栏中，然后你就可以省略下面这句话：</p><pre><code>&lt;link rel=<span class=\"hljs-string\"><span class=\"hljs-string\">\"stylesheet\"</span></span> href=<span class=\"hljs-string\"><span class=\"hljs-string\">\"https://files.cnblogs.com/files/username/style.css\"</span></span>&gt;</code></pre><p>把改好的文件上传到博客园，然后加上相应的HTML代码（如果没加过的话），就可以看到效果了。如果没有变化的话，你需要在文件上传那一页下载你的highlight.pack.js，然后在浏览器见到代码页后按右键选择重新加载（Chrome浏览器），看到代码内容发送变化即可</p><p>然后尝试用markdown编写博客，发布草稿，自行对这两个项进行测试即可。加上宏和枚举值后，最终我的测试效果如下：</p><pre><code><span class=\"hljs-built_in\">HRESULT</span> hr = <span class=\"hljs-variable\">S_OK</span>;\r\n\r\n<span class=\"hljs-comment\"><span class=\"hljs-comment\">// 创建D3D设备 和 D3D设备上下文</span></span>\r\n<span class=\"hljs-built_in\">UINT</span> createDeviceFlags = <span class=\"hljs-number\"><span class=\"hljs-number\">0</span></span>;\r\n<span class=\"hljs-meta\"><span class=\"hljs-meta\">#</span><span class=\"hljs-meta-keyword\"><span class=\"hljs-meta\"><span class=\"hljs-meta-keyword\">if</span></span></span><span class=\"hljs-meta\"> defined(DEBUG) || defined(_DEBUG)  </span></span>\r\ncreateDeviceFlags |= <span class=\"hljs-number\">D3D11_CREATE_DEVICE_DEBUG</span>;\r\n<span class=\"hljs-meta\"><span class=\"hljs-meta\">#</span><span class=\"hljs-meta-keyword\"><span class=\"hljs-meta\"><span class=\"hljs-meta-keyword\">endif</span></span></span></span>\r\n<span class=\"hljs-comment\"><span class=\"hljs-comment\">// 驱动类型数组</span></span>\r\n<span class=\"hljs-built_in\">D3D_DRIVER_TYPE</span> driverTypes[] =\r\n{\r\n    <span class=\"hljs-number\">D3D_DRIVER_TYPE_HARDWARE</span>,\r\n    <span class=\"hljs-number\">D3D_DRIVER_TYPE_WARP</span>,\r\n    <span class=\"hljs-number\">D3D_DRIVER_TYPE_REFERENCE</span>,\r\n};\r\n<span class=\"hljs-built_in\">UINT</span> numDriverTypes = <span class=\"hljs-variable\">ARRAYSIZE</span>(driverTypes);\r\n\r\n<span class=\"hljs-comment\"><span class=\"hljs-comment\">// 特性等级数组</span></span>\r\n<span class=\"hljs-built_in\">D3D_FEATURE_LEVEL</span> featureLevels[] =\r\n{\r\n    <span class=\"hljs-number\">D3D_FEATURE_LEVEL_11_1</span>,\r\n    <span class=\"hljs-number\">D3D_FEATURE_LEVEL_11_0</span>,\r\n};</code></pre><p>这样看就很像在Visual Studio里面的深色主题写代码了</p><p>而且其实不止是博客园，这种方式也可以让你在别的地方实现自定义的语法高亮效果，快动手试一下吧！</p>',0,1,1569302531,1569302531,0,0,0),(20,'使用ajax提交form表单，包括ajax文件上传',NULL,0,0,4,13,'<p>使用ajax请求数据，很多人都会，比如说：</p><pre><code>$.post(path,{data:data},<span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(data){\r\n    ...\r\n},</span>\"json\");</code></pre><p>又或者是这样的ajax</p><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><pre><code><span style=\"color: #000000;\">$.ajax({\r\n                url:</span>\"${pageContext.request.contextPath}/public/testupload\"<span style=\"color: #000000;\">,\r\n                type:</span>\"post\"<span style=\"color: #000000;\">,\r\n                data:{username:username},</span><span style=\"color: #000000;\">\r\n                success:</span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(data){\r\n                    window.clearInterval(timer);\r\n                    console.log(</span>\"over..\"<span style=\"color: #000000;\">);\r\n                },\r\n                error:</span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(e){\r\n                    alert(</span>\"错误！！\"<span style=\"color: #000000;\">);\r\n                    window.clearInterval(timer);\r\n                }\r\n            });        </span></code></pre><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><p>同样的，很多人也会。但是写的越多就越会发现，这样子虽然可以避免刷新页面，但是我们要写大量的js来到得数据：</p><pre><code><span style=\"color: #0000ff;\">var</span> username = $(\"#username\"<span style=\"color: #000000;\">).val();\r\n</span><span style=\"color: #0000ff;\">var</span> password = $(\"#password\"<span style=\"color: #000000;\">).val();\r\n...</span></code></pre><p>如果数量少的话，那还没有什么，但是如果数据十分大的话，那就十分的麻烦，那有没有什么简单的方法呢？答案肯定有的！下面介绍两种方法，可以极大的提高开发人员的效率。</p><p>&nbsp;</p><h1>方法</h1><h2>方法一：使用FormData对象</h2><p>FormData对象是html5的一个对象，目前的一些主流的浏览器都已经兼容。额，如果你说ie8什么的，那我们还是来谈谈今天的天气吧，我没听见。呵呵，开个玩笑，不支持FormData的，可以使用方法二，下面会介绍。接着说FormData，它是一个html5的javascript对象，非常的强大。</p><p><span style=\"color: rgb(153, 204, 0);\">FormData可以凭空创建一个对象，然后往这个对象里面添加数据，然后直接提交，不需要写一行html代码</span>，如下：</p><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><pre><code>          <span style=\"color: #0000ff;\">var</span> form = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> FormData();\r\n          form.append(</span>\"username\",\"zxj\"<span style=\"color: #000000;\">);\r\n          form.append(</span>\"password\",123456<span style=\"color: #000000;\">);\r\n          </span><span style=\"color: #0000ff;\">var</span> req = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> XMLHttpRequest();\r\n          req.open(</span>\"post\", \"${pageContext.request.contextPath}/public/testupload\", <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">);\r\n          req.send(form);</span></code></pre><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><p>这样就可以向浏览器发送<span style=\"color: rgb(0, 0, 0);\">表单数据了，或者也可以使用Jquery这样发送：</span></p><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><pre><code> <span style=\"color: #0000ff;\">var</span> form = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> FormData();\r\n  form.append(</span>\"username\",\"zxj\"<span style=\"color: #000000;\">);\r\n  form.append(</span>\"password\",123456<span style=\"color: #000000;\">);\r\n　$.ajax({\r\n                url:</span>\"${pageContext.request.contextPath}/public/testupload\"<span style=\"color: #000000;\">,\r\n                type:</span>\"post\"<span style=\"color: #000000;\">,\r\n                data:form,\r\n                processData:</span><span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">,\r\n                contentType:</span><span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">,\r\n                success:</span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(data){\r\n                    window.clearInterval(timer);\r\n                    console.log(</span>\"over..\"<span style=\"color: #000000;\">);\r\n                }\r\n});</span></code></pre><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><p>这样也可以直接发送数据到后台。</p><p><span style=\"color: rgb(0, 0, 255);\"><strong>你以为这就完了？不！这才刚开始呢！！</strong></span></p><p>&nbsp;</p><p><span style=\"color: rgb(153, 204, 0);\">其次FormData还支持直接从html中的表单生成数据，就是在html页面中已经有数据了，然后FormData可以直接把这个表单的数据写入这个对象，然后直接提交给后台</span></p><p><span style=\"color: rgb(153, 204, 0);\"><span style=\"color: rgb(0, 0, 0);\">代码如下，先给出html代码:</span></span></p><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><pre><code>&lt;form id=\"tf\"&gt;\r\n            &lt;input type=\"file\" name=\"img\"/&gt;\r\n            &lt;input type=\"text\" name=\"username\"/&gt;\r\n            &lt;input type=\"button\" value=\"提\" onclick=\"test();\"/&gt;\r\n<span style=\"color: #000000;\">                        .............\r\n </span>&lt;/form&gt;</code></pre><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><p><span style=\"color: rgb(255, 0, 0);\">大家注意到没有，里面可是有文件的哦！</span></p><p><span style=\"color: rgb(0, 0, 0);\">没错，FormData还支持困扰众多开发者已久的ajax的上传文件，以前我们上传文件，需要写一个表单直接刷新提交，但是这里不需要，下面给出提交代码：</span></p><p>&nbsp;</p><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><pre><code>        <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> test(){\r\n            </span><span style=\"color: #0000ff;\">var</span> form = <span style=\"color: #0000ff;\">new</span> FormData(document.getElementById(\"tf\"<span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">             var req = new XMLHttpRequest();</span><span style=\"color: #008000;\">\r\n//</span><span style=\"color: #008000;\">             req.open(\"post\", \"${pageContext.request.contextPath}/public/testupload\", false);</span><span style=\"color: #008000;\">\r\n//</span><span style=\"color: #008000;\">             req.send(form);</span>\r\n<span style=\"color: #000000;\">            $.ajax({\r\n                url:</span>\"${pageContext.request.contextPath}/public/testupload\"<span style=\"color: #000000;\">,\r\n                type:</span>\"post\"<span style=\"color: #000000;\">,\r\n                data:form,\r\n                processData:</span><span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">,\r\n                contentType:</span><span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">,\r\n                success:</span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(data){\r\n                    window.clearInterval(timer);\r\n                    console.log(</span>\"over..\"<span style=\"color: #000000;\">);\r\n                },\r\n                error:</span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\">(e){\r\n                    alert(</span>\"错误！！\"<span style=\"color: #000000;\">);\r\n                    window.clearInterval(timer);\r\n                }\r\n            });        \r\n            get();</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">此处为上传文件的进度条</span>\r\n        }</code></pre><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><p>&nbsp;</p><p>就是这么简单，使用FormData，在构造这个对象的时候，把表单的对象，作为一个参数放进去，就可以了，然后FormData，就会得到这个表单对象里面的所有的参数，甚至我们在表单中，都不需要声明enctype =\"multipart/form-data\" ，就可以直接提交。</p><p><span style=\"color: rgb(255, 153, 0);\">使用FormData，第一是在提交表单的时候，不需要写大量的js来获得表单数据，直接把表单对象构造就行了。第二就是可以直接异步上传文件，简单牛逼爆了！</span></p><p><span style=\"color: rgb(255, 0, 0);\"><strong>注意：使用FormData提交的时候，大家会注意到表单提交的是request payload，具体有兴趣的同学可以自己百度，它不是之前的Form data提交的，所以后台也是要经过处理的，比如springMVC就需要配置</strong></span></p><pre><code><span style=\"color: #008000;\">&lt;!--</span><span style=\"color: #008000;\"> 配置nultipartresolver,注意：id名必须这样写，不然会报错 </span><span style=\"color: #008000;\">--&gt;</span>\r\n    <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">bean </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"multipartResolver\"</span><span style=\"color: #ff0000;\"> class</span><span style=\"color: #0000ff;\">=\"org.springframework.web.multipart.commons.CommonsMultipartResolver\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n        <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"defaultEncoding\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"UTF-8\"</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">property</span><span style=\"color: #0000ff;\">&gt;</span>\r\n        <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"maxInMemorySize\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"10240000\"</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">property</span><span style=\"color: #0000ff;\">&gt;</span>\r\n    <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">bean</span><span style=\"color: #0000ff;\">&gt;</span></code></pre><p>不然会接收不到数据，当然，后台的话，我们这里就先不管。</p><p>&nbsp;</p><h2>方法二：使用jquery.form.js</h2><p>Jquery.form.js是一个强大的表单插件，其大量的提供了表单操作的各种简便的方法，下面给出一些Jquery.form.js的说明：</p><p>&nbsp;</p><p>ajaxForm增加所有需要的事件监听器，为ajax提交表单做准备。ajaxForm并不能提交表单。在document的ready函数中，使用ajaxForm来为ajax提交表单进行准备。接受0个或1个参数。参数可以是一个回调函数，也可以是一个Options对象。$(\"#formid\").ajaxForm();<br>ajaxSubmit使用ajax提交表单。接受0个或1个参数。参数可以是一个回调函数，也可以是一个Options对象。$(\"#formid\").ajaxSubmit();或$(\"#formid\").submit(function(){&nbsp; &nbsp; $(this).ajaxSubmit();&nbsp; &nbsp; return false;});<br>formSerialize将表单串行化（或序列化）为一个查询字符串。这个方法将返回以下格式的字符串：name1=value1&amp;name2=value2。无$(\"#formid\").formSerialize();<br>fieldSerialize将表单的字段元素串行化（或序列化）为一个查询字符串。当只有部分表单字段需要进行串行化（或序列化）时，使用这个就很方便了。返回以下格式的字符串：name=value1&amp;name2=value2。无$(\"#formid .specialFields\").fieldSerialize();<br>fieldValue返回匹配插入数组中的表单元素值。该方法以数组的形式返回数据。如果元素值被判定可能无效，则数组为空。无$(\"#formid :password\").fieldValue();<br>resetForm将表单恢复到初始状态。无$(\"#formid\").resetForm();<br>clearForm清除表单元素。该方法将所有的text、password、textarea置空，清除select元素中的选定，以及所有radio按钮和checkbox按钮重置为非选定状态。无$(\"#formid\").clearForm();<br>clearFields清除字段元素。只有部分表单元素需要清除时方便使用。无$(\"#formid .specialFields\").clearFields();<br></p><p><strong>Options对象</strong></p><p>ajaxForm和ajaxSubmit都支持众多的选项参数，这些选项参数可以使用一个Options对象来提供。</p><p>&nbsp;</p><p>target指明页面中由服务器响应进行更新的元素。元素的值可能被指定为一个jQuery选择器字符串、一个jquery对象、一个DOM元素。默认值：null<br>url指定提交表单数据的URL。默认值：表单的action属性值<br>type指定提交表单数据的方法（method）：“GET”或“POST”。默认值：GET<br>beforeSubmit表单提交前被调用的回调函数。如果回调函数返回false表单将不被提交。回调函数带三个调用参数：数组形式的表单数据，jQuery表单对象，以及传入ajaxForm/ajaxSubmit中的Options对象。默认值：null<br>success表单成功提交后调用的回调函数。然后dataType选项值决定传回responseText还是responseXML的值。默认值：null<br>dataType返回的数据类型：null、\"xml\"、\"script\"、\"json\"其中之一。默认值：null<br>resetForm表示如果表单提交成功是否进行重置。默认值：null<br>clearForm表示如果表单提交成功是否清除表单数据。默认值：null<br></p><p>&nbsp;</p><p>那么现在来说一些它的主要用法吧！</p><p>&nbsp;</p><p>它也支持对一个表单的ajax提交，而且提交方式更为简便，如下：</p><p>html:</p><pre><code><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"tf\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n            <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"img\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n            <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"text\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"username\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n            <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"button\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"提\"</span><span style=\"color: #ff0000;\"> onclick</span><span style=\"color: #0000ff;\">=\"test();\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n        <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span></code></pre><p>下面使用jquery.form.js的表单插件来提交表单<br><br></p><pre><code>$(\"#tf\").ajaxSubmit();</code></pre><p>额，就是这么简单，你也不要问我为什么就是这么简单，然后它就是会把整个表单，作为一个ajax来提交，同样的，它也支持文件上传！一些其它的用法，请参照前面给出的说明就可以了！</p>',0,1,1569327515,1569327515,0,0,0),(21,'python保留两位小数',NULL,0,0,3,12,'<pre><code> 1 In [1]: a = 5.026</code></pre><pre><code><span style=\"color: #008080;\"> 2</span> \r\n<span style=\"color: #008080;\"> 3</span> In [2]: b = 5.000\r\n<span style=\"color: #008080;\"> 4</span> \r\n<span style=\"color: #008080;\"> 5</span> In [3]: round(a,2<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 6</span> Out[3]: 5.03\r\n<span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> In [4]: round(b,2<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 9</span> Out[4]: 5.0\r\n<span style=\"color: #008080;\">10</span> \r\n<span style=\"color: #008080;\">11</span> In [5]: <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">%.2f</span><span style=\"color: #800000;\">\'</span> %<span style=\"color: #000000;\"> a\r\n</span><span style=\"color: #008080;\">12</span> Out[5]: <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">5.03</span><span style=\"color: #800000;\">\'</span>\r\n<span style=\"color: #008080;\">13</span> \r\n<span style=\"color: #008080;\">14</span> In [6]: <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">%.2f</span><span style=\"color: #800000;\">\'</span> %<span style=\"color: #000000;\"> b\r\n</span><span style=\"color: #008080;\">15</span> Out[6]: <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">5.00</span><span style=\"color: #800000;\">\'</span>\r\n<span style=\"color: #008080;\">16</span> \r\n<span style=\"color: #008080;\">17</span> In [7]: float(<span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">%.2f</span><span style=\"color: #800000;\">\'</span> %<span style=\"color: #000000;\"> a)\r\n</span><span style=\"color: #008080;\">18</span> Out[7]: 5.03\r\n<span style=\"color: #008080;\">19</span> \r\n<span style=\"color: #008080;\">20</span> In [8]: float(<span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">%.2f</span><span style=\"color: #800000;\">\'</span> %<span style=\"color: #000000;\"> b)\r\n</span><span style=\"color: #008080;\">21</span> Out[8]: 5.0\r\n<span style=\"color: #008080;\">22</span> \r\n<span style=\"color: #008080;\">23</span> In [9]: <span style=\"color: #0000ff;\">from</span> decimal <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> Decimal\r\n</span><span style=\"color: #008080;\">24</span> \r\n<span style=\"color: #008080;\">25</span> In [10]: Decimal(<span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">5.026</span><span style=\"color: #800000;\">\'</span>).quantize(Decimal(<span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">0.00</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\">))\r\n</span><span style=\"color: #008080;\">26</span> Out[10]: Decimal(<span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">5.03</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">27</span> \r\n<span style=\"color: #008080;\">28</span> In [11]: Decimal(<span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">5.000</span><span style=\"color: #800000;\">\'</span>).quantize(Decimal(<span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">0.00</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\">))\r\n</span><span style=\"color: #008080;\">29</span> Out[11]: Decimal(<span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">5.00</span><span style=\"color: #800000;\">\'</span>)</code></pre><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><p>&nbsp;</p><p>这里有三种方法，</p><pre><code>round(a,2)</code></pre><pre><code>\'%.2f\' % a</code></pre><pre><code>Decimal(\'5.000\').quantize(Decimal(\'0.00\'))</code></pre><p>当需要输出的结果要求有两位小数的时候，字符串形式的：\'%.2f\' % a 方式最好，其次用Decimal。</p><p>需要注意的：</p><p>1. 可以传递给Decimal整型或者字符串参数，但不能是浮点数据，因为浮点数据本身就不准确。</p><p>2. Decimal还可以用来限定数据的总位数。</p><h2><a href=\"https://www.cnblogs.com/herbert/p/3402245.html\">谈谈关于Python里面小数点精度控制的问题</a></h2><h1>基础</h1><p>浮点数是用机器上浮点数的本机双精度(64 bit)表示的。<strong>提供大约17位的精度</strong>和范围从-308到308的指数。和C语言里面的double类型相同。Python不支持32bit的单精度浮点数。如果程序需要精确控制区间和数字精度，可以考虑使用numpy扩展库。</p><p>&nbsp;</p><p>Python 3.X对于浮点数默认的是提供17位数字的精度。</p><p>&nbsp;</p><p>关于单精度和双精度的通俗解释：</p><p>单精度型和双精度型，其类型说明符为float 单精度说明符，double 双精度说明符。在Turbo C中单精度型占4个字节（32位）内存空间，其数值范围为3.4E-38～3.4E+38，只能提供七位有效数字。双精度型占8 个字节（64位）内存空间，其数值范围为1.7E-308～1.7E+308，可提供16位有效数字。</p><p>&nbsp;</p><h1>要求较小的精度</h1><p>将精度高的浮点数转换成精度低的浮点数。</p><h2>1.round()内置方法</h2><p>这个是使用最多的，刚看了round()的使用解释，也不是很容易懂。round()不是简单的四舍五入的处理方式。</p><p>For the built-in types supporting round(), values are rounded to the closest multiple of 10 to the power minus ndigits; if two multiples are equally close, rounding is done toward the even choice (so, for example, both round(0.5) and round(-0.5) are 0, and round(1.5) is 2).</p><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><pre><code><span style=\"color: #008080;\">1</span> &gt;&gt;&gt; round(2.5<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">2</span> 2\r\n<span style=\"color: #008080;\">3</span> &gt;&gt;&gt; round(1.5<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">4</span> 2\r\n<span style=\"color: #008080;\">5</span> &gt;&gt;&gt; round(2.675<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">6</span> 3\r\n<span style=\"color: #008080;\">7</span> &gt;&gt;&gt; round(2.675, 2<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">8</span> 2.67</code></pre><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><p>&nbsp;</p><p>round()如果只有一个数作为参数，不指定位数的时候，返回的是一个整数，而且是最靠近的整数（这点上类似四舍五入）。但是当出现.5的时候，两边的距离都一样，round()取靠近的偶数，这就是为什么round(2.5) = 2。当指定取舍的小数点位数的时候，一般情况也是使用四舍五入的规则，但是碰到.5的这样情况，如果要取舍的位数前的小数是奇数，则向下取舍，如果偶数则向上取舍。看下面的示例：</p><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><pre><code><span style=\"color: #008080;\"> 1</span> &gt;&gt;&gt; round(2.635, 2<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 2</span> 2.63\r\n<span style=\"color: #008080;\"> 3</span> &gt;&gt;&gt; round(2.645, 2<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 4</span> 2.65\r\n<span style=\"color: #008080;\"> 5</span> &gt;&gt;&gt; round(2.655, 2<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 6</span> 2.65\r\n<span style=\"color: #008080;\"> 7</span> &gt;&gt;&gt; round(2.665, 2<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 8</span> 2.67\r\n<span style=\"color: #008080;\"> 9</span> &gt;&gt;&gt; round(2.675, 2<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">10</span> 2.67</code></pre><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><p>&nbsp;</p><h2>&nbsp;2. 使用格式化</h2><p>效果和round（）是一样的。</p><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><pre><code><span style=\"color: #008080;\">1</span> &gt;&gt;&gt; a = (<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">%.2f</span><span style=\"color: #800000;\">\"</span> % 2.635<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">2</span> &gt;&gt;&gt;<span style=\"color: #000000;\"> a\r\n</span><span style=\"color: #008080;\">3</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">2.63</span><span style=\"color: #800000;\">\'</span>\r\n<span style=\"color: #008080;\">4</span> &gt;&gt;&gt; a = (<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">%.2f</span><span style=\"color: #800000;\">\"</span> % 2.645<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">5</span> &gt;&gt;&gt;<span style=\"color: #000000;\"> a\r\n</span><span style=\"color: #008080;\">6</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">2.65</span><span style=\"color: #800000;\">\'</span>\r\n<span style=\"color: #008080;\">7</span> &gt;&gt;&gt; a = int(2.5<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">8</span> &gt;&gt;&gt;<span style=\"color: #000000;\"> a\r\n</span><span style=\"color: #008080;\">9</span> 2</code></pre><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><p>&nbsp;</p><h1>要求超过17位的精度分析</h1><p>python默认的是17位小数的精度，但是这里有一个问题，就是当我们的计算需要使用更高的精度（超过17位小数）的时候该怎么做呢？</p><h2>1. 使用格式化(不推荐)</h2><pre><code><span style=\"color: #008080;\">1</span> &gt;&gt;&gt; a = <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">%.30f</span><span style=\"color: #800000;\">\"</span> % (1/3<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">2</span> &gt;&gt;&gt;<span style=\"color: #000000;\"> a\r\n</span><span style=\"color: #008080;\">3</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">0.333333333333333314829616256247</span><span style=\"color: #800000;\">\'</span></code></pre><p>&nbsp;</p><p>可以显示，但是不准确，后面的数字往往没有意义。</p><h2>2. 高精度使用decimal模块，配合getcontext</h2><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><pre><code><span style=\"color: #008080;\"> 1</span> &gt;&gt;&gt; <span style=\"color: #0000ff;\">from</span> decimal <span style=\"color: #0000ff;\">import</span> *\r\n<span style=\"color: #008080;\"> 2</span> &gt;&gt;&gt; <span style=\"color: #0000ff;\">print</span><span style=\"color: #000000;\">(getcontext())\r\n</span><span style=\"color: #008080;\"> 3</span> Context(prec=28, rounding=ROUND_HALF_EVEN, Emin=-999999, Emax=999999, capitals=1, clamp=0, flags=[], traps=<span style=\"color: #000000;\">[InvalidOperation, DivisionByZero, Overflow])\r\n</span><span style=\"color: #008080;\"> 4</span> &gt;&gt;&gt; getcontext().prec = 50\r\n<span style=\"color: #008080;\"> 5</span> &gt;&gt;&gt; b = Decimal(1)/Decimal(3<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 6</span> &gt;&gt;&gt;<span style=\"color: #000000;\"> b\r\n</span><span style=\"color: #008080;\"> 7</span> Decimal(<span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">0.33333333333333333333333333333333333333333333333333</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 8</span> &gt;&gt;&gt; c = Decimal(1)/Decimal(17<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 9</span> &gt;&gt;&gt;<span style=\"color: #000000;\"> c\r\n</span><span style=\"color: #008080;\">10</span> Decimal(<span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">0.058823529411764705882352941176470588235294117647059</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">11</span> &gt;&gt;&gt;<span style=\"color: #000000;\"> float(c)\r\n</span><span style=\"color: #008080;\">12</span> 0.058823529411764705</code></pre><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><p>&nbsp;</p><p>&nbsp;默认的context的精度是28位，可以设置为50位甚至更高，都可以。这样在分析复杂的浮点数的时候，可以有更高的自己可以控制的精度。其实可以留意下context里面的这rounding=ROUND_HALF_EVEN 参数。ROUND_HALF_EVEN， 当half的时候，靠近even.</p><p>&nbsp;</p><h1>关于小数和取整</h1><p>既然说到小数，就必然要说到整数。一般取整会用到这些函数：</p><h2>1. round()</h2><p>这个不说了，前面已经讲过了。一定要注意它不是简单的四舍五入，而是ROUND_HALF_EVEN的策略。</p><h2>2. math模块的ceil(x)</h2><p>取大于或者等于x的最小整数。</p><h2>3. math模块的floor(x)</h2><p>去小于或者等于x的最大整数。</p><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><pre><code><span style=\"color: #008080;\"> 1</span> &gt;&gt;&gt; <span style=\"color: #0000ff;\">from</span> math <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> ceil, floor\r\n</span><span style=\"color: #008080;\"> 2</span> &gt;&gt;&gt; round(2.5<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 3</span> 2\r\n<span style=\"color: #008080;\"> 4</span> &gt;&gt;&gt; ceil(2.5<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 5</span> 3\r\n<span style=\"color: #008080;\"> 6</span> &gt;&gt;&gt; floor(2.5<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 7</span> 2\r\n<span style=\"color: #008080;\"> 8</span> &gt;&gt;&gt; round(2.3<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 9</span> 2\r\n<span style=\"color: #008080;\">10</span> &gt;&gt;&gt; ceil(2.3<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">11</span> 3\r\n<span style=\"color: #008080;\">12</span> &gt;&gt;&gt; floor(2.3<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">13</span> 2\r\n<span style=\"color: #008080;\">14</span> &gt;&gt;&gt;</code></pre>',0,1,1569409961,1569409961,0,0,0),(22,'DrawFigure',NULL,0,0,3,13,'<p>&nbsp;</p><p>import matplotlib.pyplot as plt</p><p>import numpy as np</p><p>&nbsp;</p><p>## 绘制函数曲线</p><p>&nbsp;</p><p># 数据准备</p><p>x = np.linspace(-1, 3, 51)</p><p>y1 = 2 * x + 1</p><p>y2 = 2 ** x + 1</p><p>y3 = x ** 2 + 1</p><p>&nbsp;</p><p># 绘制图像</p><p>plt.figure(figsize = (10, 7))</p><p>\'\'\'</p><p><font>线宽</font>linewidth/lw</p><p><font>线型</font>linestyle/ls:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;\'-\' 实线 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'--\' 短线 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'-.\' 短点相间线 &nbsp;&nbsp;\':\' 虚点线 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'None\' 什么都不画</p><p><font>标记</font>marker:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;\'o\' 圆圈 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'D\' 菱形 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'h\' 六边形1 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'H\' 六边形2 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'_\' 水平线 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'8\' 八边形</p><p>&nbsp;&nbsp;&nbsp;&nbsp;\'p\' 五边形 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\',\' 像素 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'+\' 加号 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'.\' 点 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'s\' 正方形 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'*\' 星号</p><p>&nbsp;&nbsp;&nbsp;&nbsp;\'d\' 小菱形 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'v\' 三角形1 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'&lt;\' 三角形2 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'&gt;\' 三角形3 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'^\' 三角形4 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'\\\' 竖线</p><p>&nbsp;&nbsp;&nbsp;&nbsp;\'x\' × &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'None\' 无</p><p><font>颜色</font>color:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;b -- blue &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c -- cyan &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g -- green &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k -- black</p><p>&nbsp;&nbsp;&nbsp;&nbsp;m -- magenta &nbsp;&nbsp;&nbsp;&nbsp;r -- red &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w -- white &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y -- yellow</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<font>颜色的表示还可以用：</font>16进制如#FF00FF、RGB或RGBA元组如(1, 0, 1, 1)、灰度强度如0.7等</p><p>\'\'\'</p><p>plt.plot(x, y1, lw = 1.0, ls = \':\', color = (1, 0, 0), label = \'aaa\')</p><p>plt.plot(x, y2, lw = 2.0, ls = \'-\', color = \'green\', label = \'bbb\')</p><p>plt.plot(x, y3, lw = 2.0, ls = \'None\', marker = \'x\', color = \'#FF00FF\', label = \'ccc\')</p><p>&nbsp;</p><p># 设置标签</p><p>plt.xlabel(\"I am x\", fontsize = 12)</p><p>plt.ylabel(\"I am y\", fontsize = 12)</p><p>&nbsp;</p><p># 设置坐标轴刻度</p><p>new_xticks = np.linspace(-1, 2, 5)</p><p>plt.xticks(new_xticks)</p><p>plt.yticks([-2, -1, 0, 1, 2, 3])</p><p># plt.xticks(fontsize = 20)</p><p># plt.yticks(fontsize = 20)</p><p>&nbsp;</p><p># 设置坐标轴范围</p><p># plt.xlim((-1, 2))</p><p># plt.ylim((-2, 3))</p><p>plt.axis([-1, 2, -2, 3])</p><p>&nbsp;</p><p># 设置边框颜色</p><p>ax = plt.gca()</p><p>ax.spines[\'right\'].set_color(\'none\')</p><p>ax.spines[\'top\'].set_color(\'none\')</p><p>&nbsp;</p><p># 设置坐标轴的位置</p><p>ax.xaxis.set_ticks_position(\'bottom\')</p><p>ax.yaxis.set_ticks_position(\'left\')</p><p>ax.spines[\'bottom\'].set_position((\'data\', 0))</p><p>ax.spines[\'left\'].set_position((\'data\', 0))</p><p>&nbsp;</p><p># 添加特殊点</p><p>x0 = 1</p><p>y0 = 2 * x0 + 1</p><p>plt.scatter(x0, y0, s = 66, color = \'b\')</p><p>plt.plot([x0, x0], [y0, 0], \'k-.\', linewidth = 1)</p><p>plt.text(x0 - 0.1, 0.1, r\'$x_0\\ =\\ 1$\')</p><p>&nbsp;</p><p># 显示图例</p><p>\'\'\'</p><p>loc = upper/lower left/right</p><p>\'\'\'</p><p>plt.legend(loc = \'upper right\', fontsize = 12)</p><p>&nbsp;</p><p># 保存图像</p><p>plt.savefig(\"ex01.jpg\")</p><p>&nbsp;</p><p># 显示图像</p><p>plt.show()</p><p>&nbsp;</p><p>## 绘制散点图</p><p>n = 1024</p><p>x = np.random.normal(0, 1, n)</p><p>y = np.random.normal(0, 1, n)</p><p>T = np.arctan2(x, y)</p><p>&nbsp;</p><p># 绘制图像</p><p>plt.figure(figsize = (10, 7))</p><p>plt.scatter(x, y)</p><p>plt.xticks(())</p><p>plt.yticks(())</p><p>&nbsp;</p><p># 保存图像</p><p>plt.savefig(\"ex02.jpg\")</p><p>&nbsp;</p><p># 显示图像</p><p>plt.show()</p><p>&nbsp;</p><p>## 绘制条形图</p><p>n = 12</p><p>X = np.arange(n)</p><p>Y1 = (1 - X / float(n)) * np.random.uniform(0.5, 1.0, n)</p><p>Y2 = (1 - X / float(n)) * np.random.uniform(0.5, 1.0, n)</p><p>&nbsp;</p><p># 绘制图像</p><p>plt.figure(figsize = (10, 7))</p><p>plt.bar(X, + Y1, facecolor = \'#9999ff\', edgecolor = \'white\')</p><p>plt.bar(X, - Y1, facecolor = \'#ff9999\', edgecolor = \'white\')</p><p>for x, y in zip(X, Y1):</p><p>&nbsp;&nbsp;&nbsp;&nbsp;plt.text(x, y + 0.05, \'%.2f\' %y, ha = \'center\', va = \'bottom\')</p><p>&nbsp;&nbsp;&nbsp;&nbsp;</p><p># 保存图像</p><p>plt.savefig(\"ex03.jpg\")</p><p>&nbsp;</p><p># 显示图像</p><p>plt.show()</p><p>&nbsp;</p><p>## 绘制等高线图</p><p>def get_height(x, y):</p><p>&nbsp;&nbsp;&nbsp;&nbsp;return (1 - x / 2 + x ** 5 + y ** 3) * np.exp(- x ** 2 - y ** 2)</p><p>n = 256</p><p>x = np.linspace(-3, 3, n)</p><p>y = np.linspace(-3, 3, n)</p><p>X, Y = np.meshgrid(x, y)</p><p>&nbsp;</p><p># 绘制图像</p><p>plt.figure(figsize = (10, 7))</p><p>plt.contourf(X, Y, get_height(X, Y), 16, alpha = 0.7, cmap = plt.cm.hot)</p><p>C = plt.contour(X, Y, get_height(X, Y), 16)</p><p>&nbsp;</p><p># 保存图像</p><p>plt.savefig(\"ex04.jpg\")</p><p>&nbsp;</p><p># 显示图像</p><p>plt.show()</p><p>&nbsp;</p><p>## 绘制子图</p><p>&nbsp;</p><p># 数据准备</p><p>x = np.linspace(-1, 3, 51)</p><p>y1 = 2 * x + 1</p><p>y2 = 2 ** x + 1</p><p>y3 = x ** 2 + 1</p><p>&nbsp;</p><p># 绘制子图</p><p>\'\'\'</p><p>&nbsp;&nbsp;&nbsp;&nbsp;subplot(numRows, numCols, plotNum)</p><p>\'\'\'</p><p>plt.figure(figsize = (10, 7))</p><p>plt.subplot(221)</p><p>plt.plot(x, y1)</p><p>plt.subplot(222)</p><p>plt.plot(x, y2)</p><p>plt.subplot(223)</p><p>plt.plot(x, y1)</p><p>plt.subplot(224)</p><p>plt.plot(x, y2)</p><p>&nbsp;</p><p># 保存图像</p><p>plt.savefig(\"ex05.jpg\")</p><p>&nbsp;</p><p># 显示图像</p><p>plt.show()</p><p>&nbsp;</p><p>import struct</p><p>&nbsp;</p><p>## 从文件读取数据画图</p><p>f = open(\'rcs.dat\', \'rb\')</p><p>fre0 = struct.unpack(\'d\', f.read(8))[0]</p><p>dfre = struct.unpack(\'d\', f.read(8))[0]</p><p>nfre = struct.unpack(\'i\', f.read(4))[0]</p><p>th0 = struct.unpack(\'d\', f.read(8))[0]</p><p>dth = struct.unpack(\'d\', f.read(8))[0]</p><p>nth = struct.unpack(\'i\', f.read(4))[0]</p><p>ph0 = struct.unpack(\'d\', f.read(8))[0]</p><p>dph = struct.unpack(\'d\', f.read(8))[0]</p><p>nph = struct.unpack(\'i\', f.read(4))[0]</p><p>print(fre0, dfre, nfre)</p><p>print(th0, dth, nth)</p><p>print(ph0, dph, nph)</p><p>f.close()</p><p>&nbsp;</p><p># 数据准备</p><p>x = np.linspace(-1, 3, 51)</p><p>y1 = 2 * x + 1</p><p>y2 = 2 ** x + 1</p><p>y3 = x ** 2 + 1</p><p>&nbsp;</p><p># 绘制图像</p><p>plt.figure(figsize = (10, 7))</p><p>plt.plot(x, y1, lw = 1.0, ls = \':\', color = (1, 0, 0), label = \'y1 = 2x + 1\')</p><p>plt.plot(x, y2, lw = 2.0, ls = \'-\', color = \'green\', label = \'y2 = 2^x + 1\')</p><p>plt.plot(x, y3, lw = 2.0, ls = \'None\', marker = \'x\', color = \'#FF00FF\', label = \'y3 = x^2 + 1\')</p><p>&nbsp;</p><p># 设置标签</p><p>plt.xlabel(\"x\", fontsize = 12)</p><p>plt.ylabel(\"y\", fontsize = 12)</p><p>&nbsp;</p><p># 设置坐标轴刻度</p><p>plt.xticks(fontsize = 12)</p><p>plt.yticks(fontsize = 12)</p><p>&nbsp;</p><p># 设置坐标轴范围</p><p>plt.axis([-1, 3, -2, 10])</p><p>&nbsp;</p><p># 设置边框颜色</p><p>ax = plt.gca()</p><p># ax.spines[\'right\'].set_color(\'none\')</p><p># ax.spines[\'top\'].set_color(\'none\')</p><p>&nbsp;</p><p># 设置坐标轴的位置</p><p>ax.xaxis.set_ticks_position(\'bottom\')</p><p>ax.yaxis.set_ticks_position(\'left\')</p><p># ax.spines[\'bottom\'].set_position((\'data\', 0))</p><p># ax.spines[\'left\'].set_position((\'data\', 0))</p><p>&nbsp;</p><p># 显示图例</p><p>plt.legend(loc = \'lower right\', fontsize = 12)</p><p>&nbsp;</p><p># 保存图像</p><p>plt.savefig(\"ex06.jpg\")</p><p>&nbsp;</p><p># 显示图像</p><p>plt.show()</p><p>&nbsp;</p><p style=\"text-align: center;\"><b>D</b><b>rawRCS</b><b></b></p><p>&nbsp;</p><p>import matplotlib.pyplot as plt</p><p>import numpy as np</p><p>import struct</p><p>&nbsp;</p><p>## 从文件读取数据画图</p><p>f = open(\'rcs1.dat\', \'rb\')</p><p>fre0 = struct.unpack(\'d\', f.read(8))[0]</p><p>dfre = struct.unpack(\'d\', f.read(8))[0]</p><p>nfre = struct.unpack(\'i\', f.read(4))[0]</p><p>fre = np.linspace(fre0, fre0 + (nfre - 1) * dfre, nfre)</p><p>th0 = struct.unpack(\'d\', f.read(8))[0]</p><p>dth = struct.unpack(\'d\', f.read(8))[0]</p><p>nth = struct.unpack(\'i\', f.read(4))[0]</p><p>th = np.linspace(th0, th0 + (nth - 1) * dth, nth)</p><p>ph0 = struct.unpack(\'d\', f.read(8))[0]</p><p>dph = struct.unpack(\'d\', f.read(8))[0]</p><p>nph = struct.unpack(\'i\', f.read(4))[0]</p><p>ph = np.linspace(ph0, ph0 + (nph - 1) * dph, nph)</p><p>RCSt = [0.0] * nph * nth * nfre</p><p>RCSp = [0.0] * nph * nth * nfre</p><p>for ifre in range(nfre):</p><p>&nbsp;&nbsp;&nbsp;&nbsp;for ith in range(nth):</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for iph in range(nph): </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RCSt[ifre * nth * nph + ith * nph + iph] = struct.unpack(\'d\', f.read(8))[0]</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RCSp[ifre * nth * nph + ith * nph + iph] = struct.unpack(\'d\', f.read(8))[0]</p><p>f.close()</p><p>&nbsp;</p><p># 绘制图像</p><p>plt.figure(figsize = (10, 7))</p><p>plt.plot(th, RCSt, lw = 1.0, ls = \'-\', color = \'b\', label = \'RCSt\')</p><p>plt.plot(th, RCSp, lw = 1.0, ls = \'-\', color = \'r\', label = \'RCSp\')</p><p>&nbsp;</p><p># 设置标签</p><p>plt.xlabel(\"theta (deg)\", fontsize = 12)</p><p>plt.ylabel(\"RCS (dB)\", fontsize = 12)</p><p>&nbsp;</p><p># 设置坐标轴刻度</p><p>plt.xticks(fontsize = 12)</p><p>plt.yticks(fontsize = 12)</p><p>&nbsp;</p><p># 设置坐标轴范围</p><p>plt.axis([-90, 90, -50, 20])</p><p>&nbsp;</p><p># 设置边框颜色</p><p>ax = plt.gca()</p><p>&nbsp;</p><p># 显示图例</p><p>plt.legend(loc = \'upper right\', fontsize = 12)</p><p>&nbsp;</p><p># 保存图像</p><p>plt.savefig(\"rcs.jpg\")</p><p>&nbsp;</p><p># 显示图像</p><p>plt.show()</p><p>&nbsp;</p><p style=\"text-align: center;\"><b>DrawRadar</b><b></b></p><p>&nbsp;</p><p>import matplotlib.pyplot as plt</p><p>import numpy as np</p><p>import struct</p><p>&nbsp;</p><p>## 从文件读取数据画图</p><p>f = open(\'rcs2.dat\', \'rb\')</p><p>fre0 = struct.unpack(\'d\', f.read(8))[0]</p><p>dfre = struct.unpack(\'d\', f.read(8))[0]</p><p>nfre = struct.unpack(\'i\', f.read(4))[0]</p><p>fre = np.linspace(fre0, fre0 + (nfre - 1) * dfre, nfre)</p><p>th0 = struct.unpack(\'d\', f.read(8))[0]</p><p>dth = struct.unpack(\'d\', f.read(8))[0]</p><p>nth = struct.unpack(\'i\', f.read(4))[0]</p><p>th = np.linspace(th0, th0 + (nth - 1) * dth, nth)</p><p>ph0 = struct.unpack(\'d\', f.read(8))[0]</p><p>dph = struct.unpack(\'d\', f.read(8))[0]</p><p>nph = struct.unpack(\'i\', f.read(4))[0]</p><p>ph = np.linspace(ph0, ph0 + (nph - 1) * dph, nph)</p><p>RCSt = [0.0] * nph * nth * nfre</p><p>RCSp = [0.0] * nph * nth * nfre</p><p>for ifre in range(nfre):</p><p>&nbsp;&nbsp;&nbsp;&nbsp;for ith in range(nth):</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for iph in range(nph): </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RCSt[ifre * nth * nph + ith * nph + iph] = struct.unpack(\'d\', f.read(8))[0]</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RCSp[ifre * nth * nph + ith * nph + iph] = struct.unpack(\'d\', f.read(8))[0]</p><p>f.close()</p><p>&nbsp;</p><p># 设置雷达图的角度</p><p>N = len(th)</p><p>angle = np.linspace(0, 2 * np.pi, N, endpoint = True)</p><p>&nbsp;</p><p># 绘制图像</p><p>fig = plt.figure(figsize = (10, 7))</p><p>ax = fig.add_subplot(111, polar = True)</p><p>ax.plot(angle, RCSt, lw = 1.0, ls = \'-\', color = \'b\', label = \'RCSt\')</p><p>ax.plot(angle, RCSp, lw = 1.0, ls = \'-\', color = \'r\', label = \'RCSp\')</p><p>&nbsp;</p><p># 设置标签</p><p>plt.xlabel(\"theta (deg)\", fontsize = 12)</p><p>&nbsp;</p><p># 设置坐标轴刻度</p><p>plt.xticks(fontsize = 12)</p><p>plt.yticks(fontsize = 12)</p><p>&nbsp;</p><p># 添加网格线</p><p>ax.grid(True)</p><p>&nbsp;</p><p># 显示图例</p><p>plt.legend(loc = \'upper right\', fontsize = 12)</p><p>&nbsp;</p><p># 保存图像</p><p>plt.savefig(\"radar.jpg\")</p><p>&nbsp;</p><p># 显示图像</p><p>plt.show()</p><p>&nbsp;</p>',0,1,1569413310,1569413310,0,0,0),(23,'Apache学习',NULL,0,0,1,13,'<h2>Apache 实例</h2><h3>一个域名访问一个网页</h3><pre><code><span class=\"token operator\">&lt;</span>VirtualHost <span class=\"token operator\">*</span><span class=\"token punctuation\">:</span><span class=\"token number\">80</span><span class=\"token operator\">&gt;</span>\r\n    <span class=\"token class-name\">Servername</span>  php<span class=\"token punctuation\">.</span>gac<span class=\"token punctuation\">.</span>cn\r\n    DocumentRoot <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>www<span class=\"token operator\">/</span>html<span class=\"token operator\">/</span>php\r\n<span class=\"token preprocessor property\">#网站的目录设置为/var/www/html/php访问时用http://php.gac.cn</span>\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>VirtualHost<span class=\"token operator\">&gt;</span>\r\n</code></pre><h3>域名/关键字 访问不同的网页</h3><pre><code><span class=\"token operator\">&lt;</span>VirtualHost <span class=\"token operator\">*</span><span class=\"token punctuation\">:</span><span class=\"token number\">80</span><span class=\"token operator\">&gt;</span>\r\n    <span class=\"token class-name\">Servername</span>  php<span class=\"token punctuation\">.</span>gac<span class=\"token punctuation\">.</span>cn\r\n    DocumentRoot <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>www<span class=\"token operator\">/</span>html<span class=\"token operator\">/</span>php\r\n<span class=\"token preprocessor property\">#网站的目录设置为/var/www/html/php访问时用http://php.gac.cn</span>\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>VirtualHost<span class=\"token operator\">&gt;</span>\r\n</code></pre><p>在<code>/var/www/html/php</code>目录下新建php1，php2目录，在每个目录里放上网页，则可通过<code><a href=\"http://php.gac.cn/php1\" rel=\"nofollow\">http://php.gac.cn/php1</a></code>,<code><a href=\"http://php.gac.cn/php2\" rel=\"nofollow\">http://php.gac.cn/php2</a></code>访问两个网页</p><h3>apache反向代理 一个域名反向代理多个discuz站</h3><h4>参考</h4><p><a href=\"https://www.jianshu.com/p/cbe1b54d72b9\" target=\"_blank\">Ubuntu Apache 反向代理</a></p><h4>案例环境</h4><p>反向代理服务器 :Centos apache<br>discuz站所在服务器: Ubuntu apache</p><h4>实现</h4><p>通过<a href=\"https://link.jianshu.com?t=http://www.domain.cn/xxx\" target=\"_blank\">http://www.domain.cn/xxx</a>，访问Ubuntu里面里面已存在的不同的discuz网站</p><h4>问题</h4><p>discuz会根据访问的域名如<a href=\"https://link.jianshu.com?t=http://xxx.cn\" target=\"_blank\">http://xxx.cn</a>生成返回的html网页中的连接，所以访问discuz的连接必须是<a href=\"https://link.jianshu.com?t=http://www.domain.cn/xxx\" target=\"_blank\">http://www.domain.cn/xxx</a>，而在公网上<a href=\"https://link.jianshu.com?t=http://www.domain.cn\" target=\"_blank\">www.domain.cn</a>指向的是反向代理服务器 （Centos ）</p><h4>一种方案</h4><p><strong>反向代理服务器 （Centos apache)配置</strong><br>apache配置文件填入</p><pre><code>\r\n<span class=\"token operator\">&lt;</span>VirtualHost <span class=\"token operator\">*</span><span class=\"token punctuation\">:</span><span class=\"token number\">80</span><span class=\"token operator\">&gt;</span>\r\n    <span class=\"token class-name\">Servername</span>  www<span class=\"token punctuation\">.</span>domain<span class=\"token punctuation\">.</span>cn\r\n        <span class=\"token class-name\">ProxyRequests</span> Off\r\n<span class=\"token preprocessor property\">#zx站</span>\r\n        ProxyPass <span class=\"token operator\">/</span>zx<span class=\"token operator\">/</span> http<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>www<span class=\"token punctuation\">.</span>domain<span class=\"token punctuation\">.</span>cn<span class=\"token operator\">/</span>zx<span class=\"token operator\">/</span>\r\n        ProxyPassReverse <span class=\"token operator\">/</span>zx<span class=\"token operator\">/</span>  http<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>www<span class=\"token punctuation\">.</span>domain<span class=\"token punctuation\">.</span>cn<span class=\"token operator\">/</span>zx<span class=\"token operator\">/</span>\r\n<span class=\"token preprocessor property\">#hjl站</span>\r\n        ProxyPass <span class=\"token operator\">/</span>hjl<span class=\"token operator\">/</span> http<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>www<span class=\"token punctuation\">.</span>domain<span class=\"token punctuation\">.</span>cn<span class=\"token operator\">/</span>hjl<span class=\"token operator\">/</span>\r\n        ProxyPassReverse <span class=\"token operator\">/</span>hjl<span class=\"token operator\">/</span>  http<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>www<span class=\"token punctuation\">.</span>domain<span class=\"token punctuation\">.</span>cn<span class=\"token operator\">/</span>hjl<span class=\"token operator\">/</span>\r\n       <span class=\"token operator\">&lt;</span>Proxy <span class=\"token operator\">*</span><span class=\"token operator\">&gt;</span>\r\n           <span class=\"token class-name\">Order</span> Deny<span class=\"token punctuation\">,</span><span class=\"token class-name\">Allow</span>\r\n           <span class=\"token class-name\">Allow</span> <span class=\"token keyword\">from</span> all\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Proxy<span class=\"token operator\">&gt;</span>\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>VirtualHost<span class=\"token operator\">&gt;</span>\r\n</code></pre><p>因为在公网上<a href=\"https://link.jianshu.com?t=http://www.domain.cn\" target=\"_blank\">www.domain.cn</a>指向代理服务器(centos)，所以为了让代理服务器(centos)将<a href=\"https://link.jianshu.com?t=http://www.domain.cn\" target=\"_blank\">www.domain.cn</a>解析为discuz所在的服务器(ubuntu)，在代理服务器(centos)中添加hosts</p><pre><code>echo discuz所在的服务器<span class=\"token punctuation\">(</span>ubuntu<span class=\"token punctuation\">)</span>ip www<span class=\"token punctuation\">.</span>domain<span class=\"token punctuation\">.</span>cn <span class=\"token operator\">&gt;</span><span class=\"token operator\">&gt;</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>hosts\r\n</code></pre><p><strong>discuz所在的服务器(ubuntu,apache)配置</strong><br>apache配置文件填入</p><pre><code><span class=\"token preprocessor property\">#proxy</span>\r\n<span class=\"token operator\">&lt;</span>VirtualHost <span class=\"token operator\">*</span><span class=\"token punctuation\">:</span><span class=\"token number\">80</span><span class=\"token operator\">&gt;</span>\r\n        <span class=\"token class-name\">ServerName</span>  www<span class=\"token punctuation\">.</span>domain<span class=\"token punctuation\">.</span>cn\r\n        DocumentRoot <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>www\r\n        ErrorLog <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>proxy<span class=\"token punctuation\">.</span>log\r\n        CustomLog <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>proxy<span class=\"token punctuation\">.</span>log combined\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Virtualhost<span class=\"token operator\">&gt;</span>\r\n</code></pre><p>将zx站的目录放在/var/www/zx目录下，hjl站的目录放在/var/www/hjl目录下</p><p>这样当访问<a href=\"https://link.jianshu.com?t=http://www.domain.cn/zx/\" target=\"_blank\">http://www.domain.cn/zx/</a>（对公网来说<a href=\"https://link.jianshu.com?t=http://www.domain.cn\" target=\"_blank\">www.domain.cn</a>指向代理服务器）时，代理服务器会自动请求<a href=\"https://link.jianshu.com?t=http://www.domain.cn/zx/(\" target=\"_blank\">http://www.domain.cn/zx/(</a>对代理服务器来说<a href=\"https://link.jianshu.com?t=http://www.domain.cn\" target=\"_blank\">www.domain.cn</a>指向disucz站点服务器)，discuz返回的网页里面所有的连接也都是<a href=\"https://link.jianshu.com?t=http://www.domain.cn/zx/\" target=\"_blank\">http://www.domain.cn/zx/</a>开头的，可以持续访问。<br><strong>discuz操作</strong><br>zx站和hjl站的域名都是<a href=\"https://link.jianshu.com?t=http://www.domain.cn\" target=\"_blank\">www.domain.cn</a>，他们的cookies保存如果都在根目录就会冲突，将zx站默认cookies目录设置为/zx/,hjl站默认cookie目录设置为/hjl/就不会冲突</p><pre><code>vi discuz目录/config/config_global.php\r\n</code></pre><p>把<code>$_config[\'cookie\'][\'cookiepath\'] = \'\';</code>更改为<code>$_config[\'cookie\'][\'cookiepath\'] = \'/xxx/\';</code><br>xxx代表zx或hjl</p><p>discuz控制面板里也把相应的连接设置为<a href=\"https://link.jianshu.com?t=http://www.domain.cn/xxx/\" target=\"_blank\">http://www.domain.cn/xxx/</a></p>',0,1,1569415543,1569415543,0,0,0),(24,'Apache学习1',NULL,0,0,1,13,'<h2>参考</h2><p><a href=\"https://link.jianshu.com?t=http://www.cnblogs.com/ylan2009/archive/2012/02/25/2368028.html\" target=\"_blank\">ubuntu apache2配置详解(含虚拟主机配置方法)</a><br><a href=\"https://link.jianshu.com?t=https://my.oschina.net/aiheng1988/blog/146967\" target=\"_blank\">Apache Http Server学习笔记</a><br><a href=\"https://link.jianshu.com?t=http://www.phpxs.com/post/apache/\" target=\"_blank\">编程学习网</a><br><a href=\"https://link.jianshu.com?t=https://httpd.apache.org/docs/2.4/zh-cn/\" target=\"_blank\">Apache HTTP 服务器 2.4 文档</a></p><h2>环境</h2><p>Ubuntu 14.04.1 LTS (GNU/Linux 3.13.0-105-generic x86_64)</p><h2>安装</h2><pre><code>apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install apache2\r\n</code></pre><h2>配置文件</h2><h3>配置文件目录/etc/apache2</h3><p><strong>ls查看配置文件目录</strong></p><pre><code>root<span class=\"token variable\">@VM</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">194</span><span class=\"token operator\">-</span>ubuntu<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>apache2<span class=\"token comment\"># ls</span>\r\napache2<span class=\"token punctuation\">.</span>conf    conf<span class=\"token operator\">-</span>enabled  magic           mods<span class=\"token operator\">-</span>enabled  sites<span class=\"token operator\">-</span>available\r\nconf<span class=\"token operator\">-</span>available  envvars       mods<span class=\"token operator\">-</span>available  ports<span class=\"token punctuation\">.</span>conf    sites<span class=\"token operator\">-</span>enabled\r\n</code></pre><p>文件/目录功能备注<br>apache2.confApache在启动时会自动读取这个文件的配置信息而其他的一些配置文件，如 httpd.conf等，则是通过Include指令包含进来在apache2.conf中可以找到这些Include行：例IncludeOptional mods-enabled/*.load`<br>ports.confApache使用的端口也可以先把apache2.conf中的Include /etc/apache2/ports.conf一行去掉，在httpd.conf里设置Apache端口必须在这里开启端口的监听，不然只在virtualhosts里设置的端口不起作用<br>sites-enabled/apache2.conf中引用了这里面的虚拟主机配置通过ls -l可以发现，这里得到文件都是链接向../sites-available/的，而apache2.conf只引用sites-enabled/而不引用/sites-available/，所以我们在/sites-available/里面配置好虚拟主机配置后，还要连接到sites-enabled/目录<br>sites-available/虚拟主机的配置目录，但是不会被引用，需要链接到../site-enabled-<br>mods-enabled/存放apache功能模块，与sites-enabled类似，是链接目录，而且被apache2.conf引用-<br>mods-available/存放apache功能模块，与sites-available类似，是真实配置，不被引用，需要连接-<br></p><h3>虚拟主机/网站配置</h3><p><strong>配置目录/etc/apache2/sites-available</strong><br>我装的apache是默认支持虚拟主机的，看其他教程里说默认不支持，需要改apache.conf</p><h4>新建虚拟主机/网站</h4><pre><code>root<span class=\"token variable\">@VM</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">194</span><span class=\"token operator\">-</span>ubuntu<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token comment\"># cd /etc/apache2/sites-available</span>\r\nroot<span class=\"token variable\">@VM</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">194</span><span class=\"token operator\">-</span>ubuntu<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>apache2<span class=\"token operator\">/</span>sites<span class=\"token operator\">-</span>available<span class=\"token comment\"># vi test-site.conf</span>\r\n</code></pre><h4>虚拟主机/网站配置规则</h4><p><strong>语法<br>&lt;VirtualHost 地址[:端口号] [地址[:端口号]] &gt;<br>具体规则<br>&lt;/VirtualHost&gt;</strong></p><p>端口号需要在ports.conf里添加监听<br><strong>一个端口号只能被一个VirtualHost监听</strong><br><strong>具体规则</strong><br>先总结几个案例再写会好些<br>例如结合<a href=\"https://www.jianshu.com/p/cbe1b54d72b9\" target=\"_blank\">Ubuntu Apache 反向代理</a>，把&lt;VirtualHost&gt;部分的配置添加到test-site.conf Servername换成域名</p><p>更多实例<a href=\"https://www.jianshu.com/p/56d06d134b50\" target=\"_blank\">Apache学习-Apache 实例</a></p><h4>启用虚拟主机</h4><p>建立连接</p><pre><code> ln -s /etc/apache2/sites-available/test-site.conf /etc/apache2/sites-enabled/test.site.conf\r\n</code></pre><p>重启Apache</p><pre><code>/etc/init.d/apache2 restart\r\n</code></pre><h2>注</h2><p>Centos apache的配置目录在<code>/etc/httpd/conf</code>目录，所有配置都在httpd.conf里面</p>',0,1,1569415852,1569415852,0,0,0),(25,'想学APACHE的话就来看吧',NULL,0,0,1,13,'<p>版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。</p><p>本文链接：<a href=\"https://blog.csdn.net/sr_1114/article/details/78607119\" rel=\"nofollow\">https://blog.csdn.net/sr_1114/article/details/78607119</a></p><p>&nbsp;&nbsp;&nbsp;&nbsp; 首先apache是企业中常用的web服务，用来提供http：//（超文本传输协议）。</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 要用apache首先就要部署好，怎么部署呢，以下步骤：</p><p>&nbsp;&nbsp;&nbsp; 安装httpd服务，安装服务有两种方法，可以参考《你会软件安装吗？》这篇博客</p><p>&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp; httpd-maual为httpd服务的手册</p><p>&nbsp;</p><p>&nbsp;&nbsp;&nbsp; 手册安装好之后在/etc/httpd/conf.d目录下就会生成manual.conf这个文件，如下：</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 安装好服务之后，服务属于关闭状态，所以应该将服务打开，并关闭火墙，如下：</p><p>&nbsp;&nbsp;&nbsp; 以上操作以后httpd服务就部署好了，可以通过浏览器的查看检测是否部署成功如下：</p><p>&nbsp;&nbsp;&nbsp;&nbsp; httpd服务的端口在默认情况下是80，那如何修改呢，步骤如下：</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 修改主配置文件中端口为8080，如下：</p><p>&nbsp;&nbsp;&nbsp; 然后重启服务，并查看：</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 用浏览器查看时，页面是apache的页面，那如何修改页面呢，以下为步骤；</p><p>&nbsp;&nbsp;&nbsp;&nbsp; httpd的默认发布目录为/var/www/html/，默认发布文件为index，所以在发布目录下建立index文件，在文件中写入的文字就是登陆之后显示的文字，如下：</p><p>&nbsp;&nbsp; &nbsp;</p><p>&nbsp;&nbsp;&nbsp; 测试结果如下：</p><p>&nbsp;&nbsp;&nbsp; 其默认发布文件可以有多个，但是有顺序的。在默认发布目录下建立test.html文件，在该文件下输入文字，修改httpd的主配置文件/etc/httpd/conf/httpd.conf后，test文件就是httpd的默认发布目录，如下：</p><p>在主配置文件directoryindex后加如test.html。注意：该处的先后顺序决定读取顺序。</p><p>&nbsp;&nbsp;&nbsp; 修改主配置文件后一定要重启服务，</p><p>&nbsp;&nbsp;&nbsp; 然后测试：</p><p>&nbsp;</p><p>&nbsp;&nbsp; 默认发布文件可以修改，同样的，其默认发布目录也可以修改，默认情况下默认发布目录为/var/www/html。现在建立/www/html目录使它成为默认发布目录。</p><p>&nbsp;&nbsp; 首先建立目录，在该目录下创建index.html文件并写入文字，建立好之后在修改配置文件最后重启服务。</p><p>&nbsp; 主配置文件中做如下修改：</p><p>&nbsp;&nbsp; 因为安全上下文的原因，还要修改/www/html内所有文件的安全上下文：</p><p>&nbsp;&nbsp; 以上步骤完成后默认发布目录就修改完成了，当用浏览器查看时就会出现/www/html/inde.html文件中的内容。</p><p>&nbsp;&nbsp; apache还可以创建虚拟主机，步骤如下；</p><p>&nbsp;&nbsp;&nbsp; 首先建立两个文件，文件中的内容为你登陆站点后所显示的内容</p><p>&nbsp;在子配置目录/etc/httpd/conf.d/中创建三个文件。</p><p>&nbsp;第一个文件adefault，它是在默认情况下所登陆的站点，写入该文件的内容如下：</p><p>&nbsp;&nbsp; 第二个文件c.westos.com，写入内容如下：</p><p>第三个文件linux.westos.com,写入内容如下：</p><p>注释： combined是综合型日志，包括报错，访问，拒绝，警告。</p><p>&nbsp; 这三个文件写好之后重启服务，服务端就部署完成。</p><p>&nbsp;&nbsp; 客户端想要通过主机名访问时就要进行解析，在/etc/hostos中写入如下内容：</p><p>&nbsp;&nbsp; 服务端ip&nbsp;&nbsp; <a href=\"http://www.westos.com\" rel=\"nofollow\">www.westos.com</a> c.westos.com linux.westos.com</p><p>&nbsp;&nbsp; 测试：</p><p>&nbsp; apache 可以对主机的访问进行控制，步骤如下：</p><p>&nbsp; 编辑/etc/httpd/adefault,内容如下：</p><p>注释：order后所接的顺序为读取顺序，如图所显示的内容为先读取allow，再读取deny，后面会将前面所重复的内容哦覆盖，表示拒绝所有人。</p><p>然后重启服务，进行测试：</p><p>&nbsp;用户方式的访问控制</p><p>&nbsp;建立用户后进行配置，使用户在访问时需要输入密码，步骤如下：</p><p>&nbsp;</p><p>在adefault中输入如下内容</p><p>&nbsp; Rquire user admin表示有效用户可以进入，adminx是之前所建立的目录。</p><p>设置好之后重启服务，然后进行测试：</p><p>&nbsp;进入后就会显示adminx/index.html中的内容。</p><p>&nbsp;除了html语言外apache还支持php，cgi这两种语言，但是需要一些配置。</p><p>php的配置：</p><p>&nbsp; 在默认发布目录下创建文件index.php写入如下内容：</p><p>&lt;?php</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; phpinfo( );</p><p>?&gt;</p><p>&nbsp; 在没有安装php之前该内容在访问时是无法显示的。</p><p>&nbsp; 安装php，如下:</p><p>安装之后重启服务，再访问时就会出现如下内容：</p><p>cgi的配置：</p><p>&nbsp;&nbsp; 在默认发布目录下创建cgi目录，在cgi下建立index.cgi文件，并给该文件执行权限，写入如下内容：</p><p>&nbsp; 这是一段用cgi语言写的显示日期的代码。</p><p>在adefault中写入如下内容：</p><p>&nbsp; 对安全上下文进行修改，如下：</p><p>然后重启服务，再进行检测：</p><p>考虑到安全问题，需要对http进行加密，步骤如下：</p><p>安装crypto_utils软件，安装之后，用如下方式查看所生成的钥匙。</p><p>执行genkcy <a href=\"http://www.westos.com\" rel=\"nofollow\">www.westos.com</a>命令，做如下选择：</p><p>这里所输入的内容为所生成证书的内容。</p><p>选择完后在ssl.conf中修改钥匙和证书：</p><p>重启服务后对证书进行查看，登陆https：//服务端ip：</p><p>&nbsp;&nbsp; 在登陆网站时，当你输入http后，会自动跳转至https，如何设置呢，如下操作：</p><p>&nbsp; 设定https虚拟主机及网页重写：</p><p>&nbsp; mkdir -p /var/www/virtual/login.westos.com/html并在该目录下创建index。html文件写入要显示的内容。</p><p>&nbsp;在子配置目录中创建login.conf文件，写入如下内容：</p><p>&nbsp; 重启服务之后在浏览器输入的http会自动转化为https。</p><p>apache的设置，你学会了吗？ </p><p>———————————————— </p><p>版权声明：本文为CSDN博主「风越大我越浪」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。 </p><p>原文链接：<a href=\"https://blog.csdn.net/sr_1114/article/details/78607119\" rel=\"nofollow\">https://blog.csdn.net/sr_1114/article/details/78607119</a></p>',0,1,1569416721,1569416721,0,0,0),(26,'apache中关于目录访问权限设置',NULL,0,0,1,12,'<p><span style=\"color: rgb(85, 85, 85);\">注意一下apache的版本。</span></p><p><span style=\"color: rgb(85, 85, 85);\">****************************************</span></p><p><span style=\"color: rgb(85, 85, 85);\"><span style=\"\">apeche2.2</span></span></p><p><span style=\"color: rgb(85, 85, 85);\">1、想禁止来自某个网站或IP的访问，</span></p><p><span style=\"color: rgb(85, 85, 85);\"><br></span></p><p><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\">Order Allow,Deny</span><br></span></p><p><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\">Allow from all</span><br><span style=\"color: rgb(85, 85, 85);\">Deny from domain.org #禁止<span style=\"color: rgb(85, 85, 85);\">domain.org访问本服务器</span></span><br></span></span></p><p><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><br></span></span></span></span></p><p><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\">2、仅允许某一个网站或IP访问本服务器</span></span></span></span></p><p><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><br></span></span></span></span></p><p><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\">Order Allow,Deny</span><br><span style=\"color: rgb(85, 85, 85);\">Allow from ip1 #仅允许指定IP来访问服务器</span><br></span></span></span></span></p><p><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><br></span></span></span></span></span></p><p><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\">3、允许所有IP访问</span></span></span></span></span></p><p><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\">Order Allow,Deny</span><br><span style=\"color: rgb(85, 85, 85);\">Allow from all #仅允许所有IP来访问服务器</span><br></span></span></span></span></span></p><p><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><br></span></span></span></span></span></p><p><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(85, 85, 85);\">******************************************</span></span></span></span></span></p><p></p><p>请检查你的apache版本，2.2和2.4的权限配置写法是不一样的。</p><p>2.2的如下：</p><p>Options Indexes FollowSymLinks<br>AllowOverride All<br>Allow from all<br>Order allow,deny<br></p><p>2.4的如下：</p><p>&nbsp;Options Indexes FollowSymlinks<br>&nbsp;AllowOverride All<br>&nbsp;Require all granted</p><p><span style=\"color: rgb(69, 69, 69);\">&lt;Directory \"网站目录\"&gt;</span><br><span style=\"color: rgb(69, 69, 69);\">&nbsp; &nbsp;</span><span style=\"color: rgb(69, 69, 69);\">Options Indexes FollowSymlinks #</span><br><span style=\"color: rgb(69, 69, 69);\">&nbsp; &nbsp;</span><span style=\"color: rgb(69, 69, 69);\">AllowOverride All</span><br><span style=\"color: rgb(69, 69, 69);\">&nbsp; &nbsp;</span><span style=\"color: rgb(69, 69, 69);\">Require all granted</span><br><span style=\"color: rgb(69, 69, 69);\">&nbsp; &nbsp;&nbsp;</span><span style=\"color: rgb(69, 69, 69);\">&lt;/Directory&gt;</span><br></p><p><span style=\"color: rgb(69, 69, 69);\">****************************************</span></p><p><span style=\"color: rgb(69, 69, 69);\">转别人的</span></p><p></p><p>Apache 从2.2升级到 Apache2.4.x 后配置文件 httpd.conf 的设置方法有了大变化，以前是将 deny from all 全部改成 Allow from all 实现外网访问，现在是将 Require all denied 以及 Require local 都该为 Require all granted 就可以了。</p><p>.htaccess 如果不起作用将 LoadModule rewrite_module modules/mod_rewrite.so 前面的注释（#）去掉就可以了。</p><p>下面看一下 Apache2.4 的变化：（<a href=\"http://httpd.apache.org/docs/2.4/upgrading.html\">官方英文说明</a>）</p><p><strong>所有的请求都被拒绝</strong></p><p><strong>2.2上的配置</strong></p><p>Order deny,allow<br>Deny from all</p><p><strong>2.4上的配置</strong></p><p>Require all denied</p><p><strong>所有请求都是允许的</strong></p><p><strong>2.2上的配置</strong></p><p>Order allow,deny<br>Allow from all</p><p><strong>2.4上的配置</strong></p><p>Require all granted</p><p><strong>在域中的所有主机都可以访问example，所有其他外网主机的访问被拒绝</strong></p><p><strong>2.2上的配置</strong></p><p>Order Deny,Allow<br>Deny from all<br>Allow from example.org</p><p><strong>2.4上的配置</strong></p><p>Require host example.org</p><p>要想外网访问将 Require local 该为 Require all granted 。</p><p><a href=\"http://www.jb51.net/article/61193.htm#\">?</a></p><p>123456经常会用到的：Require all deniedRequire all grantedRequire host xxx.comRequire ip 192.168.1 192.168.2Require local<br></p><p><span style=\"color: rgb(255, 0, 0);\"><br></span></p><p><span style=\"color: rgb(255, 0, 0);\">Require all denied</span></p><p><span style=\"color: rgb(255, 0, 0);\">Require all granted</span></p><p><span style=\"color: rgb(255, 0, 0);\">Require host xxx.com</span></p><p><span style=\"color: rgb(255, 0, 0);\">Require ip 192.168.1 192.168.2</span></p><p><span style=\"color: rgb(255, 0, 0);\">Require local</span></p><p><span style=\"color: rgb(255, 0, 0);\">举例说明</span></p><p><strong>仅允许IP：192.168.0.1 访问</strong></p><p>Require all granted<br>Require ip 192.168.0.1</p><p><strong>仅禁止IP：192.168.0.1访问</strong></p><p>Require all granted<br>Require not ip 192.168.0.1</p><p><strong>允许所有访问</strong></p><p>Require all granted</p><p><strong>拒绝所有访问</strong></p><p>Require all denied</p><p>默认是 Require local 仅允许本地访问。</p>',0,1,1569464511,1569464511,0,0,0),(27,'apache的AllowOverride以及Options使用详解',NULL,0,0,1,12,'<p style=\"\">通常利用Apache的rewrite模块对 URL 进行重写的时候， rewrite规则会写在 .htaccess 文件里。但要使 apache 能够正常的读取.htaccess 文件的内容，就必须对.htaccess 所在目录进行配置</p><p>AllowOverride参数就是指明Apache服务器是否去找.htacess文件作为配置文件，如果设置为none,那么服务器将忽略.htacess文件，如果设置为All,那么所有在.htaccess文件里有的指令都将被重写。对于AllowOverride，还可以对它指定如下一些能被重写的指令类型. </p><p>通常利用Apache的rewrite模块对 URL 进行重写的时候， rewrite规则会写在 .htaccess 文件里。但要使 apache 能够正常的读取.htaccess 文件的内容，就必须对.htaccess 所在目录进行配置。从安全性考虑，根目录的AllowOverride属性一般都配置成不允许任何Override ，即 </p><p><a><u>复制代码</u></a> 代码如下:</p><p> </p><p>&lt;Directory /&gt; </p><p>AllowOverride None </p><p>&lt;/Directory&gt; </p><p> </p><p>在 AllowOverride 设置为 None 时， .htaccess 文件将被完全忽略。当此指令设置为 All 时，所有具有 \".htaccess\" 作用域的指令都允许出现在 .htaccess 文件中。 </p><p>而对于 URL rewrite 来说，至少需要把目录设置为 </p><p><a><u>复制代码</u></a> 代码如下:</p><p> </p><p>&lt; Directory /myblogroot/&gt; </p><p>AllowOverride FileInfo </p><p>&lt; /Directory&gt; </p><p> </p><p>2.在要支持url rewirte的目录启用 Options FollowSymLinks和AllowOverride All </p><p><a><u>复制代码</u></a> 代码如下:</p><p> </p><p>Alias /php \"c:/web/php/\" </p><p>&lt;Directory \"c:/web/php/\"&gt; </p><p>Options Indexes FollowSymLinks </p><p>AllowOverride All </p><p>Order allow,deny </p><p>Allow from all </p><p>&lt;/Directory&gt; </p><p> </p><p>这样通过<a href=\"http://localhost:8080/php/\" rel=\"nofollow\">http://localhost:8080/php/</a>访问时，/php/和其下面的子目录将支持url rewrite</p><p>1&nbsp; AuthConfig&nbsp; 允许使用所有的权限指令，他们包括AuthDBMGroupFile AuthDBMUserFile&nbsp; AuthGroupFile&nbsp; AuthName AuthTypeAuthUserFile和Require</p><p>2&nbsp; FileInfo&nbsp;&nbsp;&nbsp; 允许使用文件控制类型的指令。它们包括AddEncoding AddLanguage&nbsp; AddType&nbsp; DEfaultType ErrorDocument LanguagePriority</p><p>3&nbsp; Indexes&nbsp;&nbsp;&nbsp;&nbsp; 允许使用目录控制类型的指令。它们包括AddDescription&nbsp; AddIcon&nbsp; AddIconByEncoding AddIconByType&nbsp; DefaultIcon&nbsp; DirectoryIndex&nbsp; FancyIndexing&nbsp; HeaderName&nbsp; IndexIgnore&nbsp; IndexOptions ReadmeName</p><p>4&nbsp; Limit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 允许使用权限控制指令。它们包括Allow Deny和Order</p><p>5&nbsp; Options&nbsp;&nbsp;&nbsp;&nbsp; 允许使用控制目录特征的指令.他们包括Options 和XBitHack</p><p><strong>Options</strong></p><p>1&nbsp; All&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 准许以下除MultiViews以外所有功能</p><p>2&nbsp; MultiViews&nbsp; 允许多重内容被浏览，如果你的目录下有一个叫做foo.txt的文件，那么你可以通过/foo来访问到它，这对于一个多语言内容的站点比较有用</p><p>3&nbsp; Indexes&nbsp;&nbsp;&nbsp;&nbsp; 若该目录下无index文件，则准许显示该目录下的文件以供选择</p><p>4&nbsp; IncludesNOEXEC&nbsp; 准许SSI，但不可使用#exec和#include功能</p><p>5&nbsp; Includes&nbsp;&nbsp;&nbsp; 准许SSI</p><p>6&nbsp; FollowSymLinks&nbsp; 在该目录中，服务器将跟踪符号链接。注意，即使服务器跟踪符号链接，它也不会改变用来匹配不同区域的路径名，如果在&lt;Local&gt;;标记内设置，该选项会被忽略</p><p>7&nbsp; SymLinksIfOwnerMatch&nbsp; 在该目录中仅仅跟踪本站点内的链接</p><p>8&nbsp; ExecCGI&nbsp;&nbsp;&nbsp;&nbsp; 在该目录下准许使用CGI</p>',0,1,1569470698,1569470698,0,0,0),(28,'UrlRewrite 的配置和使用总结',NULL,0,0,1,12,'<p>UrlRewrite就是我们通常说的地址重写，用户得到的全部都是经过处理后的URL地址。</p><p><span style=\"color: rgb(0, 0, 0);\">主要优点</span></p><p><a><span style=\"color: rgb(51, 51, 51);\">一：提高安全性，可以有效的避免一些参数名、ID等完全暴露在用户面前，如果用户随便乱输的话，不符合规则的话直接会返回个404或错误页面，这比直接返回500或一大堆服务器错误信息要好的多</span></a></p><p>二：美化URL，去除了那些比如*.do之类的后缀名、长长的参数串等，可以自己组织精简更能反映访问模块内容的URL</p><p>三：更有利于搜索引擎的收入，通过对URL的一些优化，可以使搜索引擎更好的识别与收录网站的信息</p><p>&nbsp; &nbsp; &nbsp;四：可以很方便的重用，提高网站的移植性。如果我们后台方法改动的话，可以保证前台的页面部分不用改。这样就提高了网站的移植性。</p><p>缺点：&nbsp;因为它是通过过滤器原理来实现的，就意味着又多了一道访问，会多少影响点访问速度的，这个可以忽略不计的。</p><p><span style=\"color: rgb(0, 0, 0);\">使用范围</span></p><p><a><span style=\"color: rgb(51, 51, 51);\">地址重写一般是用于将动态地址伪静态。如果本身就是静态就没必要了。地址重写后网站制作者可以通过输入地址名直接访问。</span></a></p><p><span style=\"color: rgb(0, 0, 0);\">使用方法</span></p><p><span style=\"\"><strong>&nbsp;第一步：添加maven依赖或下载</strong></span><span style=\"\"><strong>urlrewritefilter.jar</strong></span><span style=\"color: rgb(51, 51, 51);\">直接到你的&nbsp;</span><span style=\"color: rgb(51, 51, 51);\"><strong>web - inf / lib&nbsp;</strong></span><span style=\"color: rgb(51, 51, 51);\">目录中。</span></p><p><span style=\"color: rgb(51, 51, 51);\">maven依赖：</span></p><p><img src=\"https://img-blog.csdn.net/20180605105752333?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTk1MzAwNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"\"><br></p><p>urlrewritefilter.jar下载地址：</p><p><span style=\"\"><a href=\"http://urlrewritefilter.googlecode.com/files/urlrewritefilter-3.1.0.zip\" rel=\"nofollow\">http://urlrewritefilter.googlecode.com/files/urlrewritefilter-3.1.0.zip</a></span></p><p>&nbsp;把解压后的<span style=\"\">urlrewritefilter</span>-3.1.0.jar拷到web-inf/lib目录下。</p><p><span style=\"color: rgb(51, 51, 51);\">第二步：在web.xml中加入如下配置，进行初始化：</span><img src=\"https://img-blog.csdn.net/20180605110343223?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTk1MzAwNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"\"></p><p>第三步：在WEB-INF目录下建一个urlrewrite.xml文件:<img src=\"https://img-blog.csdn.net/20180605110645313?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTk1MzAwNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"\"></p><p>简单的介绍一下常用的正则表达式：&nbsp;&nbsp;</p><p>. 匹配除换行符以外的任意字符&nbsp;<br>\\w 匹配字母或数字或下划线或汉字&nbsp;<br>\\s 匹配任意的空白符&nbsp;<br>\\d 匹配数字&nbsp;<br>\\b 匹配单词的开始或结束&nbsp;<br>^ 匹配字符串的开始&nbsp;<br>$ 匹配字符串的结束</p><p>常用的&amp;要用&nbsp; &amp;amp;来表示。$1,$2代表与你配置正规表达式/(\\w+)/(\\w+)/相对应的参数。</p><p>&lt;to type=\"forward\"&gt;中的type有两个值，默认的是 type=\"forward\".连接外部的网站时用type=\"redirect\"。</p><ol><li><span style=\"color: rgb(0, 0, 0);\">&lt;rule&gt;&nbsp;&nbsp;</span></li><li><span style=\"color: rgb(0, 0, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;from&gt;^/rss/yahoo\\.html$&lt;/from&gt;&nbsp;&nbsp;</span></li><li><span style=\"color: rgb(0, 0, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;to&nbsp;type=\"redirect\"&gt;<a href=\"http://add.my.yahoo.com/rss?\" rel=\"nofollow\">http://add.my.yahoo.com/rss?</a>&nbsp;url=http://feed.feedsky.com/MySiteFeed[/url] &nbsp;&nbsp;</span></li><li><span style=\"color: rgb(0, 0, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/to&gt;&nbsp;&nbsp;</span></li><li><span style=\"color: rgb(0, 0, 0);\">&lt;/rule&gt;&nbsp; <br></span></li></ol>',0,1,1569471227,1569471227,0,0,0),(29,'Apache Options Indexes FollowSymLinks详解',NULL,0,0,1,12,'<p>    </p><p>如果该虚拟目录下没有 index.html，浏览器也会显示该虚拟目录的目录结构，列出该虚拟目录下的文件和子目录。</p><p>如何禁止 Apache 显示目录列表呢？</p><p>要禁止 Apache 显示目录结构列表，只需将 Option 中的 Indexes 去掉即可。</p><p>比如我们看看一个目录的目录配置：</p><p>&lt;Directory \"D:/Apa/blabla\"&gt;<br>&nbsp;Options Indexes FollowSymLinks #----------&gt;Options FollowSymLinks<br>&nbsp;AllowOverride None<br>&nbsp;Order allow,deny<br>&nbsp;Allow from all<br>&lt;/Directory&gt;<br>你只需要将上面代码中的 Indexes 去掉，就可以禁止 Apache 显示该目录结构。用户就不会看到该目录下的文件和子目录列表了。</p><p>Indexes 的作用就是当该目录下没有 index.html 文件时，就显示目录结构，去掉 Indexes，Apache 就不会显示该目录的列表了。</p><p>第二种方法<br>解决办法：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1、编辑httpd.conf文件<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vi ./conf/httpd.conf</p><p>&nbsp;&nbsp;&nbsp;找到如下内容：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;?BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Directory “C:/Program Files/Apache2.2/htdocs”&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# Possible values for the Options directive are “None”, “All”,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# or any combination of:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# Note that “MultiViews” must be named *explicitly* — “Options All”<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# doesn’t give it to you.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# The Options directive is both complicated and important. Please see<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;<a href=\"http://httpd.apache.org/docs/2.2/mod/core.html#options\">http://httpd.apache.org/docs/2.2/mod/core.html#options</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# for more information.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Options Indexes FollowSymLinks</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# AllowOverride controls what directives may be placed in .htaccess files.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# It can be “All”, “None”, or any combination of the keywords:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;&nbsp;&nbsp;Options FileInfo AuthConfig Limit<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AllowOverride None</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# Controls who can get stuff from this server.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Order allow,deny<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Allow from all</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/Directory&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;……</p><p>&nbsp;&nbsp;&nbsp;在Options Indexes FollowSymLinks在Indexes前面加上 – 符号。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;即： Options -Indexes FollowSymLinks<br>&nbsp;&nbsp;&nbsp;【备注：在Indexes前，加 + 代表允许目录浏览；加 – 代表禁止目录浏览。】</p><p>&nbsp;&nbsp;&nbsp;&nbsp;这样的话就属于整个Apache禁止目录浏览了。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;如果是在虚拟主机中，只要增加如下信息就行：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Directory “D:test”&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Options -Indexes FollowSymLinks<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AllowOverride None<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Order deny,allow<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Allow from all<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/Directory&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样的话就禁止在test工程下进行目录浏览。</p><p>备注： 切记莫把“Allow from all”改成 “Deny from all”，否则，整个网站都不能被打开。<br>&nbsp;&nbsp;&nbsp;&lt;Finished&gt;</p><p>&nbsp;还有一种方法：</p><p>可以在根目录的 .htaccess 文件中输入</p><p>&lt;Files *&gt;<br>Options -Indexes<br>&lt;/Files&gt;<br>就可以阻止Apache 将目录结构列表出来。</p>',0,1,1569471540,1569471540,0,0,0),(30,'.htaccess技巧: URL重写(Rewrite)与重定向(Redirect)',NULL,0,0,1,12,'<h2>目录 Table of Contents</h2><ul><li><a href=\"http://lesca.me/archives/htaccess-rewrite.html/comment-page-1#intro\">一、准备开始：mod_rewrite</a></li><li><a href=\"http://lesca.me/archives/htaccess-rewrite.html/comment-page-1#rewrite\">二、利用.htaccess实现URL重写(rewrite)与URL重定向(redirect)</a><ol><li><a href=\"http://lesca.me/archives/htaccess-rewrite.html/comment-page-1#rewrite1\">将.htm页面映射到.php</a></li><li><a href=\"http://lesca.me/archives/htaccess-rewrite.html/comment-page-1#rewrite2\">临时重定向(R=302)与永久重定向(R=301)</a></li><li><a href=\"http://lesca.me/archives/htaccess-rewrite.html/comment-page-1#rewrite3\">为什么要用重定向？——重定向和URL重写的区别</a></li><li><a href=\"http://lesca.me/archives/htaccess-rewrite.html/comment-page-1#rewrite4\">长短地址转换</a></li><li><a href=\"http://lesca.me/archives/htaccess-rewrite.html/comment-page-1#rewrite5\">去掉www</a></li><li><a href=\"http://lesca.me/archives/htaccess-rewrite.html/comment-page-1#rewrite6\">加上www</a></li><li><a href=\"http://lesca.me/archives/htaccess-rewrite.html/comment-page-1#rewrite7\">支持多域名访问</a></li></ol></li><li><a href=\"http://lesca.me/archives/htaccess-rewrite.html/comment-page-1#query_string\">三、改写查询字符串QUERY_STRING</a><ol><li><a href=\"http://lesca.me/archives/htaccess-rewrite.html/comment-page-1#qs1\">利用QSA转换查询字符串QUERY_STRING</a></li><li><a href=\"http://lesca.me/archives/htaccess-rewrite.html/comment-page-1#qs2\">利用RewriteCond改写查询字符串QUERY_STRING</a></li><li><a href=\"http://lesca.me/archives/htaccess-rewrite.html/comment-page-1#qs3\">QSA与RewriteCond双剑齐发</a></li><li><a href=\"http://lesca.me/archives/htaccess-rewrite.html/comment-page-1#qs4\">剥离查询字符串</a></li></ol></li><li><a href=\"http://lesca.me/archives/htaccess-rewrite.html/comment-page-1#access_control\">四、利用RewriteCond和RewriteRule进行访问控制</a><ol><li><a href=\"http://lesca.me/archives/htaccess-rewrite.html/comment-page-1#ac1\">文件访问控制</a></li><li><a href=\"http://lesca.me/archives/htaccess-rewrite.html/comment-page-1#ac2\">用.htaccess阻止User-agent</a></li><li><a href=\"http://lesca.me/archives/htaccess-rewrite.html/comment-page-1#ac3\">用.htaccess阻止盗链(hot-linking)</a></li></ol></li><li><a href=\"http://lesca.me/archives/htaccess-rewrite.html/comment-page-1#ref\">References</a></li></ul><p><br>URL重定向是.htaccess的重头戏，它可以将长地址转为短地址、将动态地址转为静态地址、重定向丢失的页面、防止盗链、实现自动语言转换等。笔者觉得难点是在正则表达式的运用和理解上。有关htaccess的正则表达式用法，请查阅本站《<a href=\"http://lesca.me/archives/htaccess-rewrite.html/htaccess-appendix.html#htaccess_regex\">.htaccess正则表达式</a>》一文。</p><h2>一、准备开始：mod_rewrite</h2><p>实现所有这些神奇功能的模块叫做mod_rewrite，请确保你的服务器安装并启用了该模块：</p><pre><code>sudo a2enmod rewrite\r\n</code></pre><p>我们一般会把所有涉及URL重写或者重定向的代码这样放置：</p><pre><code>&lt;IfModule mod_rewrite.c&gt;\r\n # Turn on rewrite engine\r\n Options +FollowSymlinks\r\n RewriteEngine on\r\n # More rules below\r\n ...\r\n&lt;/IfModule&gt;\r\n</code></pre><p>一些我们需要注意的地方：</p><ul><li>FollowSymlinks必须启用，这是rewrite引擎的安全需求。</li><li>通常FollowSymlinks在Apache的主配置文件中就已经启用了，所以通常可以省略。</li><li>RewriteEngine命令用于启用rewrite引擎</li><li>IfModule命令用于判断Apache是否安装了mod_rewrite模块，之后笔者会省略该命令，但不代表这是个好习惯。</li><li>mod_rewrite会处理所有提交给Apache的URL请求，并与之后的规则进行匹配</li></ul><p>下面我们开始讲解一些例子。</p><h2>二、利用.htaccess实现URL重写(rewrite)与URL重定向(redirect)</h2><h3>1.将.htm页面映射到.php</h3><p><br></p><pre><code>Options +FollowSymlinks\r\nRewriteEngine on\r\nRewriteRule ^(.*)\\.htm$ $1.php [NC]\r\n</code></pre><p>注意事项：</p><ul><li>该RewriteRule能够将.htm静态页面映射到.php动态页面</li><li>如果通过.htm进入，浏览器地址栏显示的是.htm扩展名，但服务器上实际执行的是.php</li><li>必须保证服务器上有对应的.php，否则会404</li><li>浏览器和搜索引擎可以同时通过.htm和.php访问网页</li><li>如果该目录上存在.htm，将被忽略</li><li>[NC]表示“不区分大小写”，更多类似定义请参考本站《<a href=\"http://lesca.me/archives/htaccess-rewrite.html/htaccess-appendix.html#htaccess_regex\">.htaccess正则表达式</a>》一文</li></ul><h3>2.临时重定向(R=302)与永久重定向(R=301)</h3><p><br></p><pre><code>RewriteEngine on\r\n<span style=\"border:0px;vertical-align:baseline;\">RewriteBase /</span>\r\nRewriteRule ^(.*)\\.htm$ $1.php [<span style=\"border:0px;vertical-align:baseline;\">R</span>,NC,<span style=\"border:0px;vertical-align:baseline;\">L</span>]\r\n</code></pre><p>注意事项：</p><ul><li>该RewriteRule能够将.htm静态页面重定向到.php动态页面</li><li>如果通过.htm进入，浏览器地址栏会自动转为.php，这也是重定向的本质</li><li>必须保证服务器上有对应的.php，否则会404</li><li>浏览器和搜索引擎可以同时通过.htm和.php访问网页</li><li>如果该目录上存在.htm，将被忽略</li><li>RewriteBase定义了重写基准目录。</li><li>例如，如果你将虚拟站点设置在/var/www目录下，删除这行将会导致重定向到<a href=\"http://yourdomain.com/\" rel=\"nofollow\">http://yourdomain.com/</a>var/www/1.php。显然这是找不到的，而且你也不会希望用户看见你的服务器的目录结构。</li><li>再举个例子，如果RewriteBase /base/，那么将会重定向到<a href=\"http://yourdomain.com/\" rel=\"nofollow\">http://yourdomain.com/</a>base/1.php。</li><li>对于重写基准目录，我们还可以通过将$1.php变成/$1.php实现直接变换，这时就可以将RewriteBase省略。</li><li>字母R表示临时重定向，相当于[R=302,NC]。关于重定向代码，请参考本站《<a href=\"http://lesca.me/archives/htaccess-rewrite.html/htaccess-appendix.html#redirect_codes\">HTTP协议重定向编码</a>》</li><li>字母L表示如果能匹配本条规则，那么本条规则是最后一条(Last)，忽略之后的规则。</li></ul><p>在讨论R=302临时重定向后，理解R=301永久重定向也就容易多了：</p><pre><code>RewriteEngine on\r\nRewriteRule ^(.*)$ http://newdomain.com/$1 [R=301,NC,L]\r\n</code></pre><ul><li>这个规则告诉浏览器和搜索引擎，网站地址发生了永久性变更，用户的URL请求将会被发送给新的域名（主机）处理。</li><li>由于是重定向到新的主机地址，RewriteBase也就没有出现的必要了。</li></ul><h3>3.为什么要用重定向？——重定向和URL重写的区别</h3><p><br></p><ul><li>通过重定向，浏览器知道页面位置发生变化，从而改变地址栏显示的地址</li><li>通过重定向，搜索引擎意识到页面被移动了，从而更新搜索引擎索引，将原来失效的链接从搜索结果中移除</li><li>临时重定向(R=302)和永久重定向(R=301)都是亲搜索引擎的，是SEO的重要技术</li><li>URL重写用于将页面映射到本站另一页面，若重写到另一网络主机（域名），则按重定向处理</li></ul><h3>4.长短地址转换</h3><p><br></p><p>利用URL重写，我们可以很方便地实现长短地址的转换，但是用重定向就不合适了。</p><pre><code>RewriteEngine On\r\nRewriteRule ^grab /public/files/download/download.php\r\n</code></pre><p>若访问</p><p><a href=\"http://mysite/grab?file=my.zip\" rel=\"nofollow\">http://mysite/grab?file=my.zip</a></p><p>则会执行该页面：</p><p><a href=\"http://mysite/public/files/download/download.php?file=my.zip\" rel=\"nofollow\">http://mysite/public/files/download/download.php?file=my.zip</a></p><h3>5.去掉www</h3><p><br></p><pre><code>Options +FollowSymlinks\r\nRewriteEngine on\r\nRewriteCond %{HTTP_HOST} ^www\\.(.*) [NC]\r\nRewriteRule ^(.*)$ http://%1/$1 [R=301,NC,L]\r\n</code></pre><h3>6.加上www</h3><p><br></p><pre><code>RewriteEngine On\r\nRewriteCond %{HTTP_HOST} ^(.*)$\r\nRewriteRule (.*) http://www\\.%1/$1 [R=301,L]\r\n</code></pre><h3>7.支持多域名访问</h3><p><br></p><p>如果你不凑巧买到了不支持多域名的主机，那么.htaccess或许可以帮助你。现在假设你有域名domain-one.com和domain-two.com，并且在服务器根目录有对应文件夹one和two，那么通过下面的改写就能让Apache同时接受者两个域名的请求：</p><pre><code>#two domains served from one root..\r\nRewriteCond %{HTTP_HOST} domain-one.com\r\nRewriteCond %{REQUEST_URI} !^/one\r\nRewriteRule ^(.*)$ /one/$1 [L]\r\n\r\nRewriteCond %{HTTP_HOST} domain-two.com\r\nRewriteCond %{REQUEST_URI} !^/two\r\nRewriteRule ^(.*)$ /two/$1 [L]\r\n</code></pre><h3>三、改写查询字符串QUERY_STRING</h3><p><br></p><p>查询字符串是指URL请求中“问号”后面的部分。比如，<a href=\"http://mysite/grab?\" rel=\"nofollow\">http://mysite/grab?</a>foo=bar中粗体部分就是查询字符串，其中变量名是foo，值是bar。</p><h3>1.利用QSA转换查询字符串QUERY_STRING</h3><p><br></p><p>QSA标志（ Query String Appending）用于在URI中截取查询字符串，这个截取操作是通过小括号正则表达式实现的：</p><pre><code>RewriteEngine On\r\nRewriteRule /pages/(.+) /page.php?page=$1 [<span style=\"border:0px;vertical-align:baseline;\">QSA</span>]\r\n</code></pre><ul><li>将会把请求/pages/123?one=two&nbsp;映射到 /page.php?page=123&amp;one=two</li><li>注意粗体部分几乎是相同的，除了“问号”变成了“与”符号</li><li>如果没有QSA标志，那么会映射到/page.php?page=123。</li><li>如果没有用到小括号正则表达式，就不需要QSA，这在上节<a href=\"http://lesca.me/archives/htaccess-rewrite.html/comment-page-1#rewrite4\">“长短地址转换”</a>中已经例证过了。</li><li>小括号正则表达式可以截取查询字符串中的内容，但是如果没有开启QSA标志，那么在/page.php?page=$1中“问号”之后将会被剥离丢弃。这种特性可以用于实现<a href=\"http://lesca.me/archives/htaccess-rewrite.html/comment-page-1#qs4\">“剥离查询字符串”</a></li></ul><p>通过QSA，我们可以将简单链接/simple/flat/link/ 映射成 server-side.php?first-var=flat&amp;second-var=link</p><pre><code>RewriteEngine On\r\nRewriteRule ^/([^/]+)/([^/]+)/? /index.php?first-var=$1&amp;second-var=$2 [QSA]\r\n</code></pre><h3>2.利用RewriteCond改写查询字符串QUERY_STRING</h3><p><br></p><pre><code>RewriteEngine On\r\nRewriteCond %{QUERY_STRING} foo=(.*)\r\nRewriteRule ^grab(.*) /page.php?bar=<span style=\"border:0px;vertical-align:baseline;\">%1</span>\r\n</code></pre><ul><li>该规则将访问请求<a href=\"http://mysite/\" rel=\"nofollow\">http://mysite/</a>grab?foo=bar转换为<a href=\"http://mysite/\" rel=\"nofollow\">http://mysite/</a>page.php?bar=bar</li><li>RewriteCond用于捕获查询字符串（QUERY_STRING）中变量foo的值，并存储在%1中</li><li>QUERY_STRING是Apache定义的“变量=值”向量（数组）</li></ul><h3>3.QSA与RewriteCond双剑齐发</h3><p><br></p><pre><code>RewriteEngine On\r\nRewriteCond %{QUERY_STRING} foo=(.+)\r\nRewriteRule ^grab/(.*) /%1/index.php?file=$1 [QSA]\r\n</code></pre><ul><li>会把/grab/foobar.zip?level=5&amp;foo=bar&nbsp;映射到 /bar/index.php?file=foobar.zip&amp;level=5&amp;foo=bar</li><li>转换后根目录是bar目录</li><li>foobar.zip?level=5中的“问号”变成了foobar.zip&amp;level=5中的“与”符号</li></ul><h3>4.剥离查询字符串</h3><p><br></p><p>只需在要开始剥离的链接后面加个“问号”，并且不要启用QSA标志，就可剥离查询字符串</p><pre><code>RewriteEngine On\r\n# Whatever QS is\r\nRewriteCond %{QUERY_STRING} . \r\n# I don\'t want it with Question mark\r\nRewriteRule foo.php(.*) /foo.php? [L] \r\n</code></pre><h2>四、利用RewriteCond和RewriteRule进行访问控制</h2><p>我们在第一篇.htaccess基础中提到了<a href=\"http://lesca.me/archives/htaccess-rewrite.html/htaccess-basic.html#access_control\">很多有用的访问控制方法</a>，其实通过Rewrite也能实现类似的功能，而且可以更强大！</p><h3>1.文件访问控制</h3><p><br></p><p>之前<a href=\"http://lesca.me/archives/htaccess-rewrite.html/htaccess-basic.html#access_control\">利用Order、Files及FilesMatch命令实现的访问控制</a>可以满足大部分要求，但是当用户被拒绝时，他们看到的是硕大的“403 Forbidden”，如果你不想伤害用户的感情，就需要显示一些别的东西，通过Rewrite就可以实现这个特性：</p><pre><code>RewriteEngine On\r\nRewriteCond %{REQUEST_FILENAME} !^(.+)\\.css$\r\nRewriteCond %{REQUEST_FILENAME} !^(.+)\\.js$\r\nRewriteCond %{REQUEST_FILENAME} !special.zip$\r\nRewriteRule ^(.+)$ /chat/ [NC]\r\n</code></pre><ul><li>该规则将仅允许用户请求.css, .js类型的文件，还有special.zip文件</li><li>RewriteRule 后面指定了限制规则：映射到/char/目录下处理</li><li>RewriteCond 后面的“感叹号”(!)起到了“否定”作用，它表明，对不满足后面正则表达式者应用RewriteRule规则，也就是对当前类型的文件将不应用规则</li><li>RewriteCond 之间是以逻辑“与”连接的，也就是只有当三个条件都不满足时才执行RewriteRule</li><li>该规则也会限制访问.htm, .jpg等格式</li><li>该规则不可以放在虚拟站点根目录（/）下，否则会死循环</li><li>如果是二级目录，如/test/，那么传入RewriteCond的参数是以/test/开始的，因此从(.+)获得的文件名也含有/test/，读者必须对此多加小心</li><li>要想仅获得文件名，可以将(.+)替换成([^/]+)，并且去掉符号^，如下所示：<pre><code>RewriteEngine On\r\nRewriteCond %{REQUEST_FILENAME} !<span style=\"border:0px;vertical-align:baseline;\">([^/]+)</span>\\.css$\r\nRewriteCond %{REQUEST_FILENAME} !<span style=\"border:0px;vertical-align:baseline;\">([^/]+)</span>\\.js$\r\nRewriteRule ^(.+)$ /chat/ [NC]\r\n</code></pre></li></ul><h3>2.用.htaccess阻止User-agent</h3><p><br></p><p>什么是User-agent？User-agent用于浏览器向服务器“自报家门”，更确切的说是所有HTTP客户端都得用User-agent向服务器“自报家门”，以便服务器对不同的客户端作出不同响应。比如，某站点可能需要对浏览器、搜索引擎crawl还有各类下载工具作出不同的响应。服务器就是通过所谓的User-agent进行区分的。<br>如果你的服务器提供某些资源的下载，那么你就必须多加小心诸如“迅雷”等下载软件，因为它们可能把你网站资源吸干，并且影响你的正常访客访问。为此，我们可以利用Rewrite限制某些UA的访问：</p><pre><code>RewriteEngine on\r\nRewriteCond %{HTTP_USER_AGENT} 2.0.50727 [NC]\r\nRewriteRule . abuse.txt [L]\r\n</code></pre><ul><li>该规则限制“迅雷”客户端下载资源，并将下载文件重置到abuse.txt</li><li>HTTP_USER_AGENT是Apache的内置变量</li><li>2.0.50727是迅雷User-agent的特征字符串</li><li>RewriteRule后面的“点”表示“任意URI”，也就是不管请求的是什么，都输出abuse.txt</li></ul><p>通常，我们不会仅限制一个UA。利用[OR]即可实现对多个UA作出统一处理：</p><pre><code>RewriteEngine on\r\nRewriteCond %{HTTP_USER_AGENT} 2.0.50727 [NC,OR]\r\nRewriteCond %{HTTP_USER_AGENT} ^BlackWidow [NC,OR]\r\n# etc..\r\nRewriteCond %{HTTP_USER_AGENT} ^Net\\ Vampire [NC]\r\nRewriteRule . abuse.txt [L]\r\n</code></pre><h3>3.用.htaccess阻止盗链(hot-linking)</h3><p><br></p><p>盗链，特别是图片，是非常可耻的！哪怕将图片复制到自己服务器上，也比盗用他人的图片链接来得光彩！（吐糟完毕）<br>.htaccess的Rewrite功能可以提供非常简单、有效的方法阻止这种可耻行为：</p><pre><code>RewriteEngine On\r\nRewriteCond %{HTTP_REFERER} !^$\r\nRewriteCond %{HTTP_REFERER} !^http://(www\\.)?lesca\\.me/ [NC]\r\nRewriteCond %{REQUEST_URI} !hotlink\\.png [NC]\r\nRewriteRule .*\\.(gif|jpg|png)$ /hotlink.png [NC]\r\n</code></pre><p>简单解释一下该规则的功能：</p><ul><li>除本站以外其他网站都不得引用本站图片，具体可以理解为</li><li>如果引用站点为“空”或者是“本站”，或者，所引用对象是“hotlink.png”，那么就允许访问</li><li>再次提醒，RewriteCond之间默认的逻辑连接词是逻辑“与”</li><li>这里的难点是理解逻辑转换，即<a href=\"http://simple.wikipedia.org/wiki/De_Morgan%27s_laws\">德·摩根定律</a></li></ul><h2>References:</h2><p>[1]&nbsp;<a href=\"http://corz.org/serv/tricks/htaccess2.php\">more .htaccess tips and tricks..</a><br>[2]&nbsp;<a href=\"http://perishablepress.com/stupid-htaccess-tricks/\">Stupid htaccess Tricks</a><br>[3]&nbsp;<a href=\"http://httpd.apache.org/docs/2.2/rewrite/flags.html#flag_qsa\">QSA Flag</a><br>[4]&nbsp;<a href=\"http://roshanbh.com.np/2008/03/url-rewriting-examples-htaccess.html\">5 useful url rewriting examples using .htaccess</a></p><h3><a href=\"http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh_HK\">版权声明</a>&nbsp;<a href=\"http://lesca.me/archives/htaccess-rewrite.html\">» .htaccess技巧: URL重写(Rewrite)与重定向(Redirect)</a></h3><p><br></p><ul><li>作者：lesca　　最后更新：May 16, 2012</li><li>本博客所有内容均在<a href=\"http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh_HK\">《“署名-非商业用途-保持一致”的创作共用协议》</a>下发布</li><li>全文转载，必须包含本版权信息；部分转载或引用，请注明作者署名与文章出处</li><li>本文链接：<a href=\"http://lesca.me/archives/htaccess-rewrite.html\">http://lesca.me/archives/htaccess-rewrite.html</a></li></ul>',0,1,1569471737,1569471737,0,0,0),(31,'学习 Apache 的一些心得体会[转]',NULL,0,0,1,12,'<p style=\"margin-left: 8px;\">Apache 将目录作为单元来进行存取控制，每个目录在/etc/httpd/conf/httpd.conf 中</p><p style=\"margin-left: 8px;\">　　使用一个段落，首先的是/目录，这实际是设置缺省值：</p><p style=\"margin-left: 8px;\">　　Options FollowSymLinks&nbsp;<br style=\"\">　　AllowOverride None</p><p style=\"margin-left: 8px;\">　　每个段落都是由这样的两组尖括号构成的行夹起来的，其中最主要的句子是Options，AllowOverride，Allow/Deny，Order 等。</p><p style=\"margin-left: 8px;\">　　Options这个子句用来说明一些主要的设置，目前可以使用的设置有Indexes，Includes，FollowSymLinks，ExecCGI，MultiView，当然还有两个最简单的选择就是None和All。</p><p style=\"margin-left: 8px;\">　　None是禁止所有选择，而All 允许上面的所有Options。一般我们主要关心的是Indexes 和FollowSymLinks。Indexes 是设定是否允许在目录下面没有index.html 的时候显示目录，而FollowSymLinks 决定是否可以通过符号连接跨越DocumentRoot。例如，尽管/ftp 不在/home/httpd/html 下面，但是我们仍然可以使用符号连接建立一个/home/httpd/html/ftp使得可以直接输入<a href=\"http://mydomain.com/ftp\">http://mydomain.com/ftp</a>&nbsp;来访问这个目录。</p><p style=\"margin-left: 8px;\">　　使用FollowSymLinks 的办法很简单，就是首先在合适的目录段落里面Options Follow SymLinks，（符号连接的上层就可以）然后建立一个别名：</p><p style=\"margin-left: 8px;\">　　Alias /ftp/ “home/httpd/html/ftp/”</p><p style=\"margin-left: 8px;\">　　后面的是你建立的到/ftp 的符号连接。注意这一行应该位于所有目录段落之外。</p><p style=\"margin-left: 8px;\">　　AllowOverride</p><p style=\"margin-left: 8px;\">　　AllowOverride 定义是否允许各个目录用目录中的.htaccess(后面解释)覆盖这里设定的Options。它的选择有Options，FileInfo，AuthConfig，Limit 或者它们的组合，当然还有None 和All。</p><p style=\"margin-left: 8px;\">　　由于/是缺省设置，所以这里没有设置太多的内容，相反，我们应该在/之后独立设置各个目录的控制，例如：</p><p style=\"margin-left: 8px;\">　　Options Indexes FollowSymLinks&nbsp;<br style=\"\">　　AllowOverride None&nbsp;<br style=\"\">　　Order allow,deny&nbsp;<br style=\"\">　　Allow from all</p><p style=\"margin-left: 8px;\">　　出现了两个新的选项：Order 和Allow。</p><p style=\"margin-left: 8px;\">　　Order</p><p style=\"margin-left: 8px;\">　　它有两种用法，即Order allow,deny 或者Order deny,allow。简单地说，它用来设置是先执行deny 还是先执行allow，例如，Order deny,allow 意味着先看deny 行，再看allow 行，这样如果deny from all 再allow from 202.112.58.0/24 后来的allow子句就会超越deny 而对202.112.58.x 打开访问。</p><p style=\"margin-left: 8px;\">　　Allow/Deny from</p><p style=\"margin-left: 8px;\">　　这两个选项和Order 一起使用，Allow 允许某个地址来的连接请求，Deny 则禁止这个请求，例如在Order deny，allow 的情况下，Deny from all，Allow from 192.168.12.0/24 表示只有192.168.12.x 的用户可以访问这个目录。</p><p style=\"margin-left: 8px;\">　　现在我们来看看下面的一个设定：</p><p style=\"margin-left: 8px;\">　　UserDir public_html&nbsp;<br style=\"\">　　AllowOverride FileInfo AuthConfig Limit&nbsp;<br style=\"\">　　Options MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec&nbsp;<br style=\"\">　　Order allow,deny&nbsp;<br style=\"\">　　Allow from all&nbsp;<br style=\"\">　　Order deny,allow&nbsp;<br style=\"\">　　Deny from all</p><p style=\"margin-left: 8px;\">　　这个有什么用处？UserDir 是一个特殊的选项，用来在用户的宿主目录下设置主页，比如，有一个名字叫wanghy 的用户，其宿主目录是/home/wanghy，而且UserDir 象我们刚才那样设定，那么，你可以在浏览器中输入<a href=\"http://www.mydomain.com/~wanghy\">http://www.mydomain.com/~wanghy</a>，它将对应的是宿主目录+UserDir，也就是/home/wanghy/public_html。当然，为了使这个功能生效，你得将这个目录设置为大家都可以读。（现在知道<a href=\"http://xxx.net/~yourname\">http://xxx.net/~yourname</a>&nbsp;是怎么回事了吧，P）</p><p style=\"margin-left: 8px;\">　　下面的行就是对这个功能的限制，注意要使得某人的这个功能生效，必须有这个段落，这个段落里别的东西都是熟知的，唯一新的东西是Limit 段，它用来提供存取限制，例如对应的段落设置GET 和POST 权限，诸如此类。上面的段落表示所有人都可以通过www 进行GET 和POST，而任何人都不能PUT 和DELETE、MOVE 等等。</p><p style=\"margin-left: 8px;\">　　Limit</p><p style=\"margin-left: 8px;\">　　对某个路径进行存取限制。</p><p style=\"margin-left: 8px;\">　　现在我们来看看下面的一个设定：</p><p style=\"margin-left: 8px;\">　　UserDir public_html&nbsp;<br style=\"\">　　AllowOverride FileInfo AuthConfig Limit&nbsp;<br style=\"\">　　Options MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec&nbsp;<br style=\"\">　　Order allow,deny&nbsp;<br style=\"\">　　Allow from all&nbsp;<br style=\"\">　　Order deny,allow&nbsp;<br style=\"\">　　Deny from all</p><p style=\"margin-left: 8px;\">　　这个有什么用处？UserDir 是一个特殊的选项，用来在用户的宿主目录下设置主页，比如，有一个名字叫wanghy 的用户，其宿主目录是/home/wanghy，而且UserDir 象我们刚才那样设定，那么，你可以在浏览器中输入<a href=\"http://www.mydomain.com/~wanghy\">http://www.mydomain.com/~wanghy</a>，它将对应的是宿主目录+UserDir，也就是/home/wanghy/public_html。当然，为了使这个功能生效，你得将这个目录设置为大家都可以读。（现在知道<a href=\"http://xxx.net/~yourname\">http://xxx.net/~yourname</a>&nbsp;是怎么回事了吧，P）</p><p style=\"margin-left: 8px;\">　　下面的行就是对这个功能的限制，注意要使得某人的这个功能生效，必须有这个段落，这个段落里别的东西都是熟知的，唯一新的东西是Limit 段，它用来提供存取限制，例如对应的段落设置GET 和POST 权限，诸如此类。上面的段落表示所有人都可以通过www 进行GET 和POST，而任何人都不能PUT 和DELETE、MOVE 等等。</p><p style=\"margin-left: 8px;\">　　Limit</p><p style=\"margin-left: 8px;\">　　对某个路径进行存取限制。</p><p style=\"margin-left: 8px;\">　　实际配置如下：</p><p style=\"margin-left: 8px;\">　　mkdir /home/rd2/leon&nbsp;<br style=\"\">　　chmod 755 /home/rd2&nbsp;<br style=\"\">　　chmod 755 /home/rd2/leon&nbsp;<br style=\"\">　　cp index.html /home/rd2/leon</p><p style=\"margin-left: 8px;\">　　然后就可以在浏览器中输入<a href=\"http://10.12.2.82/~rd2\">http://10.12.2.82/~rd2</a>，它将对应的是/宿主目录/UserDir(我们设置位leon)，也就是显示/home/wanghy/leon下的index.html。</p><p style=\"margin-left: 8px;\">　　&lt;IfModule mod_userdir.c&gt;&nbsp;<br style=\"\">　　#&nbsp;<br style=\"\">　　# UserDir is disabled by default since it can confirm the presence&nbsp;<br style=\"\">　　# of a username on the system (depending on home directory&nbsp;<br style=\"\">　　# permissions).&nbsp;<br style=\"\">　　#&nbsp;<br style=\"\">　　#UserDir disable 注释掉&nbsp;<br style=\"\">　　#&nbsp;<br style=\"\">　　# To enable requests to /~user/ to serve the user\'s public_html&nbsp;<br style=\"\">　　# directory, remove the \"UserDir disable\" line above, and uncomment&nbsp;<br style=\"\">　　# the following line instead:&nbsp;<br style=\"\">　　#&nbsp;<br style=\"\">　　UserDir leon 改为自己喜欢的&nbsp;<br style=\"\">　　# UserDir public_html 注视掉原句&nbsp;<br style=\"\">　　&lt;/IfModule&gt;&nbsp;<br style=\"\">　　#&nbsp;<br style=\"\">　　# Control access to UserDir directories. The following is an example&nbsp;<br style=\"\">　　# for a site where these directories are restricted to read-only.&nbsp;<br style=\"\">　　#&nbsp;<br style=\"\">　　&lt;Directory /home/*/leon&gt; 改为自己喜欢的&nbsp;<br style=\"\">　　AllowOverride FileInfo AuthConfig Limit&nbsp;<br style=\"\">　　Options MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec&nbsp;<br style=\"\">　　&lt;Limit GET POST OPTIONS&gt;&nbsp;<br style=\"\">　　Order allow,deny&nbsp;<br style=\"\">　　Allow from all&nbsp;<br style=\"\">　　&lt;/Limit&gt;&nbsp;<br style=\"\">　　&lt;LimitExcept GET POST OPTIONS&gt;&nbsp;<br style=\"\">　　Order deny,allow&nbsp;<br style=\"\">　　Deny from all&nbsp;<br style=\"\">　　&lt;/LimitExcept&gt;&nbsp;<br style=\"\">　　&lt;/Directory&gt;</p><p style=\"margin-left: 8px;\">　　FollowSymLinks决定是否可以通过符号连接跨越DocumentRoot。例如，尽管/home不在/var/www/html下面，但是我们仍然可以使用符号连接也就是说可以直接输入<a href=\"http://mydomain.com/myhome\">http://mydomain.com/myhome</a>来访问这个目录。</p><p style=\"margin-left: 8px;\">　　使用FollowSymLinks的办法很简单，就是目录段落里面Options Follow SymLinks，然后建立一个别名：</p><p style=\"margin-left: 8px;\">　　Alias /myhome “/home”&nbsp;<br style=\"\">　　Alias /myhome \"/home\"(不能是/myhome/)&nbsp;<br style=\"\">　　&lt;Directory \"/home\"&gt;&nbsp;<br style=\"\">　　Options Indexes FollowSymLinks MultiViews&nbsp;<br style=\"\">　　AllowOverride None&nbsp;<br style=\"\">　　Order allow,deny&nbsp;<br style=\"\">　　Allow from all&nbsp;<br style=\"\">　　&lt;/Directory&gt;</p><p style=\"margin-left: 8px;\">　　虚拟主机：</p><p style=\"margin-left: 8px;\">　　NameVirtualHost 10.12.2.82&nbsp;<br style=\"\">　　&lt;VirtualHost 10.12.2.84&gt; 需要复制一个eth0:0 #访问时候用：10.12.2.84,不可用leon1.abit.cn???????&nbsp;<br style=\"\">　　DocumentRoot /home/leon&nbsp;<br style=\"\">　　ServerName leon1.abit.cn&nbsp;<br style=\"\">　　&lt;/VirtualHost&gt;&nbsp;<br style=\"\">　　&lt;VirtualHost 10.12.2.82&gt;访问时候用：leon(leon1).abit.cn&nbsp;<br style=\"\">　　DocumentRoot /var/www/html&nbsp;<br style=\"\">　　ServerName leon.abit.cn&nbsp;<br style=\"\">　　&lt;/VirtualHost&gt;&nbsp;<br style=\"\">　　&lt;VirtualHost 10.12.2.82&gt;&nbsp;<br style=\"\">　　DocumentRoot /home&nbsp;<br style=\"\">　　ServerName leon2.abit.cn&nbsp;<br style=\"\">　　&lt;/VirtualHost&gt; <br></p>',0,1,1569472278,1569472278,0,0,0),(32,'linux终端文件管理器ranger使用详解',NULL,0,0,2,12,'<p>date: 2014.09.20; modification:2017.08.03</p><p> </p><p>目录:</p><ul><li><a href=\"http://www.mikewootc.com/wiki/linux/usage/ranger_file_manager.html#安装\">1 安装</a></li><li><a href=\"http://www.mikewootc.com/wiki/linux/usage/ranger_file_manager.html#配置\">2 配置</a><ul><li><a href=\"http://www.mikewootc.com/wiki/linux/usage/ranger_file_manager.html#配置文件\">2.1 配置文件</a></li><li><a href=\"http://www.mikewootc.com/wiki/linux/usage/ranger_file_manager.html#配置ranger\">2.2 配置ranger</a></li><li><a href=\"http://www.mikewootc.com/wiki/linux/usage/ranger_file_manager.html#自动挂载u盘等外部存储位置需要安装usbmount\">2.3 自动挂载U盘等外部存储位置,需要安装usbmount:</a></li></ul></li><li><a href=\"http://www.mikewootc.com/wiki/linux/usage/ranger_file_manager.html#快捷键\">3 快捷键</a></li><li><a href=\"http://www.mikewootc.com/wiki/linux/usage/ranger_file_manager.html#快速预览\">4 快速预览</a></li></ul><p> </p><h1>1 安装</h1><pre><code>$sudo apt-get install ranger</code></pre><p>官方网站: <a href=\"http://ranger.nongnu.org/\">http://ranger.nongnu.org/</a></p><h1>2 配置</h1><h2>2.1 配置文件</h2><p>首先复制配置文件到主目录:</p><pre><code>$ranger --copy-config=all</code></pre><p>然后自己到~/.config/ranger中配置各种选项即可.</p><h2>2.2 配置ranger</h2><p>在～/.config/ranger中有ranger的配置文件.</p><p>找到文件scope.sh中, 在externsions部分注释掉不想预览的文件类型, 在那行上面添加\"#\"注释掉即可. ranger在预览rar等压缩包时会运行得比较慢.</p><p>rc.conf保存着快捷键的说明</p><h2>2.3 自动挂载U盘等外部存储位置,需要安装usbmount:</h2><pre><code>$sudo apt-get install usbmount\r\n$sudo vim /etc/usbmount/usbmount.conf</code></pre><p>在MOUNTOPTIONS那行添加user即可使普通用户也对挂载的U盘拥有写权限, 如下: MOUNTOPTIOS=\"rw,user,noatime,nodiratime\"</p><h1>3 快捷键</h1><p>下面列出常用操作的快捷键</p><pre><code>?  查看帮助</code></pre><p><strong>浏览:</strong></p><pre><code>H   后退\r\nL   前进\r\ngg  跳到顶端\r\nG   跳到底端\r\ngh  go home\r\ngn  新建标签\r\nf   查找\r\n/   搜素\r\ng   快速进入目录</code></pre><p><strong>编辑:</strong></p><pre><code>space   选择\r\nuv      取消选择\r\n\r\nyy      复制\r\ndd      剪切\r\npp      粘贴\r\ndelete  删除\r\ncw      重命名\r\nA       在当前名称基础上重命名\r\nI       类似A, 但是光标会跳到起始位置\r\nCtrl-f  向下翻页\r\nCtrl-b  向上翻页</code></pre><p><strong>书签:</strong></p><pre><code>m       新建书签\r\n`       打开书签\r\num      删除书签</code></pre><p><strong>标签:</strong></p><pre><code>gn / C-n        新建标签\r\nTAB / S-TAB     切换标签\r\nA-Right, A-Left 切换标签\r\ngc / C-w        关闭标签</code></pre><p><strong>排序:</strong></p><pre><code>on/ob   根据文件名进行排序(natural/basename)\r\noc      根据改变时间进行排序 (Change Time 文件的权限组别和文件自身数据被修改的时间)\r\nos      根据文件大小进行排序(Size)\r\not      根据后缀名进行排序 (Type)\r\n\r\noa      根据访问时间进行排序 (Access Time 访问文件自身数据的时间)\r\nom      根据修改进行排序 (Modify time 文件自身内容被修改的时间)</code></pre><p><strong>其他:</strong></p><pre><code>zh      显示隐藏文件\r\n\r\nzp      打开/关闭文件预览功能\r\nzP      打开目录预览功能</code></pre><p><strong>链接(Link):</strong></p><pre><code>pl      粘贴绝对路径的链接\r\npL      粘贴相对路径的链接\r\nphl     硬链接</code></pre><p><strong>批量改名:</strong></p><p>批量选择文件后, 键入命令:bulkname, 会打开编辑器, 其中的文件名编辑后保存退出, 再次打开操作确认编辑, 然后就批量改名了, 如果想取消批量改名, 在确认时把文件内容删除即可.</p><p><strong>任务管理:</strong></p><p>在执行某些操作(比如复制一个大文件)时不能立即完成, 这在 ranger 中就是一个任务. 你可以停止, 启动某个任务, 也可以对某个任务设置优先级.</p><pre><code>w: 打开/关闭任务视图. 在w打开的任务视图中:\r\n    dd: 终止一个任务\r\n    J: 降低当前任务的优先级\r\n    K: 提升当前任务的优先级</code></pre><p><strong>其他:</strong></p><pre><code>zf      过滤器(如过滤pdf文件, zf+pdf,回车)\r\nS       在当前目录打开终端\r\nz(*)    改变设置, *表示在弹出选项中的选择\r\no(*)    改变排序方式\r\n! / s   使用shell命令(！shell -w ls -hl %s,%s代表当前被选中的文件)\r\n:       使用ranger命令(3? 查看可用命令)\r\n:set colorscheme snow 设置颜色模式</code></pre><h1>4 快速预览</h1><p>安装一下程序可以实现快速预览:</p><pre><code>elinks, html\r\nhighlight,text/code\r\nimg2txt,image\r\natool,压缩包\r\npdf2text,pdf\r\nmedinfo,audio/video</code></pre>',0,1,1569474055,1569474055,0,0,0),(33,'linux修改文件所有者和文件所在组',NULL,0,0,2,12,'<p><strong>&nbsp;</strong></p><p><strong>chgrp&nbsp; 用户名&nbsp;&nbsp;&nbsp; 文件名&nbsp; -R</strong></p><p><strong>chown 用户名&nbsp;&nbsp; 文件名&nbsp; -R</strong></p><p>&nbsp;</p><p><strong>-R表示递归目录下所有文件</strong></p><p>&nbsp;</p><p><strong>以上部分已验证</strong></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p><strong>一、修改文件所属组群——chgrp</strong></p><p>&nbsp;&nbsp; 修改文件所属组群很简单-chgrp命令，就是change group的缩写（我们可以利用这些来记忆命令）</p><p>&nbsp;&nbsp; 语法：<strong>chgrp&nbsp; 组群&nbsp; 文件名/目录</strong>&nbsp;</p><p>&nbsp;&nbsp; 举例：</p><p>[root@redhat ~]# groupadd groupa</p><p>[root@redhat ~]# groupadd groupb</p><p>[root@redhat ~]# useradd&nbsp;&nbsp; -g groupa zgz</p><p>[root@redhat ~]# su - zgz</p><p>[zgz@redhat ~]$ touch filea</p><p>[zgz@redhat ~]$ touch fileb</p><p>[zgz@redhat ~]$ ls -l</p><p>total 8</p><p>-rw-r--r--&nbsp; 1 zgz groupa 0 Sep 26 05:48 filea</p><p>-rw-r--r--&nbsp; 1 zgz groupa 0 Sep 26 05:50 fileb</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --</p><p><strong>[root@redhat zgz]# chgrp&nbsp; groupb filea&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--改变filea所属群组</strong></p><p>[root@redhat zgz]# ls -l</p><p>total 8</p><p>-rw-r--r--&nbsp; 1 zgz groupb 0 Sep 26 05:48 filea</p><p>-rw-r--r--&nbsp; 1 zgz groupa 0 Sep 26 05:50 fileb</p><p>&nbsp;</p><p><strong>二、修改文件拥有者——chown</strong></p><p><strong>&nbsp;&nbsp;</strong>&nbsp;修改组群的命令使chgrp，即change group，那么修改文件拥有者的命令自然就是chown，即change owner。chown功能很多，不仅仅能更改文件拥有者，还可以修改文件所属组群。如果需要将某一目录下的所有文件都改变其拥有者，可以使用-R参数。</p><p>&nbsp;&nbsp;&nbsp;语法如下：</p><p><strong>&nbsp;&nbsp;&nbsp;chown [-R] 账号名称&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 文件/目录</strong></p><p><strong>&nbsp;&nbsp; chown [-R] 账号名称</strong>:<strong>组群&nbsp; 文件/目录</strong></p><p><strong>&nbsp;&nbsp;</strong>&nbsp;举例：</p><p>[root@redhat zgz]# ls -l</p><p>total 20</p><p>-rw-r--r--&nbsp; 1 zgz groupb&nbsp;&nbsp;&nbsp; 0 Sep 26 05:48 filea</p><p>-rw-r--r--&nbsp; 1 zgz groupa&nbsp;&nbsp;&nbsp; 3 Sep 26 05:59 fileb</p><p>drwxr-xr-x&nbsp; 2 zgz groupa 4096 Sep 26 06:07 zgzdir</p><p><strong>[root@redhat zgz]# chown myy fileb&nbsp;--修改fileb的拥有者为myy</strong></p><p>[root@redhat zgz]# ls -l</p><p>total 20</p><p>-rw-r--r--&nbsp; 1 zgz groupb&nbsp;&nbsp;&nbsp; 0 Sep 26 05:48 filea</p><p>-rw-r--r--&nbsp; 1 myy groupa&nbsp;&nbsp;&nbsp; 3 Sep 26 05:59 fileb</p><p>drwxr-xr-x&nbsp; 2 zgz groupa 4096 Sep 26 06:07 zgzdir</p><p><strong>[root@redhat zgz]# chown myy:groupa filea&nbsp;--修改filea的拥有者为myy，并且同<br></strong>[root@redhat zgz]# ls -l时修改组群为groupa</p><p>total 20</p><p>-rw-r--r--&nbsp; 1 myy groupa&nbsp;&nbsp;&nbsp; 0 Sep 26 05:48 filea</p><p>-rw-r--r--&nbsp; 1 myy groupa&nbsp;&nbsp;&nbsp; 3 Sep 26 05:59 fileb</p><p>drwxr-xr-x&nbsp; 2 zgz groupa 4096 Sep 26 06:07 zgzdir</p><p><strong>[root@redhat zgz]# chown -R myy&nbsp; zgzdir&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>同时改变其下所有文件拥有者</strong><br>total 20<br>-rw-r--r--&nbsp; 1 myy groupa&nbsp;&nbsp;&nbsp; 0 Sep 26 05:48 filea<br>-rw-r--r--&nbsp; 1 myy groupa&nbsp;&nbsp;&nbsp; 3 Sep 26 05:59 fileb<br>drwxr-xr-x&nbsp; 2 myy groupa 4096 Sep 26 06:07 zgzdir<br>[root@redhat zgz]# cd zgzdir/<br>[root@redhat zgzdir]# ls -l<br>total 8<br>-rw-r--r--&nbsp; 1 myy groupa 0 Sep 26 06:07 filec<br>-rw-r--r--&nbsp; 1 myy groupa 0 Sep 26 06:07 filed</strong></p><p>&nbsp;&nbsp;</p><p><strong>三、改变文件权限——chmod</strong></p><p><strong>&nbsp;&nbsp;&nbsp;1.用数字来改变文件权限</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>我们已经了解了-rw-r--r--&nbsp;所表示含义，linux为每一个权限分配一个固定的数字：</p><p>&nbsp;&nbsp;&nbsp;&nbsp; r： 4（读权限）</p><p>&nbsp;&nbsp;&nbsp;&nbsp; w： 2（写权限）</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x： 1（执行权限）</p><p>我们再将这些数字相加，就得到每一组的权限值，例如</p><p>-rw-r--r--&nbsp; 1 myy groupa 0 Sep 26 06:07 filed</p><p>第一组（user）：rw- = 4+2+0 = 6</p><p>第二组（group）：r-- = 4+0+0 = 4</p><p>第三组（others）：r-- = 4+0+0 = 4</p><p>那么644就是fileb权限的数字表示值。</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 如果我们想改变某一个文件的权限，首先需要将权限转化为数字组合，例如我们想得到-rwxrw-r--，那么就应该得到数字组合：[4+2+1][4+2+0][4+0+0]=764,然后再用chmod命令去修改</p><p>&nbsp;&nbsp;&nbsp;&nbsp; chmod语法：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>chmod xyz 文件/目录</strong></p><p>&nbsp;&nbsp;&nbsp;&nbsp; 举例：</p><p>[root@redhat zgzdir]# ls -l</p><p>total 8</p><p>-rw-r--r--&nbsp; 1 myy groupa 0 Sep 26 06:07 filec</p><p>-rw-r--r--&nbsp; 1 myy groupa 0 Sep 26 06:07 filed</p><p><strong>[root@redhat zgzdir]# chmod 777 filec--将filec的权限改变为777</strong></p><p>[root@redhat zgzdir]# ls -l</p><p>total 8</p><p>-rwxrwxrwx&nbsp; 1 myy groupa 0 Sep 26 06:07 filec</p><p>-rw-r--r--&nbsp; 1 myy groupa 0 Sep 26 06:07 filed</p><p><strong>[root@redhat zgzdir]# chmod 750 filed--将filed的权限改变为750</strong></p><p>[root@redhat zgzdir]# ls -l</p><p>total 8</p><p>-rwxrwxrwx&nbsp; 1 myy groupa 0 Sep 26 06:07 filec</p><p>-rwxr-x---&nbsp; 1 myy groupa 0 Sep 26 06:07 filed</p><p><strong>&nbsp;&nbsp;&nbsp;</strong></p><p><strong>&nbsp;&nbsp;&nbsp;2、用字符来改变文件权限</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>&nbsp;还有一种改变权限的方法，我们已经了解到，文件权限分为三组，分别是user，group，others，那么我们可以用u，g,o分别代表三组，另外，a（all）代表全部，而权限属性即可用r，w，x三个字符来表示，那么请看下面的语法：</p><p><strong>chmod&nbsp;&nbsp;&nbsp;u/g/o/a&nbsp;&nbsp; +(加入)/-(除去)/=(设定)&nbsp; r/w/x&nbsp; 文件或者目录</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong></p><p>&nbsp;举例：</p><p>&nbsp;我们想使filed文件得到：u：可读，可写，可执行</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;g，o：可读，可执行</p><p>[root@redhat zgzdir]# ls -l</p><p>total 8</p><p>-rwxrwxrwx&nbsp; 1 myy groupa 0 Sep 26 06:07 filec</p><p>-rwxr-x---&nbsp; 1 myy groupa 0 Sep 26 06:07 filed</p><p><strong>[root@redhat zgzdir]# chmod u=rwx,go=rx filed--修改filed的文件属性<br></strong>[root@redhat zgzdir]# ls -l</p><p>total 8</p><p>-rwxrwxrwx&nbsp; 1 myy groupa 0 Sep 26 06:07 filec</p><p>-rwxr-xr-x&nbsp; 1 myy groupa 0 Sep 26 06:07 filed</p><p>其中g和o也可以用“，”分开来分别设定。</p><p>假设目前我不知道各组权限如何，只是想让所有组都增加“x”权限，那么我们可以用chmod a+x filename来实现，</p><p>举例：</p><p><strong>[root@redhat zgz]# ls -l<br>total 24<br>-rw-r--r--&nbsp; 1 myy groupa&nbsp;&nbsp;&nbsp; 0 Sep 26 05:48 filea<br>-rw-r--r--&nbsp; 1 myy groupa&nbsp;&nbsp;&nbsp; 3 Sep 26 05:59 fileb<br>-rw-r--r--&nbsp; 1 zgz groupa&nbsp;&nbsp;&nbsp; 0 Sep 26 06:39 fileg<br>drwxr-xr-x&nbsp; 2 myy groupa 4096 Sep 26 06:07 zgzdir<br>[root@redhat zgz]# chmod a+x filea--修改filea的文件属性，所有组都增加“x”权限</strong></p><p>[root@redhat zgz]# ls -l</p><p>total 24</p><p>-rwxr-xr-x&nbsp; 1 myy groupa&nbsp;&nbsp;&nbsp; 0 Sep 26 05:48 filea</p><p>-rw-r--r--&nbsp; 1 myy groupa&nbsp;&nbsp;&nbsp; 3 Sep 26 05:59 fileb</p><p>-rw-r--r--&nbsp; 1 zgz groupa&nbsp;&nbsp;&nbsp; 0 Sep 26 06:39 fileg</p><p>drwxr-xr-x&nbsp; 2 myy groupa 4096 Sep 26 06:07 zgzdir</p><p>如果想除去某一权限，可以用“-”来操作，</p><p>举例：</p><p>[root@redhat zgz]# ls -l</p><p>total 24</p><p>-rwxr-xr-x&nbsp; 1 myy groupa&nbsp;&nbsp;&nbsp; 0 Sep 26 05:48 filea</p><p>-rw-r--r--&nbsp; 1 myy groupa&nbsp;&nbsp;&nbsp; 3 Sep 26 05:59 fileb</p><p>-rw-r--r--&nbsp; 1 zgz groupa&nbsp;&nbsp;&nbsp; 0 Sep 26 06:39 fileg</p><p>drwxr-xr-x&nbsp; 2 myy groupa 4096 Sep 26 06:07 zgzdir</p><p>[root@redhat zgz]# chmod a-x filea<strong>-修改filea文件属性所有组都除去“x”权限</strong></p><p>[root@redhat zgz]# ls -l</p><p>total 24</p><p>-rw-r--r--&nbsp; 1 myy groupa&nbsp;&nbsp;&nbsp; 0 Sep 26 05:48 filea</p><p>-rw-r--r--&nbsp; 1 myy groupa&nbsp;&nbsp;&nbsp; 3 Sep 26 05:59 fileb</p><p>-rw-r--r--&nbsp; 1 zgz groupa&nbsp;&nbsp;&nbsp; 0 Sep 26 06:39 fileg</p><p>drwxr-xr-x&nbsp; 2 myy groupa 4096 Sep 26 06:07 zgzdir</p><p>[root@redhat zgz]#</p><p>&nbsp;</p><p><strong>友情提醒：</strong></p><p><strong>chgrp，chown，chmod这些命令默认的情况下只有root有权限执行，大家有时可能会用普通账户去修改文件权限，linux会提示你没有这个权限。因此大家一定要注意当前用户，例如：</strong></p><p>[zgz@redhat ~]$ chgrp groupb filea</p><p>chgrp: changing group of `filea\': Operation not permitted</p><p><strong>--zgz没有权限来改变‘filea’的组群</strong></p>',0,1,1569490325,1569490325,0,0,0),(34,'PHP的unlink与rmdir删除目录及目录下所有文件方法',NULL,0,0,1,13,'<p>在php中删除文件与目录其实很简单只要两个函数一个是unlink一个rmdir函数,如果要实现删除目录及目录下的文件我们需要利用递归来操作.本文主要和大家介绍了PHP unlink与rmdir删除目录及目录下所有文件的实例代码,需要的朋友可以参考下，希望能帮助到大家。</p><p>函数代码:仅删除指定目录下的文件,不删除目录文件夹,代码如下:</p><p>class shanchu { //循环目录下的所有文件 function delFileUnderDir( $dirName=”../Smarty/templates/templates_c” ) { if ( $handle = opendir( “$dirName” ) ) { while ( false !== ( $item = readdir( $handle ) ) ) { if ( $item != “.” &amp;&amp; $item != “..” ) { if ( is_dir( “$dirName/$item” ) ) { delFileUnderDir( “$dirName/$item” ); } else {//开源代码phpfensi.com if( unlink( “$dirName/$item” ) )echo “成功删除文件： $dirName/$item<br>n”; } } } closedir( $handle ); } } }<br></p><p>假设需要删除一个名叫”upload”目录下的所有文件,但无需删除目录文件夹,你可以通过以下代码完成:</p><p>php删除所有目录,代码如下:</p><p>function deltree($pathdir) { echo $pathdir;//调试时用的 if(is_empty_dir($pathdir))//如果是空的 { rmdir($pathdir);//直接删除 } else{//否则读这个目录，除了.和..外 $d=dir($pathdir); while($a=$d-&gt;read()) { if(is_file($pathdir.\'/\'.$a) &amp;&amp; ($a!=\'.\') &amp;&amp; ($a!=\'..\')){unlink($pathdir.\'/\'.$a);} //如果是文件就直接删除 if(is_dir($pathdir.\'/\'.$a) &amp;&amp; ($a!=\'.\') &amp;&amp; ($a!=\'..\')) {//如果是目录 if(!is_empty_dir($pathdir.\'/\'.$a))//是否为空 {//如果不是，调用自身，不过是原来的路径+他下级的目录名 deltree($pathdir.\'/\'.$a); } if(is_empty_dir($pathdir.\'/\'.$a)) {//如果是空就直接删除 rmdir($pathdir.\'/\'.$a); } } } $d-&gt;close(); echo \"必须先删除目录下的所有文件\";//我调试时用的 } } function is_empty_dir($pathdir) { //判断目录是否为空 $d=opendir($pathdir); $i=0; while($a=readdir($d)) { $i++; } closedir($d); if($i&gt;2){return false;} else return true; }<br></p><p>PHP删除目录及目录下所有文件,代码如下:</p><p>n”; } } } closedir( $handle ); if( rmdir( $dirName ) )echo “成功删除目录： $dirName<br>n”; } } //假设需要删除一个名叫”upload”的同级目录即此目录下的所有文件，你可以通过以下代码完成： delDirAndFile( ‘upload\'); ?&gt;<br></p><p>相关推荐：</p><p><a href=\"http://www.php.cn/php-ercikaifa-347120.html\" target=\"_self\">PHP 删除文件与文件夹操作 unlink()与rmdir()这两个函数的使用</a></p><p><a href=\"http://www.php.cn/php-weizijiaocheng-351225.html\" target=\"_self\">PHP unlink() 函数</a></p><p><a href=\"http://www.php.cn/php-weizijiaocheng-319035.html\" target=\"_self\">php中unlink()、mkdir()、rmdir()等的用法介绍</a></p><p>以上就是PHP的unlink与rmdir删除目录及目录下所有文件方法的详细内容，更多请关注php中文网其它相关文章！</p>',0,1,1569495184,1569495184,0,0,0),(35,'【Linux】Vim编辑器-批量注释与反注释',NULL,0,0,2,13,'<p>vim编辑器---批量注释与反注释</p><p>在使用vim编写代码的时候，经常需要用到批量注释与反注释一段代码。下面简要介绍其操作。</p><p>方法一 块选择模式</p><p>插入注释：</p><p>用v进入virtual模式</p><p>用上下键选中需要注释的行数</p><p>按Control+v（win下面ctrl+q）进入列模式</p><p>按大些“I”进入插入模式，输入注释符“#”或者是\"//\"，然后立刻按下ESC（两下）</p><p>取消注释：</p><p>Ctrl + v 进入块选择模式，选中你要删除的行首的注释符号，注意// 要选中两个，选好之后按d即可删除注释</p><p>方法二 替换命令</p><p>批量注释：</p><p>使用下面命令在指定的行首添加注释：</p><p>:起始行号,结束行号s/^/注释符/g</p><p>取消注释：</p><p>:起始行号,结束行号s/^注释符//g</p><p>实例演示：</p><p>在27 - 30行添加 // 注释</p><p>:27,30s#^#//#g</p><p>在27 - 30行删除 // 注释</p><p>:27,30s#^//##g</p><p>在10 - 20行添加 # 注释</p><p>:10,20s/^/#/g</p><p>在10 - 20行删除 # 注释</p><p>:10,20s/^/#/g</p><p>注意例子中正则的分割符使用的是相反的符号，如果匹配// 那么使用 #作分隔符这样不需要对/作转义处理，节省输入次数。 </p><p>———————————————— </p><p>版权声明：本文为CSDN博主「江南烟雨」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。 </p><p>原文链接：<a href=\"https://blog.csdn.net/xiajun07061225/article/details/8488210\" rel=\"nofollow\">https://blog.csdn.net/xiajun07061225/article/details/8488210</a></p><h1 style=\"\"><br></h1>',0,1,1569586319,1569586319,0,0,0),(36,' mysql having的用法 ',NULL,0,0,2,14,'<p>having的用法</p><p>having字句可以让我们筛选成组后的各种数据，where字句在聚合前先筛选记录，也就是说作用在group by和having字句前。而 having子句在聚合后对组记录进行筛选。我的理解就是真实表中没有此数据，这些数据是通过一些函数生存。</p><p>SQL实例：</p><p>一、显示每个地区的总人口数和总面积．<br>SELECT region, SUM(population), SUM(area) FROM bbc GROUP BY region</p><p>先以region把返回记录分成多个组，这就是GROUP BY的字面含义。分完组后，然后用聚合函数对每组中<br>的不同字段（一或多条记录）作运算。</p><p>二、 显示每个地区的总人口数和总面积．仅显示那些面积超过1000000的地区。</p><p>SELECT region, SUM(population), SUM(area)<br>FROM bbc<br>GROUP BY region<br>HAVING SUM(area)&gt;1000000</p><p>在这里，我们不能用where来筛选超过1000000的地区，因为表中不存在这样一条记录。<br>相反，having子句可以让我们筛选成组后的各组数据</p><p><a href=\"http://lib.csdn.net/base/mysql\" target=\"_blank\">MySQL</a>判断某个字段的长度：</p><p>select home_page from aaa表 where char_length(trim(home_page))&lt;10 and char_length(trim(home_page))&gt;1;</p><h2>mysql中的where和having子句的区别</h2><p>mysql中的where和having子句都可以实现过滤记录的功能,但他们的用法还是有一些区别的,看一例子:<br>用group by和having子句联合来查出不重复的记录,sql如下:<br>select uid,email,count(*) as ct from `edm_user081217` GROUP BY email<br>然后看这个，就容易理解了<br>select uid,email,count(*) as ct from `edm_user081217` GROUP BY email HAVING ct &gt; 1<br>先用group by 对email进行分组,在用having来过滤大于1的,这样查找出来的就是重复的记录了.<br><br>以下是having和where的区别：<br>Select city FROM weather WHERE temp_lo = (SELECT max(temp_lo) FROM weather);<br>作用的对象不同。WHERE 子句作用于表和视图，HAVING 子句作用于组。<br>WHERE 在分组和聚集计算之前选取输入行（因此，它控制哪些行进入聚集计算）， 而 HAVING 在分组和聚集之后选取分组的行。因此，WHERE 子句不能包含聚集函数； 因为试图用聚集函数判断那些行输入给聚集运算是没有意义的。 相反，HAVING 子句总是包含聚集函数。（严格说来，你可以写不使用聚集的 HAVING 子句， 但这样做只是白费劲。同样的条件可以更有效地用于 WHERE 阶段。）<br>在前面的例子里，我们可以在 WHERE 里应用城市名称限制，因为它不需要聚集。 这样比在 HAVING 里增加限制更加高效，因为我们避免了为那些未通过 WHERE 检查的行进行分组和聚集计算<br>综上所述：<br>having一般跟在group by之后，执行记录组选择的一部分来工作的。<br>where则是执行所有数据来工作的。<br>再者having可以用聚合函数，如having sum(qty)&gt;1000</p><p>2017-07-05 12:03:48更新：</p><p>我们来对比一下</p><pre><code><span style=\"color: #0000ff;\">SELECT</span> ip,ip1,ip2,ip3,ip4,<span style=\"color: #ff00ff;\">count</span>(<span style=\"color: #808080;\">*</span>) ct,mobile_info <span style=\"color: #0000ff;\">FROM</span><span style=\"color: #000000;\"> `lmaster_log` \r\n        </span><span style=\"color: #0000ff;\">GROUP</span> BY ip1,ip2,ip3 <span style=\"color: #0000ff;\">ORDER</span> <span style=\"color: #0000ff;\">BY</span> ip1,ip2,ip3,ip4 <span style=\"color: #0000ff;\">HAVING</span> ct <span style=\"color: #808080;\">&gt;</span> <span style=\"color: #800000; font-weight: bold;\">2</span>;</code></pre><pre><code><span style=\"color: #0000ff;\">SELECT</span> ip,ip1,ip2,ip3,ip4,<span style=\"color: #ff00ff;\">count</span>(<span style=\"color: #808080;\">*</span>) ct,mobile_info <span style=\"color: #0000ff;\">FROM</span><span style=\"color: #000000;\"> `lmaster_log` \r\n        </span><span style=\"color: #0000ff;\">GROUP</span> BY ip1,ip2,ip3 <span style=\"color: #0000ff;\">HAVING</span> ct <span style=\"color: #808080;\">&gt;</span> <span style=\"color: #800000; font-weight: bold;\">2</span> <span style=\"color: #0000ff;\">ORDER</span> <span style=\"color: #0000ff;\">BY</span> ip1,ip2,ip3,ip4;</code></pre><p>一个语句</p><p>[Err] 1064 - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'HAVING ct &gt; 2\' at line 2</p><p>语句2是出现结果，所以我们在使用order by时要注意，他的位置</p>',0,1,1569596411,1569596411,0,0,0),(37,'MYSQL：SQL中Group By的使用',NULL,0,0,1,14,'<ul><li><a href=\"http://www.cnblogs.com/rainman/archive/2013/05/01/3053703.html#m0\">1、概述</a></li><li><a href=\"http://www.cnblogs.com/rainman/archive/2013/05/01/3053703.html#m1\">2、原始表</a></li><li><a href=\"http://www.cnblogs.com/rainman/archive/2013/05/01/3053703.html#m2\">3、简单Group By</a></li><li><a href=\"http://www.cnblogs.com/rainman/archive/2013/05/01/3053703.html#m3\">4、Group By 和 Order By</a></li><li><a href=\"http://www.cnblogs.com/rainman/archive/2013/05/01/3053703.html#m4\">5、Group By中Select指定的字段限制</a></li><li><a href=\"http://www.cnblogs.com/rainman/archive/2013/05/01/3053703.html#m5\">6、Group By All</a></li><li><a href=\"http://www.cnblogs.com/rainman/archive/2013/05/01/3053703.html#m6\">7、Group By与聚合函数</a></li><li><a href=\"http://www.cnblogs.com/rainman/archive/2013/05/01/3053703.html#m7\">8、Having与Where的区别</a></li><li><a href=\"http://www.cnblogs.com/rainman/archive/2013/05/01/3053703.html#m8\">9、Compute 和 Compute By</a></li></ul><p><br></p><h3>1、概述</h3><p>“Group By”从字面意义上理解就是根据“By”指定的规则对数据进行分组，所谓的分组就是将一个“数据集”划分成若干个“小区域”，然后针对若干个“小区域”进行数据处理。</p><p><br></p><h3>2、原始表</h3><p><img src=\"https://images0.cnblogs.com/blog/33509/201304/28234015-f1cc175bc15c439d94abf7cb1c52ab97.png\" alt=\"\"></p><p><br></p><h3>3、简单Group By</h3><h4>示例1</h4><pre><code>select 类别, sum(数量) as 数量之和\r\nfrom A\r\ngroup by 类别</code></pre><p>返回结果如下表，实际上就是分类汇总。</p><p><img src=\"https://images0.cnblogs.com/blog/33509/201304/28234054-ff92ae14bfe74da98c4deb8d7c78f2f8.png\" alt=\"\"></p><p><br></p><h3>4、Group By 和 Order By</h3><h4>示例2</h4><pre><code>select 类别, sum(数量) AS 数量之和\r\nfrom A\r\ngroup by 类别\r\norder by sum(数量) desc</code></pre><p>返回结果如下表</p><p><img src=\"https://images2015.cnblogs.com/blog/33509/201605/33509-20160507160034812-1769640827.png\" alt=\"\"></p><p>在Access中不可以使用“order by 数量之和 desc”，但在SQL Server中则可以。</p><p><br></p><h3>5、Group By中Select指定的字段限制</h3><h4>示例3</h4><pre><code>select 类别, sum(数量) as 数量之和, 摘要\r\nfrom A\r\ngroup by 类别\r\norder by 类别 desc</code></pre><p>示例3执行后会提示下错误，如下图。这就是需要注意的一点，在select指定的字段要么就要包含在Group By语句的后面，作为分组的依据；要么就要被包含在聚合函数中。</p><p><img src=\"https://images0.cnblogs.com/blog/33509/201304/28234141-f046e758679242e3834aacd4773740f2.png\" alt=\"\"></p><p><br></p><h3>6、Group By All</h3><h4>示例4</h4><pre><code>select 类别, 摘要, sum(数量) as 数量之和\r\nfrom A\r\ngroup by all 类别, 摘要</code></pre><p>示例4中则可以指定“摘要”字段，其原因在于“多列分组”中包含了“摘要字段”，其执行结果如下表</p><p><img src=\"https://images0.cnblogs.com/blog/33509/201304/28234156-7fb9d1f258ad4faaa26decfddc3723fc.png\" alt=\"\"></p><p>“多列分组”实际上就是就是按照多列（类别+摘要）合并后的值进行分组，示例4中可以看到“a, a2001, 13”为“a, a2001, 11”和“a, a2001, 2”两条记录的合并。</p><p>SQL Server中虽然支持“group by all”，但<a href=\"http://technet.microsoft.com/zh-cn/library/ms175028(v=sql.90).aspx\">Microsoft SQL Server 的未来版本中将删除 GROUP BY ALL，避免在新的开发工作中使用 GROUP BY ALL</a>。Access中是不支持“Group By All”的，但Access中同样支持多列分组，上述SQL Server中的SQL在Access可以写成</p><pre><code>select 类别, 摘要, sum(数量) AS 数量之和\r\nfrom A\r\ngroup by 类别, 摘要</code></pre><p><br></p><h3>7、Group By与聚合函数</h3><p>在示例3中提到group by语句中select指定的字段必须是“分组依据字段”，其他字段若想出现在select中则必须包含在聚合函数中，常见的聚合函数如下表：</p><p>函数作用支持性<br>sum(列名)求和　　　　<br>max(列名)最大值　　　　<br>min(列名)最小值　　　　<br>avg(列名)平均值　　　　<br>first(列名)第一条记录仅Access支持<br>last(列名)最后一条记录仅Access支持<br>count(列名)统计记录数注意和count(*)的区别<br></p><h4>示例5：求各组平均值</h4><pre><code>select 类别, avg(数量) AS 平均值 from A group by 类别;</code></pre><h4>示例6：求各组记录数目</h4><pre><code>select 类别, count(*) AS 记录数 from A group by 类别;</code></pre><h4>示例7：求各组记录数目</h4><p><br></p><h3>8、Having与Where的区别</h3><ul><li>where 子句的作用是在对查询结果进行分组前，将不符合where条件的行去掉，即在分组之前过滤数据，where条件中不能包含聚组函数，使用where条件过滤出特定的行。</li><li>having 子句的作用是筛选满足条件的组，即在分组之后过滤数据，条件中经常包含聚组函数，使用having 条件过滤出特定的组，也可以使用多个分组标准进行分组。</li></ul><h4>示例8</h4><pre><code>select 类别, sum(数量) as 数量之和 from A\r\ngroup by 类别\r\nhaving sum(数量) &gt; 18</code></pre><h4>示例9：Having和Where的联合使用方法</h4><pre><code>select 类别, SUM(数量)from A\r\nwhere 数量 gt;8\r\ngroup by 类别\r\nhaving SUM(数量) gt; 10</code></pre><p><br></p><h3>9、Compute 和 Compute By</h3><pre><code>select * from A where 数量 &gt; 8</code></pre><p>执行结果：</p><p><img src=\"https://images0.cnblogs.com/blog/33509/201305/01222254-f994cd7563d748ce98e505099ec121af.png\" alt=\"\"></p><h4>示例10：Compute</h4><pre><code>select *\r\nfrom A\r\nwhere 数量&gt;8\r\ncompute max(数量),min(数量),avg(数量)</code></pre><p>执行结果如下：</p><p><img src=\"https://images0.cnblogs.com/blog/33509/201305/01222307-2d255932d5a04974a390b1e7a23e4279.png\" alt=\"\"></p><p>compute子句能够观察“查询结果”的数据细节或统计各列数据（如例10中max、min和avg），返回结果由select列表和compute统计结果组成。</p><h4>示例11：Compute By</h4><pre><code>select *\r\nfrom A\r\nwhere 数量&gt;8\r\norder by 类别\r\ncompute max(数量),min(数量),avg(数量) by 类别</code></pre><p>执行结果如下：</p><p><img src=\"https://images0.cnblogs.com/blog/33509/201305/01222322-0729b129cb294a29aa06d041b737bb11.png\" alt=\"\"></p><p>示例11与示例10相比多了“order by 类别”和“... by 类别”，示例10的执行结果实际是按照分组（a、b、c）进行了显示，每组都是由改组数据列表和改组数统计结果组成，另外：</p><ul><li>compute子句必须与order by子句用一起使用</li><li>compute...by与group by相比，group by 只能得到各组数据的统计结果，而不能看到各组数据</li></ul><p>在实际开发中compute与compute by的作用并不是很大，SQL Server支持compute和compute by，而Access并不支持</p>',0,1,1569596441,1569596441,0,0,0),(38,'mysql语句group by用法详解',NULL,0,0,1,14,'<p>原文地址：<a href=\"https://www.cnblogs.com/snsdzjlz320/p/5738226.html\">https://www.cnblogs.com/snsdzjlz320/p/5738226.html</a></p><p>			</p><ul><li><a href=\"https://blog.csdn.net/cpc784221489/article/details/90407124#_label00\" target=\"_self\">group by</a></li><li><a href=\"https://blog.csdn.net/cpc784221489/article/details/90407124#_label01\" target=\"_self\">group by + group_concat()</a></li><li><a href=\"https://blog.csdn.net/cpc784221489/article/details/90407124#_label02\" target=\"_self\">group by + 集合函数</a></li><li><a href=\"https://blog.csdn.net/cpc784221489/article/details/90407124#_label03\" target=\"_self\">group by + having</a></li><li><a href=\"https://blog.csdn.net/cpc784221489/article/details/90407124#_label04\" target=\"_self\">group by + with rollup</a></li></ul><p>&nbsp;</p><h2>group by</h2><p>(1) group by的含义:将查询结果按照1个或多个字段进行分组，字段值相同的为一组<br>(2) group by可用于单个字段分组，也可用于多个字段分组</p><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><pre><code><span>select</span> <span>*</span> <span>from</span><span> employee;\r\n</span><span>+</span><span>--</span><span>----+------+--------+------+------+-------------+</span>\r\n<span>|</span> num  <span>|</span> d_id <span>|</span> name   <span>|</span> age  <span>|</span> sex  <span>|</span> homeaddr    <span>|</span>\r\n<span>+</span><span>--</span><span>----+------+--------+------+------+-------------+</span>\r\n<span>|</span>    <span>1</span> <span>|</span> <span>1001</span> <span>|</span> 张三   <span>|</span>   <span>26</span> <span>|</span> 男   <span>|</span> beijinghdq  <span>|</span>\r\n<span>|</span>    <span>2</span> <span>|</span> <span>1002</span> <span>|</span> 李四   <span>|</span>   <span>24</span> <span>|</span> 女   <span>|</span> beijingcpq  <span>|</span>\r\n<span>|</span>    <span>3</span> <span>|</span> <span>1003</span> <span>|</span> 王五   <span>|</span>   <span>25</span> <span>|</span> 男   <span>|</span> changshaylq <span>|</span>\r\n<span>|</span>    <span>4</span> <span>|</span> <span>1004</span> <span>|</span> Aric   <span>|</span>   <span>15</span> <span>|</span> 男   <span>|</span> England     <span>|</span>\r\n<span>+</span><span>--</span><span>----+------+--------+------+------+-------------+</span>\r\n<span><span><br></span></span><span><span>select <span>* <span>from employee <span><strong>group </strong><span><strong>by</strong> <span>d_id,sex;</span></span></span></span></span></span></span>\r\n<span><br>select</span> <span>*</span> <span>from</span> employee <strong><span>group</span> <span>by</span></strong><span> sex;\r\n</span><span>+</span><span>--</span><span>----+------+--------+------+------+------------+</span>\r\n<span>|</span> num  <span>|</span> d_id <span>|</span> name   <span>|</span> age  <span>|</span> sex  <span>|</span> homeaddr   <span>|</span>\r\n<span>+</span><span>--</span><span>----+------+--------+------+------+------------+</span>\r\n<span>|</span>    <span>2</span> <span>|</span> <span>1002</span> <span>|</span> 李四   <span>|</span>   <span>24</span> <span>|</span> 女   <span>|</span> beijingcpq <span>|</span>\r\n<span>|</span>    <span>1</span> <span>|</span> <span>1001</span> <span>|</span> 张三   <span>|</span>   <span>26</span> <span>|</span> 男   <span>|</span> beijinghdq <span>|</span>\r\n<span>+</span><span>--</span><span>----+------+--------+------+------+------------+</span>\r\n根据sex字段来分组，sex字段的全部值只有两个<span>(\'男\'和\'女\'</span><span>)，所以分为了两组\r\n当group by单独使用时，只显示出每组的第一条记录\r\n所以group by单独使用时的实际意义不大</span></code></pre><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><p>&nbsp;</p><h2>group by + group_concat()</h2><p>(1) group_concat(字段名)可以作为一个输出字段来使用，<br>(2) 表示分组之后，根据分组结果，使用group_concat()来放置每一组的某字段的值的集合</p><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><pre><code><span>select</span> sex <span>from</span> employee <span>group</span> <span>by</span><span> sex;\r\n</span><span>+</span><span>--</span><span>----+</span>\r\n<span>|</span> sex  <span>|</span>\r\n<span>+</span><span>--</span><span>----+</span>\r\n<span>|</span> 女   <span>|</span>\r\n<span>|</span> 男   <span>|</span>\r\n<span>+</span><span>--</span><span>----+</span>\r\n</code></pre><p>select sex,<strong>group_concat(name)</strong> from employee <strong>group by</strong> sex;<br>+–----±-------------------+<br>| sex  | group_concat(name) |<br>+–----±-------------------+<br>| 女   | 李四               |<br>| 男   | 张三,王五,Aric     |<br>+–----±-------------------+</p><p>select sex,<strong>group_concat(d_id)</strong> from employee <strong>group by</strong> sex;<br>+–----±-------------------+<br>| sex  | group_concat(d_id) |<br>+–----±-------------------+<br>| 女   | 1002               |<br>| 男   | 1001,1003,1004     |<br>+–----±-------------------+</p><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><p>&nbsp;</p><h2>group by + 集合函数</h2><p>(1) 通过group_concat()的启发，我们既然可以统计出每个分组的某字段的值的集合，那么我们也可以通过集合函数来对这个\"值的集合\"做一些操作</p><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><pre><code><span>select</span> sex,group_concat(age) <span>from</span> employee <span>group</span> <span>by</span><span> sex;\r\n</span><span>+</span><span>--</span><span>----+-------------------+</span>\r\n<span>|</span> sex  <span>|</span> group_concat(age) <span>|</span>\r\n<span>+</span><span>--</span><span>----+-------------------+</span>\r\n<span>|</span> 女   <span>|</span> <span>24</span>                <span>|</span>\r\n<span>|</span> 男   <span>|</span> <span>26</span>,<span>25</span>,<span>15</span>          <span>|</span>\r\n<span>+</span><span>--</span><span>----+-------------------+</span>\r\n<br>分别统计性别为男<span>/</span><span>女的人年龄平均值\r\n</span><span>select</span> sex,<strong><span>avg</span>(age)</strong> <span>from</span> employee <strong><span>group</span> <span>by</span></strong><span> sex;\r\n</span><span>+</span><span>--</span><span>----+----------+</span>\r\n<span>|</span> sex  <span>|</span> <span>avg</span>(age) <span>|</span>\r\n<span>+</span><span>--</span><span>----+----------+</span>\r\n<span>|</span> 女   <span>|</span>  <span>24.0000</span> <span>|</span>\r\n<span>|</span> 男   <span>|</span>  <span>22.0000</span> <span>|</span>\r\n<span>+</span><span>--</span><span>----+----------+</span>\r\n<br>分别统计性别为男<span>/</span><span>女的人的个数\r\n</span><span>select</span> sex,<strong><span>count</span>(sex)</strong> <span>from</span> employee <strong><span>group</span> <span>by</span></strong><span> sex;\r\n</span><span>+</span><span>--</span><span>----+------------+</span>\r\n<span>|</span> sex  <span>|</span> <span>count</span>(sex) <span>|</span>\r\n<span>+</span><span>--</span><span>----+------------+</span>\r\n<span>|</span> 女   <span>|</span>          <span>1</span> <span>|</span>\r\n<span>|</span> 男   <span>|</span>          <span>3</span> <span>|</span>\r\n<span>+</span><span>--</span><span>----+------------+</span></code></pre><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><p>&nbsp;</p><h2>group by + having</h2><p>(1) having 条件表达式：用来分组查询后指定一些条件来输出查询结果<br>(2) having作用和where一样，但having只能用于group by</p><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><pre><code><span>select</span> sex,<span>count</span>(sex) <span>from</span> employee <strong><span>group</span> <span>by</span></strong> sex <strong><span>having</span> </strong><span>count</span>(sex)<span>&gt;</span><span>2</span><span>;\r\n</span><span>+</span><span>--</span><span>----+------------+</span>\r\n<span>|</span> sex  <span>|</span> <span>count</span>(sex) <span>|</span>\r\n<span>+</span><span>--</span><span>----+------------+</span>\r\n<span>|</span> 男   <span>|</span>          <span>3</span> <span>|</span>\r\n<span>+</span><span>--</span><span>----+------------+</span></code></pre><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><p>&nbsp;</p><h2>group by + with rollup</h2><p>(1) with rollup的作用是：在最后新增一行，来记录当前列里所有记录的总和</p><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><pre><code><span>select</span> sex,<span>count</span>(age) <span>from</span> employee <strong><span>group</span> <span>by</span></strong> sex <span><strong>with</strong></span><span><span><strong> rollup</strong></span>;\r\n</span><span>+</span><span>--</span><span>----+------------+</span>\r\n<span>|</span> sex  <span>|</span> <span>count</span>(age) <span>|</span>\r\n<span>+</span><span>--</span><span>----+------------+</span>\r\n<span>|</span> 女   <span>|</span>          <span>1</span> <span>|</span>\r\n<span>|</span> 男   <span>|</span>          <span>3</span> <span>|</span>\r\n<span>|</span> <span>NULL</span> <span>|</span>          <span>4</span> <span>|</span>\r\n<span>+</span><span>--</span><span>----+------------+</span>\r\n</code></pre><p>select sex,group_concat(age) from employee <strong>group by </strong>sex <strong>with</strong><strong> rollup</strong>;<br>+–----±------------------+<br>| sex  | group_concat(age) |<br>+–----±------------------+<br>| 女   | 24                |<br>| 男   | 26,25,15          |<br>| NULL | 24,26,25,15       |<br>+–----±------------------+</p><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><p>&nbsp;</p>',0,1,1569644077,1569644077,0,0,0),(39,'更新数据',NULL,0,0,1,14,'<pre><code>Db<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'user\'</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'id\'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\'name\'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\'thinkphp\'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><p>实际生成的SQL语句可能是：</p><pre><code>UPDATE `think_user`  SET `name`<span class=\"token operator\">=</span><span class=\"token string\">\'thinkphp\'</span>  WHERE  `id` <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\r\n</code></pre><blockquote><p>update 方法返回影响数据的条数，没修改任何数据返回 0</p></blockquote><p>支持使用<code>data</code>方法传入要更新的数据</p><pre><code>Db<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'user\'</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'id\'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\'name\'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\'thinkphp\'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><blockquote><p>如果<code>update</code>方法和<code>data</code>方法同时传入更新数据，则会进行合并。</p></blockquote><p>如果数据中包含主键，可以直接使用：</p><pre><code>Db<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'user\'</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\'name\'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\'thinkphp\'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\'id\'</span><span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><p>实际生成的SQL语句和前面用法是一样的：</p><pre><code>UPDATE `think_user`  SET `name`<span class=\"token operator\">=</span><span class=\"token string\">\'thinkphp\'</span>  WHERE  `id` <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\r\n</code></pre><p>如果要更新的数据需要使用<code>SQL</code>函数或者其它字段，可以使用下面的方式：</p><pre><code>Db<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'user\'</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'id\'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">inc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'read_time\'</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">dec</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'score\'</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">exp</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\'UPPER(name)\'</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><p>实际生成的SQL语句：</p><pre><code>UPDATE `think_user`  SET `read_time` <span class=\"token operator\">=</span> `read_time` <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> `score` <span class=\"token operator\">=</span> `score` <span class=\"token operator\">-</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">,</span> `name` <span class=\"token operator\">=</span> <span class=\"token function\">UPPER</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>  WHERE  `id` <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\r\n</code></pre><p><code>V5.1.7+</code>版本以后，支持使用<code>raw</code>方法进行数据更新，适合在数组更新的情况。</p><pre><code>Db<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'user\'</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'id\'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\r\n        <span class=\"token string\">\'name\'</span>		<span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span>	Db<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">raw</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'UPPER(name)\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token string\">\'score\'</span>		<span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span>	Db<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">raw</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'score-3\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token string\">\'read_time\'</span>	<span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span>	Db<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">raw</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'read_time+1\'</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><h2>更新字段值</h2><pre><code>Db<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'user\'</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'id\'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">setField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\'thinkphp\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><p>最终生成的SQL语句可能如下：</p><pre><code>UPDATE `think_user`  SET `name` <span class=\"token operator\">=</span> <span class=\"token string\">\'thinkphp\'</span>  WHERE  `id` <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\r\n</code></pre><blockquote><p>setField 方法返回影响数据的条数，没修改任何数据字段返回 0</p></blockquote><p>可以使用<code>setInc/setDec</code>方法自增或自减一个字段的值（ 如不加第二个参数，默认步长为1）。</p><pre><code><span class=\"token comment\">// score 字段加 1</span>\r\nDb<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'think_user\'</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'id\'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">setInc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'score\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">// score 字段加 5</span>\r\nDb<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'think_user\'</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'id\'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">setInc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'score\'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">// score 字段减 1</span>\r\nDb<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'think_user\'</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'id\'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">setDec</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'score\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">// score 字段减 5</span>\r\nDb<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'think_user\'</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'id\'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">setDec</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'score\'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><p>最终生成的SQL语句可能是：</p><pre><code>UPDATE `think_user`  SET `score` <span class=\"token operator\">=</span> `score` <span class=\"token operator\">+</span> <span class=\"token number\">1</span>  WHERE  `id` <span class=\"token operator\">=</span> <span class=\"token number\">1</span> \r\nUPDATE `think_user`  SET `score` <span class=\"token operator\">=</span> `score` <span class=\"token operator\">+</span> <span class=\"token number\">5</span>  WHERE  `id` <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\r\nUPDATE `think_user`  SET `score` <span class=\"token operator\">=</span> `score` <span class=\"token operator\">-</span> <span class=\"token number\">1</span>  WHERE  `id` <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\r\nUPDATE `think_user`  SET `score` <span class=\"token operator\">=</span> `score` <span class=\"token operator\">-</span> <span class=\"token number\">5</span>  WHERE  `id` <span class=\"token operator\">=</span> <span class=\"token number\">1</span> \r\n</code></pre><p><code>setInc/setDec</code>支持延时更新，如果需要延时更新则传入第三个参数，下例中延时10秒更新。</p><pre><code>Db<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'user\'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'id\'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">setInc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'score\'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><blockquote><p>setInc/setDec 方法返回影响数据的条数，如果使用了延迟更新的话，可能会返回true</p></blockquote>',0,1,1569645403,1569645403,0,0,0),(40,'Session',NULL,0,0,1,15,'<p>可以直接使用<code>think\\facade\\Session</code>类操作<code>Session</code>。</p><p>版本新增功能<br>5.1.3get方法支持获取多级<br></p><h2>Session初始化</h2><p>Session会在第一次调用Session类的时候按照<code>session.php</code>配置的参数自动初始化：</p><pre><code><span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\r\n    <span class=\"token string\">\'prefix\'</span>         <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\'think\'</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\'type\'</span>           <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\'\'</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\'auto_start\'</span>     <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n</code></pre><p>如果我们使用上述的session配置参数的话，无需任何操作就可以直接调用Session类的相关方法，例如：</p><pre><code>Session<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\'thinkphp\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nSession<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><p>或者调用init方法进行初始化：</p><pre><code>Session<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\r\n    <span class=\"token string\">\'prefix\'</span>         <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\'module\'</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\'type\'</span>           <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\'\'</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\'auto_start\'</span>     <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><blockquote><p>如果你没有使用Session类进行Session操作的话，例如直接操作<code>$_SESSION</code>,必须使用上面的方式手动初始化或者直接调用<code>session_start()</code>方法进行<code>session</code>初始化。</p></blockquote><h2>设置参数</h2><p>默认支持的session设置参数包括：</p><p>参数描述<br>typesession类型<br>expiresession过期时间<br>prefixsession前缀<br>auto_start是否自动开启<br>use_trans_sid是否使用use_trans_sid<br>var_session_id请求session_id变量名<br>idsession_id<br>namesession_name<br>pathsession保存路径<br>domainsession cookie_domain<br>use_cookies是否使用cookie<br>cache_limitersession_cache_limiter<br>cache_expiresession_cache_expire<br>secure安全选项<br>httponly使用httponly<br></p><blockquote><p>如果做了session驱动扩展，可能有些参数不一定有效。</p></blockquote><h2>基础用法</h2><p>赋值</p><pre><code><span class=\"token comment\">// 赋值（当前作用域）</span>\r\nSession<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\'thinkphp\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">// 赋值think作用域</span>\r\nSession<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\'thinkphp\'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\'think\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><p>判断是否存在</p><pre><code><span class=\"token comment\">// 判断（当前作用域）是否赋值</span>\r\nSession<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">// 判断think作用域下面是否赋值</span>\r\nSession<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\'think\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><p>取值</p><pre><code><span class=\"token comment\">// 取值（当前作用域）</span>\r\nSession<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">// 取值think作用域</span>\r\nSession<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\'think\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><p>如果name的值不存在，返回<code>null</code>。</p><p>删除</p><pre><code><span class=\"token comment\">// 删除（当前作用域）</span>\r\nSession<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">// 删除think作用域下面的值</span>\r\nSession<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\'think\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><p>指定作用域</p><pre><code><span class=\"token comment\">// 指定当前作用域</span>\r\nSession<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">prefix</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'think\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><p>取值并删除</p><pre><code><span class=\"token comment\">// 取值并删除</span>\r\nSession<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">pull</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><p>如果name的值不存在，返回<code>Null</code>。</p><p>清空</p><pre><code><span class=\"token comment\">// 清除session（当前作用域）</span>\r\nSession<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">// 清除think作用域</span>\r\nSession<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'think\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><p>闪存数据，下次请求之前有效</p><pre><code><span class=\"token comment\">// 设置session 并且在下一次请求之前有效</span>\r\nSession<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">flash</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\'value\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><p>提前清除当前请求有效的数据</p><pre><code><span class=\"token comment\">// 清除当前请求有效的session</span>\r\nSession<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><h2>二级数组</h2><p>支持session的二维数组操作，例如：</p><pre><code><span class=\"token comment\">// 赋值（当前作用域）</span>\r\nSession<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name.item\'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\'thinkphp\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">// 判断（当前作用域）是否赋值</span>\r\nSession<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name.item\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">// 取值（当前作用域）</span>\r\nSession<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name.item\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">// 删除（当前作用域）</span>\r\nSession<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name.item\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><h2>助手函数</h2><p>系统也提供了助手函数session完成相同的功能，例如：</p><pre><code><span class=\"token comment\">// 初始化session</span>\r\n<span class=\"token function\">session</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\r\n    <span class=\"token string\">\'prefix\'</span>     <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\'module\'</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\'type\'</span>       <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\'\'</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\'auto_start\'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// 赋值（当前作用域）</span>\r\n<span class=\"token function\">session</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\'thinkphp\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// 赋值think作用域</span>\r\n<span class=\"token function\">session</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\'thinkphp\'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\'think\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// 判断（当前作用域）是否赋值</span>\r\n<span class=\"token function\">session</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'?name\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// 取值（当前作用域）</span>\r\n<span class=\"token function\">session</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// 取值think作用域</span>\r\n<span class=\"token function\">session</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\'\'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\'think\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// 删除（当前作用域）</span>\r\n<span class=\"token function\">session</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// 清除session（当前作用域）</span>\r\n<span class=\"token function\">session</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// 清除think作用域</span>\r\n<span class=\"token function\">session</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\'think\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><h2>Session驱动</h2><p>支持指定 Session 驱动，配置文件如下：</p><pre><code><span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\r\n    <span class=\"token string\">\'type\'</span>       <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\'redis\'</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\'prefix\'</span>     <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\'module\'</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\'auto_start\'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\r\n     <span class=\"token comment\">// redis主机</span>\r\n    <span class=\"token string\">\'host\'</span>       <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\'127.0.0.1\'</span><span class=\"token punctuation\">,</span>\r\n     <span class=\"token comment\">// redis端口</span>\r\n    <span class=\"token string\">\'port\'</span>       <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">6379</span><span class=\"token punctuation\">,</span>\r\n     <span class=\"token comment\">// 密码</span>\r\n    <span class=\"token string\">\'password\'</span>   <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\'\'</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">]</span>\r\n</code></pre><p>表示使用<code>redis</code>作为<code>session</code>类型。</p><p>目前内置支持使用<code>redis</code>、<code>memcache</code>和<code>memcached</code>作为session驱动类型。</p>',0,1,1569645663,1569645663,0,0,0),(41,'Cookie',NULL,0,0,1,15,'<h2>概述</h2><p>ThinkPHP采用<code>think\\facade\\Cookie</code>类提供Cookie支持。</p><h2>配置</h2><p>配置文件位于配置目录下的<code>cookie.php</code>文件，无需手动初始化，系统会自动在调用之前进行Cookie初始化工作。</p><h2>基本操作</h2><h3>初始化</h3><pre><code><span class=\"token comment\">// cookie初始化</span>\r\nCookie<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\'prefix\'</span><span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token string\">\'think_\'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\'expire\'</span><span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token number\">3600</span><span class=\"token punctuation\">,</span><span class=\"token string\">\'path\'</span><span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token string\">\'/\'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">// 指定当前前缀</span>\r\nCookie<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">prefix</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'think_\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><p>支持的参数及默认值如下：</p><pre><code><span class=\"token comment\">// cookie 名称前缀</span>\r\n<span class=\"token string\">\'prefix\'</span>    <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\'\'</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token comment\">// cookie 保存时间</span>\r\n<span class=\"token string\">\'expire\'</span>    <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token comment\">// cookie 保存路径</span>\r\n<span class=\"token string\">\'path\'</span>      <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\'/\'</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token comment\">// cookie 有效域名</span>\r\n<span class=\"token string\">\'domain\'</span>    <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\'\'</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token comment\">//  cookie 启用安全传输</span>\r\n<span class=\"token string\">\'secure\'</span>    <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token comment\">// httponly设置</span>\r\n<span class=\"token string\">\'httponly\'</span>  <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\'\'</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token comment\">// 是否使用 setcookie</span>\r\n<span class=\"token string\">\'setcookie\'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\r\n</code></pre><h3>设置</h3><pre><code><span class=\"token comment\">// 设置Cookie 有效期为 3600秒</span>\r\nCookie<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\'value\'</span><span class=\"token punctuation\">,</span><span class=\"token number\">3600</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">// 设置cookie 前缀为think_</span>\r\nCookie<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\'value\'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string\">\'prefix\'</span><span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token string\">\'think_\'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\'expire\'</span><span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token number\">3600</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">// 支持数组</span>\r\nCookie<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><h3>永久保存</h3><pre><code><span class=\"token comment\">// 永久保存Cookie</span>\r\nCookie<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">forever</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\'value\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><h3>判断</h3><pre><code>Cookie<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">// 判断指定前缀的cookie值是否存在</span>\r\nCookie<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\'think_\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><h3>获取</h3><pre><code>Cookie<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">// 获取指定前缀的cookie值</span>\r\nCookie<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\'think_\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><h3>删除</h3><pre><code><span class=\"token comment\">//删除cookie</span>\r\nCookie<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">// 删除指定前缀的cookie</span>\r\nCookie<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\'think_\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><h3>清空</h3><pre><code><span class=\"token comment\">// 清空指定前缀的cookie</span>\r\nCookie<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'think_\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre><blockquote><p>如果不指定前缀，不能做清空操作</p></blockquote><h2>助手函数</h2><p>系统提供了cookie助手函数用于基本的cookie操作，例如：</p><pre><code><span class=\"token comment\">// 初始化</span>\r\n<span class=\"token function\">cookie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\'prefix\'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\'think_\'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\'expire\'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">3600</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// 设置</span>\r\n<span class=\"token function\">cookie</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\'value\'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3600</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// 获取</span>\r\necho <span class=\"token function\">cookie</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// 删除</span>\r\n<span class=\"token function\">cookie</span><span class=\"token punctuation\">(</span><span class=\"token string\">\'name\'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// 清除</span>\r\n<span class=\"token function\">cookie</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\'think_\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre>',0,1,1569645702,1569645702,2,0,0),(57,'MySQL 自增长主键 在删除数据后依然接着删除的数据增长',NULL,0,0,1,13,'<p>如题，比如有主键为1,2,3的三条数据，删除2,3两条数据后再新增数据，主键是从4开始的。</p><p>原因是主键是唯一的，绝对不能出现重复。比如有100条数据，主键为1到100，删除了主键为50的数据之后，还剩99条数据，这个时候再新增数据，主键是要从101开始，而不是第100条数据的100，不然会重复，有两个主键为100的数据。</p><p>不过可以手动修改。</p><p>1，删除原有主键：</p><p>ALTER TABLE `table_name` DROP `id`;</p><p>2，添加新主键字段：</p><p>ALTER TABLE `table_name` ADD `id` int NOT NULL FIRST;</p><p>3，设置新主键：</p><p>ALTER TABLE `table_name` MODIFY COLUMN `id` int NOT NULL AUTO_INCREMENT,ADD PRIMARY KEY(id); </p><p>———————————————— </p><p>版权声明：本文为CSDN博主「KSHATR1YA」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。 </p><p>原文链接：<a href=\"https://blog.csdn.net/jjs2749651/article/details/80771749\" rel=\"nofollow\">https://blog.csdn.net/jjs2749651/article/details/80771749</a></p>',0,1,1569668259,1569668259,0,0,0);
/*!40000 ALTER TABLE `think_blog` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `think_cate`
--

DROP TABLE IF EXISTS `think_cate`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `think_cate` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL COMMENT '栏目名称',
  `amount` int(11) NOT NULL DEFAULT 0 COMMENT '博客数量',
  PRIMARY KEY (`id`),
  UNIQUE KEY `think_cate_name_uindex` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COMMENT='博客栏目名称分类';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `think_cate`
--

LOCK TABLES `think_cate` WRITE;
/*!40000 ALTER TABLE `think_cate` DISABLE KEYS */;
INSERT INTO `think_cate` VALUES (1,'PHP',0),(2,'Linux',0),(3,'Python',0),(4,'HTML',0);
/*!40000 ALTER TABLE `think_cate` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `think_code`
--

DROP TABLE IF EXISTS `think_code`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `think_code` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(100) NOT NULL,
  `author` varchar(40) NOT NULL,
  `submission_date` int(10) unsigned DEFAULT NULL,
  `code` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `think_code`
--

LOCK TABLES `think_code` WRITE;
/*!40000 ALTER TABLE `think_code` DISABLE KEYS */;
/*!40000 ALTER TABLE `think_code` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `think_students`
--

DROP TABLE IF EXISTS `think_students`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `think_students` (
  `think_id` int(11) NOT NULL AUTO_INCREMENT,
  `think_name` varchar(8) NOT NULL,
  `think_class` varchar(10) NOT NULL,
  `submission_date` date DEFAULT NULL,
  PRIMARY KEY (`think_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `think_students`
--

LOCK TABLES `think_students` WRITE;
/*!40000 ALTER TABLE `think_students` DISABLE KEYS */;
INSERT INTO `think_students` VALUES (1,'杜韦凡','信息工程2班','2019-09-08');
/*!40000 ALTER TABLE `think_students` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `think_user`
--

DROP TABLE IF EXISTS `think_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `think_user` (
  `Uid` int(11) NOT NULL AUTO_INCREMENT,
  `Email` varchar(30) NOT NULL,
  `Mobile` varchar(15) NOT NULL,
  `NickName` varchar(50) NOT NULL,
  `Password` varchar(50) NOT NULL,
  `CreateTime` int(11) NOT NULL DEFAULT 0,
  `UpdateTime` int(11) NOT NULL DEFAULT 0,
  `IsAdmin` tinyint(4) NOT NULL DEFAULT 0,
  `Status` tinyint(4) NOT NULL DEFAULT 1,
  `SignupIp` int(4) DEFAULT NULL,
  `LastLoginTime` int(11) DEFAULT NULL,
  `LastLoginIp` int(4) DEFAULT NULL,
  `UserImg` varchar(100) DEFAULT '1',
  `BlogCount` int(10) DEFAULT 0,
  `Fans` int(10) DEFAULT 0,
  `stars` int(10) DEFAULT 0 COMMENT '点赞数',
  `collection` int(11) DEFAULT 0 COMMENT '被收藏数',
  PRIMARY KEY (`Uid`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8mb4 COMMENT='用户数据表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `think_user`
--

LOCK TABLES `think_user` WRITE;
/*!40000 ALTER TABLE `think_user` DISABLE KEYS */;
INSERT INTO `think_user` VALUES (12,'123@qq.com','18146716264','wifidu','f0eea57b1560db0783e2358ce07e6961',1569666868,1569668115,0,1,NULL,1569668115,0,'20190926/473e61c36b91d76d3cd8bbd1f578cd60.jpg',24,0,0,0),(13,'111@qq.com','18146716262','lalalala','f0eea57b1560db0783e2358ce07e6961',1569666886,1569668120,0,1,NULL,1569668120,0,'20190926/f406f516d898689edc0c41bee52ae175.jpeg',11,0,0,0),(14,'666@qq.com','18146716263','hahaha','f0eea57b1560db0783e2358ce07e6961',1569666905,1569667855,0,1,NULL,1569667855,0,'20190927/1383db27378ca5046eef1a73ffe96537.jpeg',4,0,0,0),(15,'875147715@qq.com','18146716265','爱你爱你爱你','f0eea57b1560db0783e2358ce07e6961',1569666794,1569666805,0,1,NULL,1569666805,0,'20190927/d471706b152f26056a17c7d5c009e554.jpeg',3,0,2,0);
/*!40000 ALTER TABLE `think_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `think_user_Collection`
--

DROP TABLE IF EXISTS `think_user_Collection`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `think_user_Collection` (
  `uid` int(10) DEFAULT NULL COMMENT '用户id',
  `bid` int(10) DEFAULT NULL COMMENT '用户收藏i博客的d',
  `create_time` int(15) DEFAULT NULL COMMENT '收藏时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='用户收藏博客';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `think_user_Collection`
--

LOCK TABLES `think_user_Collection` WRITE;
/*!40000 ALTER TABLE `think_user_Collection` DISABLE KEYS */;
/*!40000 ALTER TABLE `think_user_Collection` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `think_user_follow`
--

DROP TABLE IF EXISTS `think_user_follow`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `think_user_follow` (
  `following` int(10) DEFAULT NULL COMMENT '被关注的人',
  `follower` int(10) DEFAULT NULL COMMENT '跟随者',
  `add_time` int(15) DEFAULT 0 COMMENT '关注时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='粉丝表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `think_user_follow`
--

LOCK TABLES `think_user_follow` WRITE;
/*!40000 ALTER TABLE `think_user_follow` DISABLE KEYS */;
/*!40000 ALTER TABLE `think_user_follow` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `think_user_star`
--

DROP TABLE IF EXISTS `think_user_star`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `think_user_star` (
  `uid` int(10) DEFAULT NULL COMMENT '用户id',
  `bid` int(11) DEFAULT NULL COMMENT '点过赞的博客id',
  `create_time` int(11) DEFAULT NULL COMMENT '点赞时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='用户点过赞的博客';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `think_user_star`
--

LOCK TABLES `think_user_star` WRITE;
/*!40000 ALTER TABLE `think_user_star` DISABLE KEYS */;
INSERT INTO `think_user_star` VALUES (14,41,1569667863);
/*!40000 ALTER TABLE `think_user_star` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2019-09-28 20:15:02
